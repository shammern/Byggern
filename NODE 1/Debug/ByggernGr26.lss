
ByggernGr26.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000016e  00800100  00001310  000013a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001310  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  0080026e  0080026e  00001512  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001512  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001570  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000270  00000000  00000000  000015ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002cd9  00000000  00000000  0000181c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000118a  00000000  00000000  000044f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014e6  00000000  00000000  0000567f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005e4  00000000  00000000  00006b68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008d1  00000000  00000000  0000714c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014d9  00000000  00000000  00007a1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  00008ef6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 4f 04 	jmp	0x89e	; 0x89e <__vector_3>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <vfprintf+0x4e>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e0 e1       	ldi	r30, 0x10	; 16
     37c:	f3 e1       	ldi	r31, 0x13	; 19
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	ae 36       	cpi	r26, 0x6E	; 110
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	ae e6       	ldi	r26, 0x6E	; 110
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a3 38       	cpi	r26, 0x83	; 131
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <main>
     39e:	0c 94 86 09 	jmp	0x130c	; 0x130c <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_init>:
     3a6:	81 b3       	in	r24, 0x11	; 17
     3a8:	80 62       	ori	r24, 0x20	; 32
     3aa:	81 bb       	out	0x11, r24	; 17
     3ac:	8f b5       	in	r24, 0x2f	; 47
     3ae:	83 64       	ori	r24, 0x43	; 67
     3b0:	8f bd       	out	0x2f, r24	; 47
     3b2:	8e b5       	in	r24, 0x2e	; 46
     3b4:	89 61       	ori	r24, 0x19	; 25
     3b6:	8e bd       	out	0x2e, r24	; 46
     3b8:	81 b3       	in	r24, 0x11	; 17
     3ba:	8f 7e       	andi	r24, 0xEF	; 239
     3bc:	81 bb       	out	0x11, r24	; 17
     3be:	88 b3       	in	r24, 0x18	; 24
     3c0:	80 61       	ori	r24, 0x10	; 16
     3c2:	88 bb       	out	0x18, r24	; 24
     3c4:	08 95       	ret

000003c6 <interrupt_init>:
	
	//Enable global interrupts, mulig denne er feil
	sei();
}

void isr_func(){
     3c6:	f8 94       	cli
     3c8:	86 b1       	in	r24, 0x06	; 6
     3ca:	8e 7f       	andi	r24, 0xFE	; 254
     3cc:	86 b9       	out	0x06, r24	; 6
     3ce:	80 e2       	ldi	r24, 0x20	; 32
     3d0:	8b bf       	out	0x3b, r24	; 59
     3d2:	8e ef       	ldi	r24, 0xFE	; 254
     3d4:	86 bf       	out	0x36, r24	; 54
     3d6:	78 94       	sei
     3d8:	08 95       	ret

000003da <CAN_init>:
	
}

void CAN_init(uint8_t mode){
     3da:	cf 93       	push	r28
     3dc:	c8 2f       	mov	r28, r24
	//Init CAN in specified mode
	mcp2515_init();	
     3de:	0e 94 e7 02 	call	0x5ce	; 0x5ce <mcp2515_init>
	mcp2515_set_mode(mode);
     3e2:	8c 2f       	mov	r24, r28
     3e4:	0e 94 24 03 	call	0x648	; 0x648 <mcp2515_set_mode>
	
	//Recieve all msg/clear buffers
	mcp2515_write(MCP_RXB0CTRL, MCP_RXM1 | MCP_RXM0);
     3e8:	60 e6       	ldi	r22, 0x60	; 96
     3ea:	80 e6       	ldi	r24, 0x60	; 96
     3ec:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <mcp2515_write>
	
	//Enable interrupt flag for successful reception in buffer 0 and 1
	mcp2515_bit_modify(MCP_CANINTE, MCP_RX1IF | MCP_RX0IF, 0xFF);
     3f0:	4f ef       	ldi	r20, 0xFF	; 255
     3f2:	63 e0       	ldi	r22, 0x03	; 3
     3f4:	8b e2       	ldi	r24, 0x2B	; 43
     3f6:	0e 94 0a 03 	call	0x614	; 0x614 <mcp2515_bit_modify>
	
	interrupt_init();
     3fa:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <interrupt_init>
}
     3fe:	cf 91       	pop	r28
     400:	08 95       	ret

00000402 <CAN_transmit>:


void CAN_transmit(CAN_MESSAGE *msg){
     402:	0f 93       	push	r16
     404:	1f 93       	push	r17
     406:	cf 93       	push	r28
     408:	df 93       	push	r29
     40a:	8c 01       	movw	r16, r24
	//printf("In transmit");
	mcp2515_write(MCP_TXB0SIDH, msg->msg_ID / 8);			//Sets 8 MSB in msgID
     40c:	fc 01       	movw	r30, r24
     40e:	60 81       	ld	r22, Z
     410:	71 81       	ldd	r23, Z+1	; 0x01
     412:	76 95       	lsr	r23
     414:	67 95       	ror	r22
     416:	76 95       	lsr	r23
     418:	67 95       	ror	r22
     41a:	76 95       	lsr	r23
     41c:	67 95       	ror	r22
     41e:	81 e3       	ldi	r24, 0x31	; 49
     420:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDL, (msg->msg_ID % 8) << 5);	//Sets 3LSB in msgID
     424:	f8 01       	movw	r30, r16
     426:	60 81       	ld	r22, Z
     428:	62 95       	swap	r22
     42a:	66 0f       	add	r22, r22
     42c:	60 7e       	andi	r22, 0xE0	; 224
     42e:	82 e3       	ldi	r24, 0x32	; 50
     430:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <mcp2515_write>
	mcp2515_write(MCP_TXB0DLC, msg->msg_length);		//Sets datalength code bits
     434:	f8 01       	movw	r30, r16
     436:	62 81       	ldd	r22, Z+2	; 0x02
     438:	85 e3       	ldi	r24, 0x35	; 53
     43a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <mcp2515_write>
	for(int m = 0; m < msg->msg_length; m++){
     43e:	c0 e0       	ldi	r28, 0x00	; 0
     440:	d0 e0       	ldi	r29, 0x00	; 0
     442:	09 c0       	rjmp	.+18     	; 0x456 <CAN_transmit+0x54>
		mcp2515_write(MCP_TXB0D0 + m, msg->data[m]);		//Puts data (one byte at a time) in send buffer
     444:	f8 01       	movw	r30, r16
     446:	ec 0f       	add	r30, r28
     448:	fd 1f       	adc	r31, r29
     44a:	63 81       	ldd	r22, Z+3	; 0x03
     44c:	8c 2f       	mov	r24, r28
     44e:	8a 5c       	subi	r24, 0xCA	; 202
     450:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <mcp2515_write>
void CAN_transmit(CAN_MESSAGE *msg){
	//printf("In transmit");
	mcp2515_write(MCP_TXB0SIDH, msg->msg_ID / 8);			//Sets 8 MSB in msgID
	mcp2515_write(MCP_TXB0SIDL, (msg->msg_ID % 8) << 5);	//Sets 3LSB in msgID
	mcp2515_write(MCP_TXB0DLC, msg->msg_length);		//Sets datalength code bits
	for(int m = 0; m < msg->msg_length; m++){
     454:	21 96       	adiw	r28, 0x01	; 1
     456:	f8 01       	movw	r30, r16
     458:	82 81       	ldd	r24, Z+2	; 0x02
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	c8 17       	cp	r28, r24
     45e:	d9 07       	cpc	r29, r25
     460:	8c f3       	brlt	.-30     	; 0x444 <CAN_transmit+0x42>
		mcp2515_write(MCP_TXB0D0 + m, msg->data[m]);		//Puts data (one byte at a time) in send buffer
	}
	mcp2515_request_to_send();							//Sends data on send buffer
     462:	0e 94 02 03 	call	0x604	; 0x604 <mcp2515_request_to_send>
}
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	1f 91       	pop	r17
     46c:	0f 91       	pop	r16
     46e:	08 95       	ret

00000470 <CAN_recieve>:

uint8_t CAN_recieve(CAN_MESSAGE *msg){
     470:	ff 92       	push	r15
     472:	0f 93       	push	r16
     474:	1f 93       	push	r17
     476:	cf 93       	push	r28
     478:	df 93       	push	r29
     47a:	8c 01       	movw	r16, r24
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
     47c:	8c e2       	ldi	r24, 0x2C	; 44
     47e:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     482:	98 2f       	mov	r25, r24
     484:	91 70       	andi	r25, 0x01	; 1
     486:	f9 2e       	mov	r15, r25
     488:	80 ff       	sbrs	r24, 0
     48a:	30 c0       	rjmp	.+96     	; 0x4ec <CAN_recieve+0x7c>
		//Read from the buffers and set the id combined with the low and high bits
		uint8_t id_highbit = mcp2515_read(MCP_RXB0SIDH);
     48c:	81 e6       	ldi	r24, 0x61	; 97
     48e:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     492:	c8 2f       	mov	r28, r24
		uint8_t id_lowbit = mcp2515_read(MCP_RXB0SIDL);
     494:	82 e6       	ldi	r24, 0x62	; 98
     496:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     49a:	d8 2f       	mov	r29, r24
		
		msg->msg_length = mcp2515_read(MCP_RXB0DLC);
     49c:	85 e6       	ldi	r24, 0x65	; 101
     49e:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     4a2:	f8 01       	movw	r30, r16
     4a4:	82 83       	std	Z+2, r24	; 0x02
		msg->msg_ID = (id_lowbit>>5) + (id_highbit<<3);
     4a6:	d2 95       	swap	r29
     4a8:	d6 95       	lsr	r29
     4aa:	d7 70       	andi	r29, 0x07	; 7
     4ac:	8c 2f       	mov	r24, r28
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	88 0f       	add	r24, r24
     4b2:	99 1f       	adc	r25, r25
     4b4:	88 0f       	add	r24, r24
     4b6:	99 1f       	adc	r25, r25
     4b8:	88 0f       	add	r24, r24
     4ba:	99 1f       	adc	r25, r25
     4bc:	8d 0f       	add	r24, r29
     4be:	91 1d       	adc	r25, r1
     4c0:	91 83       	std	Z+1, r25	; 0x01
     4c2:	80 83       	st	Z, r24
		for(int m = 0; m < msg->msg_length; m++){
     4c4:	c0 e0       	ldi	r28, 0x00	; 0
     4c6:	d0 e0       	ldi	r29, 0x00	; 0
     4c8:	09 c0       	rjmp	.+18     	; 0x4dc <CAN_recieve+0x6c>
			msg->data[m] = mcp2515_read(MCP_RXB0D0 + m);	
     4ca:	8c 2f       	mov	r24, r28
     4cc:	8a 59       	subi	r24, 0x9A	; 154
     4ce:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     4d2:	f8 01       	movw	r30, r16
     4d4:	ec 0f       	add	r30, r28
     4d6:	fd 1f       	adc	r31, r29
     4d8:	83 83       	std	Z+3, r24	; 0x03
		uint8_t id_highbit = mcp2515_read(MCP_RXB0SIDH);
		uint8_t id_lowbit = mcp2515_read(MCP_RXB0SIDL);
		
		msg->msg_length = mcp2515_read(MCP_RXB0DLC);
		msg->msg_ID = (id_lowbit>>5) + (id_highbit<<3);
		for(int m = 0; m < msg->msg_length; m++){
     4da:	21 96       	adiw	r28, 0x01	; 1
     4dc:	f8 01       	movw	r30, r16
     4de:	82 81       	ldd	r24, Z+2	; 0x02
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	c8 17       	cp	r28, r24
     4e4:	d9 07       	cpc	r29, r25
     4e6:	8c f3       	brlt	.-30     	; 0x4ca <CAN_recieve+0x5a>
		}
	}
	else{
		return 1;	
	}
	return 0;
     4e8:	f1 2c       	mov	r15, r1
     4ea:	36 c0       	rjmp	.+108    	; 0x558 <__stack+0x59>
		msg->msg_ID = (id_lowbit>>5) + (id_highbit<<3);
		for(int m = 0; m < msg->msg_length; m++){
			msg->data[m] = mcp2515_read(MCP_RXB0D0 + m);	
		}
	}
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
     4ec:	8c e2       	ldi	r24, 0x2C	; 44
     4ee:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     4f2:	81 ff       	sbrs	r24, 1
     4f4:	2f c0       	rjmp	.+94     	; 0x554 <__stack+0x55>
		//Read from the buffers and set the id combined with the low and high bits
		uint8_t id_highbit = mcp2515_read(MCP_RXB1SIDH);
     4f6:	81 e7       	ldi	r24, 0x71	; 113
     4f8:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     4fc:	c8 2f       	mov	r28, r24
		uint8_t id_lowbit = mcp2515_read(MCP_RXB1SIDL);
     4fe:	82 e7       	ldi	r24, 0x72	; 114
     500:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     504:	d8 2f       	mov	r29, r24
		
		msg->msg_length = mcp2515_read(MCP_RXB1DLC);
     506:	85 e7       	ldi	r24, 0x75	; 117
     508:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     50c:	f8 01       	movw	r30, r16
     50e:	82 83       	std	Z+2, r24	; 0x02
		msg->msg_ID = (id_lowbit>>5) + (id_highbit<<3);
     510:	d2 95       	swap	r29
     512:	d6 95       	lsr	r29
     514:	d7 70       	andi	r29, 0x07	; 7
     516:	8c 2f       	mov	r24, r28
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	88 0f       	add	r24, r24
     51c:	99 1f       	adc	r25, r25
     51e:	88 0f       	add	r24, r24
     520:	99 1f       	adc	r25, r25
     522:	88 0f       	add	r24, r24
     524:	99 1f       	adc	r25, r25
     526:	8d 0f       	add	r24, r29
     528:	91 1d       	adc	r25, r1
     52a:	91 83       	std	Z+1, r25	; 0x01
     52c:	80 83       	st	Z, r24
		for(int m = 0; m < msg->msg_length; m++){
     52e:	c0 e0       	ldi	r28, 0x00	; 0
     530:	d0 e0       	ldi	r29, 0x00	; 0
     532:	09 c0       	rjmp	.+18     	; 0x546 <__stack+0x47>
			msg->data[m] = mcp2515_read(MCP_RXB1D0 + m);	
     534:	8c 2f       	mov	r24, r28
     536:	8a 58       	subi	r24, 0x8A	; 138
     538:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     53c:	f8 01       	movw	r30, r16
     53e:	ec 0f       	add	r30, r28
     540:	fd 1f       	adc	r31, r29
     542:	83 83       	std	Z+3, r24	; 0x03
		uint8_t id_highbit = mcp2515_read(MCP_RXB1SIDH);
		uint8_t id_lowbit = mcp2515_read(MCP_RXB1SIDL);
		
		msg->msg_length = mcp2515_read(MCP_RXB1DLC);
		msg->msg_ID = (id_lowbit>>5) + (id_highbit<<3);
		for(int m = 0; m < msg->msg_length; m++){
     544:	21 96       	adiw	r28, 0x01	; 1
     546:	f8 01       	movw	r30, r16
     548:	82 81       	ldd	r24, Z+2	; 0x02
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	c8 17       	cp	r28, r24
     54e:	d9 07       	cpc	r29, r25
     550:	8c f3       	brlt	.-30     	; 0x534 <__stack+0x35>
     552:	02 c0       	rjmp	.+4      	; 0x558 <__stack+0x59>
			msg->data[m] = mcp2515_read(MCP_RXB1D0 + m);	
		}
	}
	else{
		return 1;	
     554:	ff 24       	eor	r15, r15
     556:	f3 94       	inc	r15
	}
	return 0;
}
     558:	8f 2d       	mov	r24, r15
     55a:	df 91       	pop	r29
     55c:	cf 91       	pop	r28
     55e:	1f 91       	pop	r17
     560:	0f 91       	pop	r16
     562:	ff 90       	pop	r15
     564:	08 95       	ret

00000566 <mcp2515_reset>:
	SPI_slaveSelect();
	SPI_write(MCP_READ_STATUS);
	status = SPI_receive();
	SPI_slaveDeselect();
	return status;
}
     566:	0e 94 2c 04 	call	0x858	; 0x858 <SPI_slaveSelect>
     56a:	80 ec       	ldi	r24, 0xC0	; 192
     56c:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     570:	0e 94 30 04 	call	0x860	; 0x860 <SPI_slaveDeselect>
     574:	8f ef       	ldi	r24, 0xFF	; 255
     576:	97 e1       	ldi	r25, 0x17	; 23
     578:	01 97       	sbiw	r24, 0x01	; 1
     57a:	f1 f7       	brne	.-4      	; 0x578 <mcp2515_reset+0x12>
     57c:	00 c0       	rjmp	.+0      	; 0x57e <mcp2515_reset+0x18>
     57e:	00 00       	nop
     580:	08 95       	ret

00000582 <mcp2515_read>:
     582:	cf 93       	push	r28
     584:	c8 2f       	mov	r28, r24
     586:	0e 94 2c 04 	call	0x858	; 0x858 <SPI_slaveSelect>
     58a:	83 e0       	ldi	r24, 0x03	; 3
     58c:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     590:	8c 2f       	mov	r24, r28
     592:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     596:	0e 94 27 04 	call	0x84e	; 0x84e <SPI_receive>
     59a:	c8 2f       	mov	r28, r24
     59c:	0e 94 30 04 	call	0x860	; 0x860 <SPI_slaveDeselect>
     5a0:	8c 2f       	mov	r24, r28
     5a2:	cf 91       	pop	r28
     5a4:	08 95       	ret

000005a6 <mcp2515_write>:
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
     5aa:	d8 2f       	mov	r29, r24
     5ac:	c6 2f       	mov	r28, r22
     5ae:	0e 94 2c 04 	call	0x858	; 0x858 <SPI_slaveSelect>
     5b2:	82 e0       	ldi	r24, 0x02	; 2
     5b4:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     5b8:	8d 2f       	mov	r24, r29
     5ba:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     5be:	8c 2f       	mov	r24, r28
     5c0:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     5c4:	0e 94 30 04 	call	0x860	; 0x860 <SPI_slaveDeselect>
     5c8:	df 91       	pop	r29
     5ca:	cf 91       	pop	r28
     5cc:	08 95       	ret

000005ce <mcp2515_init>:
     5ce:	0e 94 17 04 	call	0x82e	; 0x82e <SPI_init>
     5d2:	0e 94 b3 02 	call	0x566	; 0x566 <mcp2515_reset>
     5d6:	8e e0       	ldi	r24, 0x0E	; 14
     5d8:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
     5dc:	80 7e       	andi	r24, 0xE0	; 224
     5de:	80 38       	cpi	r24, 0x80	; 128
     5e0:	21 f0       	breq	.+8      	; 0x5ea <mcp2515_init+0x1c>
     5e2:	86 e0       	ldi	r24, 0x06	; 6
     5e4:	91 e0       	ldi	r25, 0x01	; 1
     5e6:	0e 94 4a 05 	call	0xa94	; 0xa94 <puts>
     5ea:	61 ec       	ldi	r22, 0xC1	; 193
     5ec:	8a e2       	ldi	r24, 0x2A	; 42
     5ee:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <mcp2515_write>
     5f2:	61 ef       	ldi	r22, 0xF1	; 241
     5f4:	89 e2       	ldi	r24, 0x29	; 41
     5f6:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <mcp2515_write>
     5fa:	65 e0       	ldi	r22, 0x05	; 5
     5fc:	88 e2       	ldi	r24, 0x28	; 40
     5fe:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <mcp2515_write>
     602:	08 95       	ret

00000604 <mcp2515_request_to_send>:
     604:	0e 94 2c 04 	call	0x858	; 0x858 <SPI_slaveSelect>
     608:	81 e8       	ldi	r24, 0x81	; 129
     60a:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     60e:	0e 94 30 04 	call	0x860	; 0x860 <SPI_slaveDeselect>
     612:	08 95       	ret

00000614 <mcp2515_bit_modify>:
     614:	1f 93       	push	r17
     616:	cf 93       	push	r28
     618:	df 93       	push	r29
     61a:	18 2f       	mov	r17, r24
     61c:	d6 2f       	mov	r29, r22
     61e:	c4 2f       	mov	r28, r20
     620:	0e 94 2c 04 	call	0x858	; 0x858 <SPI_slaveSelect>
     624:	85 e0       	ldi	r24, 0x05	; 5
     626:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     62a:	81 2f       	mov	r24, r17
     62c:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     630:	8d 2f       	mov	r24, r29
     632:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     636:	8c 2f       	mov	r24, r28
     638:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
     63c:	0e 94 30 04 	call	0x860	; 0x860 <SPI_slaveDeselect>
     640:	df 91       	pop	r29
     642:	cf 91       	pop	r28
     644:	1f 91       	pop	r17
     646:	08 95       	ret

00000648 <mcp2515_set_mode>:

uint8_t mcp2515_set_mode(uint8_t mode){
     648:	cf 93       	push	r28
     64a:	c8 2f       	mov	r28, r24
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, mode);
     64c:	48 2f       	mov	r20, r24
     64e:	60 ee       	ldi	r22, 0xE0	; 224
     650:	8f e0       	ldi	r24, 0x0F	; 15
     652:	0e 94 0a 03 	call	0x614	; 0x614 <mcp2515_bit_modify>
	
	uint8_t current_mode = mcp2515_read(MCP_CANSTAT);
     656:	8e e0       	ldi	r24, 0x0E	; 14
     658:	0e 94 c1 02 	call	0x582	; 0x582 <mcp2515_read>
	if((current_mode & MODE_MASK) != mode){
     65c:	80 7e       	andi	r24, 0xE0	; 224
     65e:	c8 17       	cp	r28, r24
     660:	51 f0       	breq	.+20     	; 0x676 <mcp2515_set_mode+0x2e>
		printf("ERROR: NOT IN CORRECT OPERATIONALMODE");
     662:	8a e3       	ldi	r24, 0x3A	; 58
     664:	91 e0       	ldi	r25, 0x01	; 1
     666:	9f 93       	push	r25
     668:	8f 93       	push	r24
     66a:	0e 94 34 05 	call	0xa68	; 0xa68 <printf>
		return 1;
     66e:	0f 90       	pop	r0
     670:	0f 90       	pop	r0
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	01 c0       	rjmp	.+2      	; 0x678 <mcp2515_set_mode+0x30>
	}	
	return 0;
     676:	80 e0       	ldi	r24, 0x00	; 0
}
     678:	cf 91       	pop	r28
     67a:	08 95       	ret

0000067c <OLED_write_cmd>:
     67c:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xd7d>
     680:	08 95       	ret

00000682 <OLED_write_data>:
     682:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xf7d>
     686:	08 95       	ret

00000688 <OLED_goto_page>:
     688:	88 30       	cpi	r24, 0x08	; 8
     68a:	18 f4       	brcc	.+6      	; 0x692 <OLED_goto_page+0xa>
     68c:	80 55       	subi	r24, 0x50	; 80
     68e:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     692:	08 95       	ret

00000694 <OLED_goto_col>:
     694:	cf 93       	push	r28
     696:	88 23       	and	r24, r24
     698:	54 f0       	brlt	.+20     	; 0x6ae <OLED_goto_col+0x1a>
     69a:	c8 2f       	mov	r28, r24
     69c:	8f 70       	andi	r24, 0x0F	; 15
     69e:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     6a2:	8c 2f       	mov	r24, r28
     6a4:	82 95       	swap	r24
     6a6:	8f 70       	andi	r24, 0x0F	; 15
     6a8:	80 5f       	subi	r24, 0xF0	; 240
     6aa:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     6ae:	cf 91       	pop	r28
     6b0:	08 95       	ret

000006b2 <OLED_pos>:
     6b2:	cf 93       	push	r28
     6b4:	c6 2f       	mov	r28, r22
     6b6:	0e 94 44 03 	call	0x688	; 0x688 <OLED_goto_page>
     6ba:	8c 2f       	mov	r24, r28
     6bc:	0e 94 4a 03 	call	0x694	; 0x694 <OLED_goto_col>
     6c0:	cf 91       	pop	r28
     6c2:	08 95       	ret

000006c4 <OLED_print>:
     6c4:	0f 93       	push	r16
     6c6:	1f 93       	push	r17
     6c8:	cf 93       	push	r28
     6ca:	df 93       	push	r29
     6cc:	fc 01       	movw	r30, r24
     6ce:	90 81       	ld	r25, Z
     6d0:	90 52       	subi	r25, 0x20	; 32
     6d2:	9f 35       	cpi	r25, 0x5F	; 95
     6d4:	a0 f0       	brcs	.+40     	; 0x6fe <OLED_print+0x3a>
     6d6:	19 c0       	rjmp	.+50     	; 0x70a <OLED_print+0x46>
     6d8:	d8 01       	movw	r26, r16
     6da:	ec 91       	ld	r30, X
     6dc:	f0 e0       	ldi	r31, 0x00	; 0
     6de:	b0 97       	sbiw	r30, 0x20	; 32
     6e0:	ee 0f       	add	r30, r30
     6e2:	ff 1f       	adc	r31, r31
     6e4:	ee 0f       	add	r30, r30
     6e6:	ff 1f       	adc	r31, r31
     6e8:	ee 0f       	add	r30, r30
     6ea:	ff 1f       	adc	r31, r31
     6ec:	ec 0f       	add	r30, r28
     6ee:	fd 1f       	adc	r31, r29
     6f0:	e0 59       	subi	r30, 0x90	; 144
     6f2:	ff 4f       	sbci	r31, 0xFF	; 255
     6f4:	84 91       	lpm	r24, Z
     6f6:	0e 94 41 03 	call	0x682	; 0x682 <OLED_write_data>
     6fa:	21 96       	adiw	r28, 0x01	; 1
     6fc:	03 c0       	rjmp	.+6      	; 0x704 <OLED_print+0x40>
     6fe:	8f 01       	movw	r16, r30
     700:	c0 e0       	ldi	r28, 0x00	; 0
     702:	d0 e0       	ldi	r29, 0x00	; 0
     704:	c8 30       	cpi	r28, 0x08	; 8
     706:	d1 05       	cpc	r29, r1
     708:	3c f3       	brlt	.-50     	; 0x6d8 <OLED_print+0x14>
     70a:	df 91       	pop	r29
     70c:	cf 91       	pop	r28
     70e:	1f 91       	pop	r17
     710:	0f 91       	pop	r16
     712:	08 95       	ret

00000714 <OLED_print_string>:
     714:	0f 93       	push	r16
     716:	1f 93       	push	r17
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	8c 01       	movw	r16, r24
     71e:	c0 e0       	ldi	r28, 0x00	; 0
     720:	d0 e0       	ldi	r29, 0x00	; 0
     722:	06 c0       	rjmp	.+12     	; 0x730 <OLED_print_string+0x1c>
     724:	c8 01       	movw	r24, r16
     726:	8c 0f       	add	r24, r28
     728:	9d 1f       	adc	r25, r29
     72a:	0e 94 62 03 	call	0x6c4	; 0x6c4 <OLED_print>
     72e:	21 96       	adiw	r28, 0x01	; 1
     730:	f8 01       	movw	r30, r16
     732:	01 90       	ld	r0, Z+
     734:	00 20       	and	r0, r0
     736:	e9 f7       	brne	.-6      	; 0x732 <OLED_print_string+0x1e>
     738:	31 97       	sbiw	r30, 0x01	; 1
     73a:	e0 1b       	sub	r30, r16
     73c:	f1 0b       	sbc	r31, r17
     73e:	ce 17       	cp	r28, r30
     740:	df 07       	cpc	r29, r31
     742:	80 f3       	brcs	.-32     	; 0x724 <OLED_print_string+0x10>
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	1f 91       	pop	r17
     74a:	0f 91       	pop	r16
     74c:	08 95       	ret

0000074e <OLED_clear_page>:
     74e:	cf 93       	push	r28
     750:	0e 94 44 03 	call	0x688	; 0x688 <OLED_goto_page>
     754:	c0 e0       	ldi	r28, 0x00	; 0
     756:	04 c0       	rjmp	.+8      	; 0x760 <OLED_clear_page+0x12>
     758:	80 e0       	ldi	r24, 0x00	; 0
     75a:	0e 94 41 03 	call	0x682	; 0x682 <OLED_write_data>
     75e:	cf 5f       	subi	r28, 0xFF	; 255
     760:	cc 23       	and	r28, r28
     762:	d4 f7       	brge	.-12     	; 0x758 <OLED_clear_page+0xa>
     764:	cf 91       	pop	r28
     766:	08 95       	ret

00000768 <OLED_reset>:
     768:	cf 93       	push	r28
     76a:	c0 e0       	ldi	r28, 0x00	; 0
     76c:	04 c0       	rjmp	.+8      	; 0x776 <OLED_reset+0xe>
     76e:	8c 2f       	mov	r24, r28
     770:	0e 94 a7 03 	call	0x74e	; 0x74e <OLED_clear_page>
     774:	cf 5f       	subi	r28, 0xFF	; 255
     776:	c8 30       	cpi	r28, 0x08	; 8
     778:	d0 f3       	brcs	.-12     	; 0x76e <OLED_reset+0x6>
     77a:	cf 91       	pop	r28
     77c:	08 95       	ret

0000077e <OLED_init>:
     77e:	8e ea       	ldi	r24, 0xAE	; 174
     780:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     784:	81 ea       	ldi	r24, 0xA1	; 161
     786:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     78a:	8a ed       	ldi	r24, 0xDA	; 218
     78c:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     790:	82 e1       	ldi	r24, 0x12	; 18
     792:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     796:	88 ec       	ldi	r24, 0xC8	; 200
     798:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     79c:	88 ea       	ldi	r24, 0xA8	; 168
     79e:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7a2:	8f e3       	ldi	r24, 0x3F	; 63
     7a4:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7a8:	85 ed       	ldi	r24, 0xD5	; 213
     7aa:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7ae:	80 e8       	ldi	r24, 0x80	; 128
     7b0:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7b4:	81 e8       	ldi	r24, 0x81	; 129
     7b6:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7ba:	80 e5       	ldi	r24, 0x50	; 80
     7bc:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7c0:	89 ed       	ldi	r24, 0xD9	; 217
     7c2:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7c6:	81 e2       	ldi	r24, 0x21	; 33
     7c8:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7cc:	80 e2       	ldi	r24, 0x20	; 32
     7ce:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7d2:	82 e0       	ldi	r24, 0x02	; 2
     7d4:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7d8:	8b ed       	ldi	r24, 0xDB	; 219
     7da:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7de:	80 e3       	ldi	r24, 0x30	; 48
     7e0:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7e4:	8d ea       	ldi	r24, 0xAD	; 173
     7e6:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7ea:	80 e0       	ldi	r24, 0x00	; 0
     7ec:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7f0:	84 ea       	ldi	r24, 0xA4	; 164
     7f2:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7f6:	86 ea       	ldi	r24, 0xA6	; 166
     7f8:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     7fc:	8f ea       	ldi	r24, 0xAF	; 175
     7fe:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_write_cmd>
     802:	0e 94 b4 03 	call	0x768	; 0x768 <OLED_reset>
     806:	63 e2       	ldi	r22, 0x23	; 35
     808:	83 e0       	ldi	r24, 0x03	; 3
     80a:	0e 94 59 03 	call	0x6b2	; 0x6b2 <OLED_pos>
     80e:	80 e6       	ldi	r24, 0x60	; 96
     810:	91 e0       	ldi	r25, 0x01	; 1
     812:	0e 94 8a 03 	call	0x714	; 0x714 <OLED_print_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     816:	2f ef       	ldi	r18, 0xFF	; 255
     818:	8f ef       	ldi	r24, 0xFF	; 255
     81a:	9d e1       	ldi	r25, 0x1D	; 29
     81c:	21 50       	subi	r18, 0x01	; 1
     81e:	80 40       	sbci	r24, 0x00	; 0
     820:	90 40       	sbci	r25, 0x00	; 0
     822:	e1 f7       	brne	.-8      	; 0x81c <OLED_init+0x9e>
     824:	00 c0       	rjmp	.+0      	; 0x826 <OLED_init+0xa8>
     826:	00 00       	nop
     828:	0e 94 b4 03 	call	0x768	; 0x768 <OLED_reset>
     82c:	08 95       	ret

0000082e <SPI_init>:
#include "SPI.h"
#include <avr/io.h>

void SPI_init(void){
	// Set MOSI and SCK output, all others input 
	DDRB |= (1<<PB5)|(1<<PB7)|(1<<PB4);
     82e:	87 b3       	in	r24, 0x17	; 23
     830:	80 6b       	ori	r24, 0xB0	; 176
     832:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1 << PB1) & ~(1 << PB2) & ~(1 << PB3) & ~(1 << PB6); 
     834:	87 b3       	in	r24, 0x17	; 23
     836:	81 7b       	andi	r24, 0xB1	; 177
     838:	87 bb       	out	0x17, r24	; 23
	// Enable SPI, Master, set clock rate fck/16 
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     83a:	81 e5       	ldi	r24, 0x51	; 81
     83c:	8d b9       	out	0x0d, r24	; 13
	//SPDR |= ~(1<<CPOL) | ~(1<<CPHA); //Mulig feil
	PORTB |= (1<<PB4);
     83e:	88 b3       	in	r24, 0x18	; 24
     840:	80 61       	ori	r24, 0x10	; 16
     842:	88 bb       	out	0x18, r24	; 24
     844:	08 95       	ret

00000846 <SPI_write>:
}

void SPI_write(char Data){
	//Start transmission 
	SPDR = Data;
     846:	8f b9       	out	0x0f, r24	; 15
	
	while(!(SPSR & (1<<SPIF))){
     848:	77 9b       	sbis	0x0e, 7	; 14
     84a:	fe cf       	rjmp	.-4      	; 0x848 <SPI_write+0x2>
		// Wait for transmission complete
	}
	
}
     84c:	08 95       	ret

0000084e <SPI_receive>:

uint8_t SPI_receive(void){
	SPI_write(0);
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	0e 94 23 04 	call	0x846	; 0x846 <SPI_write>
	
	return SPDR;
     854:	8f b1       	in	r24, 0x0f	; 15
}
     856:	08 95       	ret

00000858 <SPI_slaveSelect>:

void SPI_slaveSelect(void){
	PORTB &= ~(1<<PB4);
     858:	88 b3       	in	r24, 0x18	; 24
     85a:	8f 7e       	andi	r24, 0xEF	; 239
     85c:	88 bb       	out	0x18, r24	; 24
     85e:	08 95       	ret

00000860 <SPI_slaveDeselect>:
}

 void SPI_slaveDeselect(void){
 	PORTB |= (1<<PB4);
     860:	88 b3       	in	r24, 0x18	; 24
     862:	80 61       	ori	r24, 0x10	; 16
     864:	88 bb       	out	0x18, r24	; 24
     866:	08 95       	ret

00000868 <xmem_init>:
     868:	85 b7       	in	r24, 0x35	; 53
     86a:	80 68       	ori	r24, 0x80	; 128
     86c:	85 bf       	out	0x35, r24	; 53
     86e:	80 b7       	in	r24, 0x30	; 48
     870:	80 62       	ori	r24, 0x20	; 32
     872:	80 bf       	out	0x30, r24	; 48
     874:	08 95       	ret

00000876 <hardware_init>:
#include "CAN.h"
#include "MCP2515.h"


void hardware_init(){
	xmem_init();
     876:	0e 94 34 04 	call	0x868	; 0x868 <xmem_init>
	
	USART_Init(MYUBRR);
     87a:	8f e1       	ldi	r24, 0x1F	; 31
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	0e 94 d5 04 	call	0x9aa	; 0x9aa <USART_Init>

	uart_setup_stdio();
     882:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <uart_setup_stdio>

	adc_init();
     886:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_init>
	
	OLED_init();
     88a:	0e 94 bf 03 	call	0x77e	; 0x77e <OLED_init>
	
	CAN_init(MODE_LOOPBACK);
     88e:	80 e4       	ldi	r24, 0x40	; 64
     890:	0e 94 ed 01 	call	0x3da	; 0x3da <CAN_init>
	
	printf("-------------------PROGRAM STARTV3-------------------\n");
     894:	89 e0       	ldi	r24, 0x09	; 9
     896:	92 e0       	ldi	r25, 0x02	; 2
     898:	0e 94 4a 05 	call	0xa94	; 0xa94 <puts>
     89c:	08 95       	ret

0000089e <__vector_3>:
}

CAN_MESSAGE receivedmsg;

ISR(INT2_vect){
     89e:	1f 92       	push	r1
     8a0:	0f 92       	push	r0
     8a2:	0f b6       	in	r0, 0x3f	; 63
     8a4:	0f 92       	push	r0
     8a6:	11 24       	eor	r1, r1
     8a8:	2f 93       	push	r18
     8aa:	3f 93       	push	r19
     8ac:	4f 93       	push	r20
     8ae:	5f 93       	push	r21
     8b0:	6f 93       	push	r22
     8b2:	7f 93       	push	r23
     8b4:	8f 93       	push	r24
     8b6:	9f 93       	push	r25
     8b8:	af 93       	push	r26
     8ba:	bf 93       	push	r27
     8bc:	ef 93       	push	r30
     8be:	ff 93       	push	r31
	CAN_recieve(&receivedmsg);
     8c0:	8e e6       	ldi	r24, 0x6E	; 110
     8c2:	92 e0       	ldi	r25, 0x02	; 2
     8c4:	0e 94 38 02 	call	0x470	; 0x470 <CAN_recieve>
	mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF | MCP_RX1IF, 0x00);
     8c8:	40 e0       	ldi	r20, 0x00	; 0
     8ca:	63 e0       	ldi	r22, 0x03	; 3
     8cc:	8c e2       	ldi	r24, 0x2C	; 44
     8ce:	0e 94 0a 03 	call	0x614	; 0x614 <mcp2515_bit_modify>
	
}
     8d2:	ff 91       	pop	r31
     8d4:	ef 91       	pop	r30
     8d6:	bf 91       	pop	r27
     8d8:	af 91       	pop	r26
     8da:	9f 91       	pop	r25
     8dc:	8f 91       	pop	r24
     8de:	7f 91       	pop	r23
     8e0:	6f 91       	pop	r22
     8e2:	5f 91       	pop	r21
     8e4:	4f 91       	pop	r20
     8e6:	3f 91       	pop	r19
     8e8:	2f 91       	pop	r18
     8ea:	0f 90       	pop	r0
     8ec:	0f be       	out	0x3f, r0	; 63
     8ee:	0f 90       	pop	r0
     8f0:	1f 90       	pop	r1
     8f2:	18 95       	reti

000008f4 <main>:


int main(void){	
     8f4:	cf 93       	push	r28
     8f6:	df 93       	push	r29
     8f8:	cd b7       	in	r28, 0x3d	; 61
     8fa:	de b7       	in	r29, 0x3e	; 62
     8fc:	2b 97       	sbiw	r28, 0x0b	; 11
     8fe:	0f b6       	in	r0, 0x3f	; 63
     900:	f8 94       	cli
     902:	de bf       	out	0x3e, r29	; 62
     904:	0f be       	out	0x3f, r0	; 63
     906:	cd bf       	out	0x3d, r28	; 61
	hardware_init();
     908:	0e 94 3b 04 	call	0x876	; 0x876 <hardware_init>
     90c:	2f ef       	ldi	r18, 0xFF	; 255
     90e:	8f ef       	ldi	r24, 0xFF	; 255
     910:	9e e0       	ldi	r25, 0x0E	; 14
     912:	21 50       	subi	r18, 0x01	; 1
     914:	80 40       	sbci	r24, 0x00	; 0
     916:	90 40       	sbci	r25, 0x00	; 0
     918:	e1 f7       	brne	.-8      	; 0x912 <main+0x1e>
     91a:	00 c0       	rjmp	.+0      	; 0x91c <main+0x28>
     91c:	00 00       	nop
	
	_delay_ms(1000);

	CAN_MESSAGE message;
	message.msg_ID = 0x0100;
     91e:	80 e0       	ldi	r24, 0x00	; 0
     920:	91 e0       	ldi	r25, 0x01	; 1
     922:	9a 83       	std	Y+2, r25	; 0x02
     924:	89 83       	std	Y+1, r24	; 0x01
	message.msg_length = 8;
     926:	88 e0       	ldi	r24, 0x08	; 8
     928:	8b 83       	std	Y+3, r24	; 0x03
	message.data[0] = 0xFF;
     92a:	8f ef       	ldi	r24, 0xFF	; 255
     92c:	8c 83       	std	Y+4, r24	; 0x04
	message.data[1] = 0x22;
     92e:	92 e2       	ldi	r25, 0x22	; 34
     930:	9d 83       	std	Y+5, r25	; 0x05
	message.data[2] = 0x33;
     932:	93 e3       	ldi	r25, 0x33	; 51
     934:	9e 83       	std	Y+6, r25	; 0x06
	message.data[3] = 0x44;
     936:	94 e4       	ldi	r25, 0x44	; 68
     938:	9f 83       	std	Y+7, r25	; 0x07
	message.data[4] = 0x55;
     93a:	95 e5       	ldi	r25, 0x55	; 85
     93c:	98 87       	std	Y+8, r25	; 0x08
	message.data[5] = 0x66;
     93e:	96 e6       	ldi	r25, 0x66	; 102
     940:	99 87       	std	Y+9, r25	; 0x09
	message.data[6] = 0x77;
     942:	97 e7       	ldi	r25, 0x77	; 119
     944:	9a 87       	std	Y+10, r25	; 0x0a
	message.data[7] = 0x88;
     946:	98 e8       	ldi	r25, 0x88	; 136
     948:	9b 87       	std	Y+11, r25	; 0x0b
	
	printf("The sent data is: %x\n", message.data[0]); 
     94a:	1f 92       	push	r1
     94c:	8f 93       	push	r24
     94e:	8f e3       	ldi	r24, 0x3F	; 63
     950:	92 e0       	ldi	r25, 0x02	; 2
     952:	9f 93       	push	r25
     954:	8f 93       	push	r24
     956:	0e 94 34 05 	call	0xa68	; 0xa68 <printf>
	
	CAN_transmit(&message);
     95a:	ce 01       	movw	r24, r28
     95c:	01 96       	adiw	r24, 0x01	; 1
     95e:	0e 94 01 02 	call	0x402	; 0x402 <CAN_transmit>
     962:	8c ec       	ldi	r24, 0xCC	; 204
     964:	94 e0       	ldi	r25, 0x04	; 4
     966:	01 97       	sbiw	r24, 0x01	; 1
     968:	f1 f7       	brne	.-4      	; 0x966 <main+0x72>
     96a:	00 c0       	rjmp	.+0      	; 0x96c <main+0x78>
     96c:	00 00       	nop
	_delay_ms(1);
	//CAN_recieve(&receivedmsg);
	printf("The printed data is: %x\n", receivedmsg.data[0]); 
     96e:	80 91 71 02 	lds	r24, 0x0271	; 0x800271 <__data_end+0x3>
     972:	1f 92       	push	r1
     974:	8f 93       	push	r24
     976:	85 e5       	ldi	r24, 0x55	; 85
     978:	92 e0       	ldi	r25, 0x02	; 2
     97a:	9f 93       	push	r25
     97c:	8f 93       	push	r24
     97e:	0e 94 34 05 	call	0xa68	; 0xa68 <printf>
     982:	0f b6       	in	r0, 0x3f	; 63
     984:	f8 94       	cli
     986:	de bf       	out	0x3e, r29	; 62
     988:	0f be       	out	0x3f, r0	; 63
     98a:	cd bf       	out	0x3d, r28	; 61
     98c:	ff cf       	rjmp	.-2      	; 0x98c <main+0x98>

0000098e <uart_putchar>:
     98e:	cf 93       	push	r28
     990:	c8 2f       	mov	r28, r24
     992:	8a 30       	cpi	r24, 0x0A	; 10
     994:	19 f4       	brne	.+6      	; 0x99c <uart_putchar+0xe>
     996:	8d e0       	ldi	r24, 0x0D	; 13
     998:	0e 94 c7 04 	call	0x98e	; 0x98e <uart_putchar>
     99c:	5d 9b       	sbis	0x0b, 5	; 11
     99e:	fe cf       	rjmp	.-4      	; 0x99c <uart_putchar+0xe>
     9a0:	cc b9       	out	0x0c, r28	; 12
     9a2:	80 e0       	ldi	r24, 0x00	; 0
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	cf 91       	pop	r28
     9a8:	08 95       	ret

000009aa <USART_Init>:
     9aa:	90 bd       	out	0x20, r25	; 32
     9ac:	89 b9       	out	0x09, r24	; 9
     9ae:	88 e1       	ldi	r24, 0x18	; 24
     9b0:	8a b9       	out	0x0a, r24	; 10
     9b2:	8e e8       	ldi	r24, 0x8E	; 142
     9b4:	80 bd       	out	0x20, r24	; 32
     9b6:	08 95       	ret

000009b8 <uart_setup_stdio>:
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	87 ec       	ldi	r24, 0xC7	; 199
     9be:	94 e0       	ldi	r25, 0x04	; 4
     9c0:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <fdevopen>
     9c4:	00 97       	sbiw	r24, 0x00	; 0
     9c6:	21 f0       	breq	.+8      	; 0x9d0 <uart_setup_stdio+0x18>
     9c8:	90 93 7c 02 	sts	0x027C, r25	; 0x80027c <__iob+0x3>
     9cc:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <__iob+0x2>
     9d0:	08 95       	ret

000009d2 <fdevopen>:
     9d2:	0f 93       	push	r16
     9d4:	1f 93       	push	r17
     9d6:	cf 93       	push	r28
     9d8:	df 93       	push	r29
     9da:	00 97       	sbiw	r24, 0x00	; 0
     9dc:	31 f4       	brne	.+12     	; 0x9ea <fdevopen+0x18>
     9de:	61 15       	cp	r22, r1
     9e0:	71 05       	cpc	r23, r1
     9e2:	19 f4       	brne	.+6      	; 0x9ea <fdevopen+0x18>
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	3a c0       	rjmp	.+116    	; 0xa5e <fdevopen+0x8c>
     9ea:	8b 01       	movw	r16, r22
     9ec:	ec 01       	movw	r28, r24
     9ee:	6e e0       	ldi	r22, 0x0E	; 14
     9f0:	70 e0       	ldi	r23, 0x00	; 0
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <calloc>
     9fa:	fc 01       	movw	r30, r24
     9fc:	89 2b       	or	r24, r25
     9fe:	91 f3       	breq	.-28     	; 0x9e4 <fdevopen+0x12>
     a00:	80 e8       	ldi	r24, 0x80	; 128
     a02:	83 83       	std	Z+3, r24	; 0x03
     a04:	01 15       	cp	r16, r1
     a06:	11 05       	cpc	r17, r1
     a08:	71 f0       	breq	.+28     	; 0xa26 <fdevopen+0x54>
     a0a:	13 87       	std	Z+11, r17	; 0x0b
     a0c:	02 87       	std	Z+10, r16	; 0x0a
     a0e:	81 e8       	ldi	r24, 0x81	; 129
     a10:	83 83       	std	Z+3, r24	; 0x03
     a12:	80 91 79 02 	lds	r24, 0x0279	; 0x800279 <__iob>
     a16:	90 91 7a 02 	lds	r25, 0x027A	; 0x80027a <__iob+0x1>
     a1a:	89 2b       	or	r24, r25
     a1c:	21 f4       	brne	.+8      	; 0xa26 <fdevopen+0x54>
     a1e:	f0 93 7a 02 	sts	0x027A, r31	; 0x80027a <__iob+0x1>
     a22:	e0 93 79 02 	sts	0x0279, r30	; 0x800279 <__iob>
     a26:	20 97       	sbiw	r28, 0x00	; 0
     a28:	c9 f0       	breq	.+50     	; 0xa5c <fdevopen+0x8a>
     a2a:	d1 87       	std	Z+9, r29	; 0x09
     a2c:	c0 87       	std	Z+8, r28	; 0x08
     a2e:	83 81       	ldd	r24, Z+3	; 0x03
     a30:	82 60       	ori	r24, 0x02	; 2
     a32:	83 83       	std	Z+3, r24	; 0x03
     a34:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <__iob+0x2>
     a38:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <__iob+0x3>
     a3c:	89 2b       	or	r24, r25
     a3e:	71 f4       	brne	.+28     	; 0xa5c <fdevopen+0x8a>
     a40:	f0 93 7c 02 	sts	0x027C, r31	; 0x80027c <__iob+0x3>
     a44:	e0 93 7b 02 	sts	0x027B, r30	; 0x80027b <__iob+0x2>
     a48:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <__iob+0x4>
     a4c:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <__iob+0x5>
     a50:	89 2b       	or	r24, r25
     a52:	21 f4       	brne	.+8      	; 0xa5c <fdevopen+0x8a>
     a54:	f0 93 7e 02 	sts	0x027E, r31	; 0x80027e <__iob+0x5>
     a58:	e0 93 7d 02 	sts	0x027D, r30	; 0x80027d <__iob+0x4>
     a5c:	cf 01       	movw	r24, r30
     a5e:	df 91       	pop	r29
     a60:	cf 91       	pop	r28
     a62:	1f 91       	pop	r17
     a64:	0f 91       	pop	r16
     a66:	08 95       	ret

00000a68 <printf>:
     a68:	a0 e0       	ldi	r26, 0x00	; 0
     a6a:	b0 e0       	ldi	r27, 0x00	; 0
     a6c:	ea e3       	ldi	r30, 0x3A	; 58
     a6e:	f5 e0       	ldi	r31, 0x05	; 5
     a70:	0c 94 5f 09 	jmp	0x12be	; 0x12be <__prologue_saves__+0x20>
     a74:	ae 01       	movw	r20, r28
     a76:	4b 5f       	subi	r20, 0xFB	; 251
     a78:	5f 4f       	sbci	r21, 0xFF	; 255
     a7a:	fa 01       	movw	r30, r20
     a7c:	61 91       	ld	r22, Z+
     a7e:	71 91       	ld	r23, Z+
     a80:	af 01       	movw	r20, r30
     a82:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <__iob+0x2>
     a86:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <__iob+0x3>
     a8a:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <vfprintf>
     a8e:	e2 e0       	ldi	r30, 0x02	; 2
     a90:	0c 94 7b 09 	jmp	0x12f6	; 0x12f6 <__epilogue_restores__+0x20>

00000a94 <puts>:
     a94:	0f 93       	push	r16
     a96:	1f 93       	push	r17
     a98:	cf 93       	push	r28
     a9a:	df 93       	push	r29
     a9c:	e0 91 7b 02 	lds	r30, 0x027B	; 0x80027b <__iob+0x2>
     aa0:	f0 91 7c 02 	lds	r31, 0x027C	; 0x80027c <__iob+0x3>
     aa4:	23 81       	ldd	r18, Z+3	; 0x03
     aa6:	21 ff       	sbrs	r18, 1
     aa8:	1b c0       	rjmp	.+54     	; 0xae0 <puts+0x4c>
     aaa:	8c 01       	movw	r16, r24
     aac:	d0 e0       	ldi	r29, 0x00	; 0
     aae:	c0 e0       	ldi	r28, 0x00	; 0
     ab0:	f8 01       	movw	r30, r16
     ab2:	81 91       	ld	r24, Z+
     ab4:	8f 01       	movw	r16, r30
     ab6:	60 91 7b 02 	lds	r22, 0x027B	; 0x80027b <__iob+0x2>
     aba:	70 91 7c 02 	lds	r23, 0x027C	; 0x80027c <__iob+0x3>
     abe:	db 01       	movw	r26, r22
     ac0:	18 96       	adiw	r26, 0x08	; 8
     ac2:	ed 91       	ld	r30, X+
     ac4:	fc 91       	ld	r31, X
     ac6:	19 97       	sbiw	r26, 0x09	; 9
     ac8:	88 23       	and	r24, r24
     aca:	31 f0       	breq	.+12     	; 0xad8 <puts+0x44>
     acc:	09 95       	icall
     ace:	89 2b       	or	r24, r25
     ad0:	79 f3       	breq	.-34     	; 0xab0 <puts+0x1c>
     ad2:	df ef       	ldi	r29, 0xFF	; 255
     ad4:	cf ef       	ldi	r28, 0xFF	; 255
     ad6:	ec cf       	rjmp	.-40     	; 0xab0 <puts+0x1c>
     ad8:	8a e0       	ldi	r24, 0x0A	; 10
     ada:	09 95       	icall
     adc:	89 2b       	or	r24, r25
     ade:	19 f0       	breq	.+6      	; 0xae6 <puts+0x52>
     ae0:	8f ef       	ldi	r24, 0xFF	; 255
     ae2:	9f ef       	ldi	r25, 0xFF	; 255
     ae4:	02 c0       	rjmp	.+4      	; 0xaea <puts+0x56>
     ae6:	8d 2f       	mov	r24, r29
     ae8:	9c 2f       	mov	r25, r28
     aea:	df 91       	pop	r29
     aec:	cf 91       	pop	r28
     aee:	1f 91       	pop	r17
     af0:	0f 91       	pop	r16
     af2:	08 95       	ret

00000af4 <vfprintf>:
     af4:	ab e0       	ldi	r26, 0x0B	; 11
     af6:	b0 e0       	ldi	r27, 0x00	; 0
     af8:	e0 e8       	ldi	r30, 0x80	; 128
     afa:	f5 e0       	ldi	r31, 0x05	; 5
     afc:	0c 94 4f 09 	jmp	0x129e	; 0x129e <__prologue_saves__>
     b00:	6c 01       	movw	r12, r24
     b02:	7b 01       	movw	r14, r22
     b04:	8a 01       	movw	r16, r20
     b06:	fc 01       	movw	r30, r24
     b08:	17 82       	std	Z+7, r1	; 0x07
     b0a:	16 82       	std	Z+6, r1	; 0x06
     b0c:	83 81       	ldd	r24, Z+3	; 0x03
     b0e:	81 ff       	sbrs	r24, 1
     b10:	cc c1       	rjmp	.+920    	; 0xeaa <vfprintf+0x3b6>
     b12:	ce 01       	movw	r24, r28
     b14:	01 96       	adiw	r24, 0x01	; 1
     b16:	3c 01       	movw	r6, r24
     b18:	f6 01       	movw	r30, r12
     b1a:	93 81       	ldd	r25, Z+3	; 0x03
     b1c:	f7 01       	movw	r30, r14
     b1e:	93 fd       	sbrc	r25, 3
     b20:	85 91       	lpm	r24, Z+
     b22:	93 ff       	sbrs	r25, 3
     b24:	81 91       	ld	r24, Z+
     b26:	7f 01       	movw	r14, r30
     b28:	88 23       	and	r24, r24
     b2a:	09 f4       	brne	.+2      	; 0xb2e <vfprintf+0x3a>
     b2c:	ba c1       	rjmp	.+884    	; 0xea2 <vfprintf+0x3ae>
     b2e:	85 32       	cpi	r24, 0x25	; 37
     b30:	39 f4       	brne	.+14     	; 0xb40 <vfprintf+0x4c>
     b32:	93 fd       	sbrc	r25, 3
     b34:	85 91       	lpm	r24, Z+
     b36:	93 ff       	sbrs	r25, 3
     b38:	81 91       	ld	r24, Z+
     b3a:	7f 01       	movw	r14, r30
     b3c:	85 32       	cpi	r24, 0x25	; 37
     b3e:	29 f4       	brne	.+10     	; 0xb4a <vfprintf+0x56>
     b40:	b6 01       	movw	r22, r12
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	0e 94 b5 08 	call	0x116a	; 0x116a <fputc>
     b48:	e7 cf       	rjmp	.-50     	; 0xb18 <vfprintf+0x24>
     b4a:	91 2c       	mov	r9, r1
     b4c:	21 2c       	mov	r2, r1
     b4e:	31 2c       	mov	r3, r1
     b50:	ff e1       	ldi	r31, 0x1F	; 31
     b52:	f3 15       	cp	r31, r3
     b54:	d8 f0       	brcs	.+54     	; 0xb8c <vfprintf+0x98>
     b56:	8b 32       	cpi	r24, 0x2B	; 43
     b58:	79 f0       	breq	.+30     	; 0xb78 <vfprintf+0x84>
     b5a:	38 f4       	brcc	.+14     	; 0xb6a <vfprintf+0x76>
     b5c:	80 32       	cpi	r24, 0x20	; 32
     b5e:	79 f0       	breq	.+30     	; 0xb7e <vfprintf+0x8a>
     b60:	83 32       	cpi	r24, 0x23	; 35
     b62:	a1 f4       	brne	.+40     	; 0xb8c <vfprintf+0x98>
     b64:	23 2d       	mov	r18, r3
     b66:	20 61       	ori	r18, 0x10	; 16
     b68:	1d c0       	rjmp	.+58     	; 0xba4 <vfprintf+0xb0>
     b6a:	8d 32       	cpi	r24, 0x2D	; 45
     b6c:	61 f0       	breq	.+24     	; 0xb86 <vfprintf+0x92>
     b6e:	80 33       	cpi	r24, 0x30	; 48
     b70:	69 f4       	brne	.+26     	; 0xb8c <vfprintf+0x98>
     b72:	23 2d       	mov	r18, r3
     b74:	21 60       	ori	r18, 0x01	; 1
     b76:	16 c0       	rjmp	.+44     	; 0xba4 <vfprintf+0xb0>
     b78:	83 2d       	mov	r24, r3
     b7a:	82 60       	ori	r24, 0x02	; 2
     b7c:	38 2e       	mov	r3, r24
     b7e:	e3 2d       	mov	r30, r3
     b80:	e4 60       	ori	r30, 0x04	; 4
     b82:	3e 2e       	mov	r3, r30
     b84:	2a c0       	rjmp	.+84     	; 0xbda <vfprintf+0xe6>
     b86:	f3 2d       	mov	r31, r3
     b88:	f8 60       	ori	r31, 0x08	; 8
     b8a:	1d c0       	rjmp	.+58     	; 0xbc6 <vfprintf+0xd2>
     b8c:	37 fc       	sbrc	r3, 7
     b8e:	2d c0       	rjmp	.+90     	; 0xbea <vfprintf+0xf6>
     b90:	20 ed       	ldi	r18, 0xD0	; 208
     b92:	28 0f       	add	r18, r24
     b94:	2a 30       	cpi	r18, 0x0A	; 10
     b96:	40 f0       	brcs	.+16     	; 0xba8 <vfprintf+0xb4>
     b98:	8e 32       	cpi	r24, 0x2E	; 46
     b9a:	b9 f4       	brne	.+46     	; 0xbca <vfprintf+0xd6>
     b9c:	36 fc       	sbrc	r3, 6
     b9e:	81 c1       	rjmp	.+770    	; 0xea2 <vfprintf+0x3ae>
     ba0:	23 2d       	mov	r18, r3
     ba2:	20 64       	ori	r18, 0x40	; 64
     ba4:	32 2e       	mov	r3, r18
     ba6:	19 c0       	rjmp	.+50     	; 0xbda <vfprintf+0xe6>
     ba8:	36 fe       	sbrs	r3, 6
     baa:	06 c0       	rjmp	.+12     	; 0xbb8 <vfprintf+0xc4>
     bac:	8a e0       	ldi	r24, 0x0A	; 10
     bae:	98 9e       	mul	r9, r24
     bb0:	20 0d       	add	r18, r0
     bb2:	11 24       	eor	r1, r1
     bb4:	92 2e       	mov	r9, r18
     bb6:	11 c0       	rjmp	.+34     	; 0xbda <vfprintf+0xe6>
     bb8:	ea e0       	ldi	r30, 0x0A	; 10
     bba:	2e 9e       	mul	r2, r30
     bbc:	20 0d       	add	r18, r0
     bbe:	11 24       	eor	r1, r1
     bc0:	22 2e       	mov	r2, r18
     bc2:	f3 2d       	mov	r31, r3
     bc4:	f0 62       	ori	r31, 0x20	; 32
     bc6:	3f 2e       	mov	r3, r31
     bc8:	08 c0       	rjmp	.+16     	; 0xbda <vfprintf+0xe6>
     bca:	8c 36       	cpi	r24, 0x6C	; 108
     bcc:	21 f4       	brne	.+8      	; 0xbd6 <vfprintf+0xe2>
     bce:	83 2d       	mov	r24, r3
     bd0:	80 68       	ori	r24, 0x80	; 128
     bd2:	38 2e       	mov	r3, r24
     bd4:	02 c0       	rjmp	.+4      	; 0xbda <vfprintf+0xe6>
     bd6:	88 36       	cpi	r24, 0x68	; 104
     bd8:	41 f4       	brne	.+16     	; 0xbea <vfprintf+0xf6>
     bda:	f7 01       	movw	r30, r14
     bdc:	93 fd       	sbrc	r25, 3
     bde:	85 91       	lpm	r24, Z+
     be0:	93 ff       	sbrs	r25, 3
     be2:	81 91       	ld	r24, Z+
     be4:	7f 01       	movw	r14, r30
     be6:	81 11       	cpse	r24, r1
     be8:	b3 cf       	rjmp	.-154    	; 0xb50 <vfprintf+0x5c>
     bea:	98 2f       	mov	r25, r24
     bec:	9f 7d       	andi	r25, 0xDF	; 223
     bee:	95 54       	subi	r25, 0x45	; 69
     bf0:	93 30       	cpi	r25, 0x03	; 3
     bf2:	28 f4       	brcc	.+10     	; 0xbfe <vfprintf+0x10a>
     bf4:	0c 5f       	subi	r16, 0xFC	; 252
     bf6:	1f 4f       	sbci	r17, 0xFF	; 255
     bf8:	9f e3       	ldi	r25, 0x3F	; 63
     bfa:	99 83       	std	Y+1, r25	; 0x01
     bfc:	0d c0       	rjmp	.+26     	; 0xc18 <vfprintf+0x124>
     bfe:	83 36       	cpi	r24, 0x63	; 99
     c00:	31 f0       	breq	.+12     	; 0xc0e <vfprintf+0x11a>
     c02:	83 37       	cpi	r24, 0x73	; 115
     c04:	71 f0       	breq	.+28     	; 0xc22 <vfprintf+0x12e>
     c06:	83 35       	cpi	r24, 0x53	; 83
     c08:	09 f0       	breq	.+2      	; 0xc0c <vfprintf+0x118>
     c0a:	59 c0       	rjmp	.+178    	; 0xcbe <vfprintf+0x1ca>
     c0c:	21 c0       	rjmp	.+66     	; 0xc50 <vfprintf+0x15c>
     c0e:	f8 01       	movw	r30, r16
     c10:	80 81       	ld	r24, Z
     c12:	89 83       	std	Y+1, r24	; 0x01
     c14:	0e 5f       	subi	r16, 0xFE	; 254
     c16:	1f 4f       	sbci	r17, 0xFF	; 255
     c18:	88 24       	eor	r8, r8
     c1a:	83 94       	inc	r8
     c1c:	91 2c       	mov	r9, r1
     c1e:	53 01       	movw	r10, r6
     c20:	13 c0       	rjmp	.+38     	; 0xc48 <vfprintf+0x154>
     c22:	28 01       	movw	r4, r16
     c24:	f2 e0       	ldi	r31, 0x02	; 2
     c26:	4f 0e       	add	r4, r31
     c28:	51 1c       	adc	r5, r1
     c2a:	f8 01       	movw	r30, r16
     c2c:	a0 80       	ld	r10, Z
     c2e:	b1 80       	ldd	r11, Z+1	; 0x01
     c30:	36 fe       	sbrs	r3, 6
     c32:	03 c0       	rjmp	.+6      	; 0xc3a <vfprintf+0x146>
     c34:	69 2d       	mov	r22, r9
     c36:	70 e0       	ldi	r23, 0x00	; 0
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <vfprintf+0x14a>
     c3a:	6f ef       	ldi	r22, 0xFF	; 255
     c3c:	7f ef       	ldi	r23, 0xFF	; 255
     c3e:	c5 01       	movw	r24, r10
     c40:	0e 94 aa 08 	call	0x1154	; 0x1154 <strnlen>
     c44:	4c 01       	movw	r8, r24
     c46:	82 01       	movw	r16, r4
     c48:	f3 2d       	mov	r31, r3
     c4a:	ff 77       	andi	r31, 0x7F	; 127
     c4c:	3f 2e       	mov	r3, r31
     c4e:	16 c0       	rjmp	.+44     	; 0xc7c <vfprintf+0x188>
     c50:	28 01       	movw	r4, r16
     c52:	22 e0       	ldi	r18, 0x02	; 2
     c54:	42 0e       	add	r4, r18
     c56:	51 1c       	adc	r5, r1
     c58:	f8 01       	movw	r30, r16
     c5a:	a0 80       	ld	r10, Z
     c5c:	b1 80       	ldd	r11, Z+1	; 0x01
     c5e:	36 fe       	sbrs	r3, 6
     c60:	03 c0       	rjmp	.+6      	; 0xc68 <vfprintf+0x174>
     c62:	69 2d       	mov	r22, r9
     c64:	70 e0       	ldi	r23, 0x00	; 0
     c66:	02 c0       	rjmp	.+4      	; 0xc6c <vfprintf+0x178>
     c68:	6f ef       	ldi	r22, 0xFF	; 255
     c6a:	7f ef       	ldi	r23, 0xFF	; 255
     c6c:	c5 01       	movw	r24, r10
     c6e:	0e 94 98 08 	call	0x1130	; 0x1130 <strnlen_P>
     c72:	4c 01       	movw	r8, r24
     c74:	f3 2d       	mov	r31, r3
     c76:	f0 68       	ori	r31, 0x80	; 128
     c78:	3f 2e       	mov	r3, r31
     c7a:	82 01       	movw	r16, r4
     c7c:	33 fc       	sbrc	r3, 3
     c7e:	1b c0       	rjmp	.+54     	; 0xcb6 <vfprintf+0x1c2>
     c80:	82 2d       	mov	r24, r2
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	88 16       	cp	r8, r24
     c86:	99 06       	cpc	r9, r25
     c88:	b0 f4       	brcc	.+44     	; 0xcb6 <vfprintf+0x1c2>
     c8a:	b6 01       	movw	r22, r12
     c8c:	80 e2       	ldi	r24, 0x20	; 32
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	0e 94 b5 08 	call	0x116a	; 0x116a <fputc>
     c94:	2a 94       	dec	r2
     c96:	f4 cf       	rjmp	.-24     	; 0xc80 <vfprintf+0x18c>
     c98:	f5 01       	movw	r30, r10
     c9a:	37 fc       	sbrc	r3, 7
     c9c:	85 91       	lpm	r24, Z+
     c9e:	37 fe       	sbrs	r3, 7
     ca0:	81 91       	ld	r24, Z+
     ca2:	5f 01       	movw	r10, r30
     ca4:	b6 01       	movw	r22, r12
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	0e 94 b5 08 	call	0x116a	; 0x116a <fputc>
     cac:	21 10       	cpse	r2, r1
     cae:	2a 94       	dec	r2
     cb0:	21 e0       	ldi	r18, 0x01	; 1
     cb2:	82 1a       	sub	r8, r18
     cb4:	91 08       	sbc	r9, r1
     cb6:	81 14       	cp	r8, r1
     cb8:	91 04       	cpc	r9, r1
     cba:	71 f7       	brne	.-36     	; 0xc98 <vfprintf+0x1a4>
     cbc:	e8 c0       	rjmp	.+464    	; 0xe8e <vfprintf+0x39a>
     cbe:	84 36       	cpi	r24, 0x64	; 100
     cc0:	11 f0       	breq	.+4      	; 0xcc6 <vfprintf+0x1d2>
     cc2:	89 36       	cpi	r24, 0x69	; 105
     cc4:	41 f5       	brne	.+80     	; 0xd16 <vfprintf+0x222>
     cc6:	f8 01       	movw	r30, r16
     cc8:	37 fe       	sbrs	r3, 7
     cca:	07 c0       	rjmp	.+14     	; 0xcda <vfprintf+0x1e6>
     ccc:	60 81       	ld	r22, Z
     cce:	71 81       	ldd	r23, Z+1	; 0x01
     cd0:	82 81       	ldd	r24, Z+2	; 0x02
     cd2:	93 81       	ldd	r25, Z+3	; 0x03
     cd4:	0c 5f       	subi	r16, 0xFC	; 252
     cd6:	1f 4f       	sbci	r17, 0xFF	; 255
     cd8:	08 c0       	rjmp	.+16     	; 0xcea <vfprintf+0x1f6>
     cda:	60 81       	ld	r22, Z
     cdc:	71 81       	ldd	r23, Z+1	; 0x01
     cde:	07 2e       	mov	r0, r23
     ce0:	00 0c       	add	r0, r0
     ce2:	88 0b       	sbc	r24, r24
     ce4:	99 0b       	sbc	r25, r25
     ce6:	0e 5f       	subi	r16, 0xFE	; 254
     ce8:	1f 4f       	sbci	r17, 0xFF	; 255
     cea:	f3 2d       	mov	r31, r3
     cec:	ff 76       	andi	r31, 0x6F	; 111
     cee:	3f 2e       	mov	r3, r31
     cf0:	97 ff       	sbrs	r25, 7
     cf2:	09 c0       	rjmp	.+18     	; 0xd06 <vfprintf+0x212>
     cf4:	90 95       	com	r25
     cf6:	80 95       	com	r24
     cf8:	70 95       	com	r23
     cfa:	61 95       	neg	r22
     cfc:	7f 4f       	sbci	r23, 0xFF	; 255
     cfe:	8f 4f       	sbci	r24, 0xFF	; 255
     d00:	9f 4f       	sbci	r25, 0xFF	; 255
     d02:	f0 68       	ori	r31, 0x80	; 128
     d04:	3f 2e       	mov	r3, r31
     d06:	2a e0       	ldi	r18, 0x0A	; 10
     d08:	30 e0       	ldi	r19, 0x00	; 0
     d0a:	a3 01       	movw	r20, r6
     d0c:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__ultoa_invert>
     d10:	88 2e       	mov	r8, r24
     d12:	86 18       	sub	r8, r6
     d14:	45 c0       	rjmp	.+138    	; 0xda0 <vfprintf+0x2ac>
     d16:	85 37       	cpi	r24, 0x75	; 117
     d18:	31 f4       	brne	.+12     	; 0xd26 <vfprintf+0x232>
     d1a:	23 2d       	mov	r18, r3
     d1c:	2f 7e       	andi	r18, 0xEF	; 239
     d1e:	b2 2e       	mov	r11, r18
     d20:	2a e0       	ldi	r18, 0x0A	; 10
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	25 c0       	rjmp	.+74     	; 0xd70 <vfprintf+0x27c>
     d26:	93 2d       	mov	r25, r3
     d28:	99 7f       	andi	r25, 0xF9	; 249
     d2a:	b9 2e       	mov	r11, r25
     d2c:	8f 36       	cpi	r24, 0x6F	; 111
     d2e:	c1 f0       	breq	.+48     	; 0xd60 <vfprintf+0x26c>
     d30:	18 f4       	brcc	.+6      	; 0xd38 <vfprintf+0x244>
     d32:	88 35       	cpi	r24, 0x58	; 88
     d34:	79 f0       	breq	.+30     	; 0xd54 <vfprintf+0x260>
     d36:	b5 c0       	rjmp	.+362    	; 0xea2 <vfprintf+0x3ae>
     d38:	80 37       	cpi	r24, 0x70	; 112
     d3a:	19 f0       	breq	.+6      	; 0xd42 <vfprintf+0x24e>
     d3c:	88 37       	cpi	r24, 0x78	; 120
     d3e:	21 f0       	breq	.+8      	; 0xd48 <vfprintf+0x254>
     d40:	b0 c0       	rjmp	.+352    	; 0xea2 <vfprintf+0x3ae>
     d42:	e9 2f       	mov	r30, r25
     d44:	e0 61       	ori	r30, 0x10	; 16
     d46:	be 2e       	mov	r11, r30
     d48:	b4 fe       	sbrs	r11, 4
     d4a:	0d c0       	rjmp	.+26     	; 0xd66 <vfprintf+0x272>
     d4c:	fb 2d       	mov	r31, r11
     d4e:	f4 60       	ori	r31, 0x04	; 4
     d50:	bf 2e       	mov	r11, r31
     d52:	09 c0       	rjmp	.+18     	; 0xd66 <vfprintf+0x272>
     d54:	34 fe       	sbrs	r3, 4
     d56:	0a c0       	rjmp	.+20     	; 0xd6c <vfprintf+0x278>
     d58:	29 2f       	mov	r18, r25
     d5a:	26 60       	ori	r18, 0x06	; 6
     d5c:	b2 2e       	mov	r11, r18
     d5e:	06 c0       	rjmp	.+12     	; 0xd6c <vfprintf+0x278>
     d60:	28 e0       	ldi	r18, 0x08	; 8
     d62:	30 e0       	ldi	r19, 0x00	; 0
     d64:	05 c0       	rjmp	.+10     	; 0xd70 <vfprintf+0x27c>
     d66:	20 e1       	ldi	r18, 0x10	; 16
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	02 c0       	rjmp	.+4      	; 0xd70 <vfprintf+0x27c>
     d6c:	20 e1       	ldi	r18, 0x10	; 16
     d6e:	32 e0       	ldi	r19, 0x02	; 2
     d70:	f8 01       	movw	r30, r16
     d72:	b7 fe       	sbrs	r11, 7
     d74:	07 c0       	rjmp	.+14     	; 0xd84 <vfprintf+0x290>
     d76:	60 81       	ld	r22, Z
     d78:	71 81       	ldd	r23, Z+1	; 0x01
     d7a:	82 81       	ldd	r24, Z+2	; 0x02
     d7c:	93 81       	ldd	r25, Z+3	; 0x03
     d7e:	0c 5f       	subi	r16, 0xFC	; 252
     d80:	1f 4f       	sbci	r17, 0xFF	; 255
     d82:	06 c0       	rjmp	.+12     	; 0xd90 <vfprintf+0x29c>
     d84:	60 81       	ld	r22, Z
     d86:	71 81       	ldd	r23, Z+1	; 0x01
     d88:	80 e0       	ldi	r24, 0x00	; 0
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	0e 5f       	subi	r16, 0xFE	; 254
     d8e:	1f 4f       	sbci	r17, 0xFF	; 255
     d90:	a3 01       	movw	r20, r6
     d92:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__ultoa_invert>
     d96:	88 2e       	mov	r8, r24
     d98:	86 18       	sub	r8, r6
     d9a:	fb 2d       	mov	r31, r11
     d9c:	ff 77       	andi	r31, 0x7F	; 127
     d9e:	3f 2e       	mov	r3, r31
     da0:	36 fe       	sbrs	r3, 6
     da2:	0d c0       	rjmp	.+26     	; 0xdbe <vfprintf+0x2ca>
     da4:	23 2d       	mov	r18, r3
     da6:	2e 7f       	andi	r18, 0xFE	; 254
     da8:	a2 2e       	mov	r10, r18
     daa:	89 14       	cp	r8, r9
     dac:	58 f4       	brcc	.+22     	; 0xdc4 <vfprintf+0x2d0>
     dae:	34 fe       	sbrs	r3, 4
     db0:	0b c0       	rjmp	.+22     	; 0xdc8 <vfprintf+0x2d4>
     db2:	32 fc       	sbrc	r3, 2
     db4:	09 c0       	rjmp	.+18     	; 0xdc8 <vfprintf+0x2d4>
     db6:	83 2d       	mov	r24, r3
     db8:	8e 7e       	andi	r24, 0xEE	; 238
     dba:	a8 2e       	mov	r10, r24
     dbc:	05 c0       	rjmp	.+10     	; 0xdc8 <vfprintf+0x2d4>
     dbe:	b8 2c       	mov	r11, r8
     dc0:	a3 2c       	mov	r10, r3
     dc2:	03 c0       	rjmp	.+6      	; 0xdca <vfprintf+0x2d6>
     dc4:	b8 2c       	mov	r11, r8
     dc6:	01 c0       	rjmp	.+2      	; 0xdca <vfprintf+0x2d6>
     dc8:	b9 2c       	mov	r11, r9
     dca:	a4 fe       	sbrs	r10, 4
     dcc:	0f c0       	rjmp	.+30     	; 0xdec <vfprintf+0x2f8>
     dce:	fe 01       	movw	r30, r28
     dd0:	e8 0d       	add	r30, r8
     dd2:	f1 1d       	adc	r31, r1
     dd4:	80 81       	ld	r24, Z
     dd6:	80 33       	cpi	r24, 0x30	; 48
     dd8:	21 f4       	brne	.+8      	; 0xde2 <vfprintf+0x2ee>
     dda:	9a 2d       	mov	r25, r10
     ddc:	99 7e       	andi	r25, 0xE9	; 233
     dde:	a9 2e       	mov	r10, r25
     de0:	09 c0       	rjmp	.+18     	; 0xdf4 <vfprintf+0x300>
     de2:	a2 fe       	sbrs	r10, 2
     de4:	06 c0       	rjmp	.+12     	; 0xdf2 <vfprintf+0x2fe>
     de6:	b3 94       	inc	r11
     de8:	b3 94       	inc	r11
     dea:	04 c0       	rjmp	.+8      	; 0xdf4 <vfprintf+0x300>
     dec:	8a 2d       	mov	r24, r10
     dee:	86 78       	andi	r24, 0x86	; 134
     df0:	09 f0       	breq	.+2      	; 0xdf4 <vfprintf+0x300>
     df2:	b3 94       	inc	r11
     df4:	a3 fc       	sbrc	r10, 3
     df6:	11 c0       	rjmp	.+34     	; 0xe1a <vfprintf+0x326>
     df8:	a0 fe       	sbrs	r10, 0
     dfa:	06 c0       	rjmp	.+12     	; 0xe08 <vfprintf+0x314>
     dfc:	b2 14       	cp	r11, r2
     dfe:	88 f4       	brcc	.+34     	; 0xe22 <vfprintf+0x32e>
     e00:	28 0c       	add	r2, r8
     e02:	92 2c       	mov	r9, r2
     e04:	9b 18       	sub	r9, r11
     e06:	0e c0       	rjmp	.+28     	; 0xe24 <vfprintf+0x330>
     e08:	b2 14       	cp	r11, r2
     e0a:	60 f4       	brcc	.+24     	; 0xe24 <vfprintf+0x330>
     e0c:	b6 01       	movw	r22, r12
     e0e:	80 e2       	ldi	r24, 0x20	; 32
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	0e 94 b5 08 	call	0x116a	; 0x116a <fputc>
     e16:	b3 94       	inc	r11
     e18:	f7 cf       	rjmp	.-18     	; 0xe08 <vfprintf+0x314>
     e1a:	b2 14       	cp	r11, r2
     e1c:	18 f4       	brcc	.+6      	; 0xe24 <vfprintf+0x330>
     e1e:	2b 18       	sub	r2, r11
     e20:	02 c0       	rjmp	.+4      	; 0xe26 <vfprintf+0x332>
     e22:	98 2c       	mov	r9, r8
     e24:	21 2c       	mov	r2, r1
     e26:	a4 fe       	sbrs	r10, 4
     e28:	10 c0       	rjmp	.+32     	; 0xe4a <vfprintf+0x356>
     e2a:	b6 01       	movw	r22, r12
     e2c:	80 e3       	ldi	r24, 0x30	; 48
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	0e 94 b5 08 	call	0x116a	; 0x116a <fputc>
     e34:	a2 fe       	sbrs	r10, 2
     e36:	17 c0       	rjmp	.+46     	; 0xe66 <vfprintf+0x372>
     e38:	a1 fc       	sbrc	r10, 1
     e3a:	03 c0       	rjmp	.+6      	; 0xe42 <vfprintf+0x34e>
     e3c:	88 e7       	ldi	r24, 0x78	; 120
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	02 c0       	rjmp	.+4      	; 0xe46 <vfprintf+0x352>
     e42:	88 e5       	ldi	r24, 0x58	; 88
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	b6 01       	movw	r22, r12
     e48:	0c c0       	rjmp	.+24     	; 0xe62 <vfprintf+0x36e>
     e4a:	8a 2d       	mov	r24, r10
     e4c:	86 78       	andi	r24, 0x86	; 134
     e4e:	59 f0       	breq	.+22     	; 0xe66 <vfprintf+0x372>
     e50:	a1 fe       	sbrs	r10, 1
     e52:	02 c0       	rjmp	.+4      	; 0xe58 <vfprintf+0x364>
     e54:	8b e2       	ldi	r24, 0x2B	; 43
     e56:	01 c0       	rjmp	.+2      	; 0xe5a <vfprintf+0x366>
     e58:	80 e2       	ldi	r24, 0x20	; 32
     e5a:	a7 fc       	sbrc	r10, 7
     e5c:	8d e2       	ldi	r24, 0x2D	; 45
     e5e:	b6 01       	movw	r22, r12
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	0e 94 b5 08 	call	0x116a	; 0x116a <fputc>
     e66:	89 14       	cp	r8, r9
     e68:	38 f4       	brcc	.+14     	; 0xe78 <vfprintf+0x384>
     e6a:	b6 01       	movw	r22, r12
     e6c:	80 e3       	ldi	r24, 0x30	; 48
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	0e 94 b5 08 	call	0x116a	; 0x116a <fputc>
     e74:	9a 94       	dec	r9
     e76:	f7 cf       	rjmp	.-18     	; 0xe66 <vfprintf+0x372>
     e78:	8a 94       	dec	r8
     e7a:	f3 01       	movw	r30, r6
     e7c:	e8 0d       	add	r30, r8
     e7e:	f1 1d       	adc	r31, r1
     e80:	80 81       	ld	r24, Z
     e82:	b6 01       	movw	r22, r12
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	0e 94 b5 08 	call	0x116a	; 0x116a <fputc>
     e8a:	81 10       	cpse	r8, r1
     e8c:	f5 cf       	rjmp	.-22     	; 0xe78 <vfprintf+0x384>
     e8e:	22 20       	and	r2, r2
     e90:	09 f4       	brne	.+2      	; 0xe94 <vfprintf+0x3a0>
     e92:	42 ce       	rjmp	.-892    	; 0xb18 <vfprintf+0x24>
     e94:	b6 01       	movw	r22, r12
     e96:	80 e2       	ldi	r24, 0x20	; 32
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	0e 94 b5 08 	call	0x116a	; 0x116a <fputc>
     e9e:	2a 94       	dec	r2
     ea0:	f6 cf       	rjmp	.-20     	; 0xe8e <vfprintf+0x39a>
     ea2:	f6 01       	movw	r30, r12
     ea4:	86 81       	ldd	r24, Z+6	; 0x06
     ea6:	97 81       	ldd	r25, Z+7	; 0x07
     ea8:	02 c0       	rjmp	.+4      	; 0xeae <vfprintf+0x3ba>
     eaa:	8f ef       	ldi	r24, 0xFF	; 255
     eac:	9f ef       	ldi	r25, 0xFF	; 255
     eae:	2b 96       	adiw	r28, 0x0b	; 11
     eb0:	e2 e1       	ldi	r30, 0x12	; 18
     eb2:	0c 94 6b 09 	jmp	0x12d6	; 0x12d6 <__epilogue_restores__>

00000eb6 <calloc>:
     eb6:	0f 93       	push	r16
     eb8:	1f 93       	push	r17
     eba:	cf 93       	push	r28
     ebc:	df 93       	push	r29
     ebe:	86 9f       	mul	r24, r22
     ec0:	80 01       	movw	r16, r0
     ec2:	87 9f       	mul	r24, r23
     ec4:	10 0d       	add	r17, r0
     ec6:	96 9f       	mul	r25, r22
     ec8:	10 0d       	add	r17, r0
     eca:	11 24       	eor	r1, r1
     ecc:	c8 01       	movw	r24, r16
     ece:	0e 94 77 07 	call	0xeee	; 0xeee <malloc>
     ed2:	ec 01       	movw	r28, r24
     ed4:	00 97       	sbiw	r24, 0x00	; 0
     ed6:	29 f0       	breq	.+10     	; 0xee2 <calloc+0x2c>
     ed8:	a8 01       	movw	r20, r16
     eda:	60 e0       	ldi	r22, 0x00	; 0
     edc:	70 e0       	ldi	r23, 0x00	; 0
     ede:	0e 94 a3 08 	call	0x1146	; 0x1146 <memset>
     ee2:	ce 01       	movw	r24, r28
     ee4:	df 91       	pop	r29
     ee6:	cf 91       	pop	r28
     ee8:	1f 91       	pop	r17
     eea:	0f 91       	pop	r16
     eec:	08 95       	ret

00000eee <malloc>:
     eee:	0f 93       	push	r16
     ef0:	1f 93       	push	r17
     ef2:	cf 93       	push	r28
     ef4:	df 93       	push	r29
     ef6:	82 30       	cpi	r24, 0x02	; 2
     ef8:	91 05       	cpc	r25, r1
     efa:	10 f4       	brcc	.+4      	; 0xf00 <malloc+0x12>
     efc:	82 e0       	ldi	r24, 0x02	; 2
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	e0 91 81 02 	lds	r30, 0x0281	; 0x800281 <__flp>
     f04:	f0 91 82 02 	lds	r31, 0x0282	; 0x800282 <__flp+0x1>
     f08:	20 e0       	ldi	r18, 0x00	; 0
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	a0 e0       	ldi	r26, 0x00	; 0
     f0e:	b0 e0       	ldi	r27, 0x00	; 0
     f10:	30 97       	sbiw	r30, 0x00	; 0
     f12:	19 f1       	breq	.+70     	; 0xf5a <malloc+0x6c>
     f14:	40 81       	ld	r20, Z
     f16:	51 81       	ldd	r21, Z+1	; 0x01
     f18:	02 81       	ldd	r16, Z+2	; 0x02
     f1a:	13 81       	ldd	r17, Z+3	; 0x03
     f1c:	48 17       	cp	r20, r24
     f1e:	59 07       	cpc	r21, r25
     f20:	c8 f0       	brcs	.+50     	; 0xf54 <malloc+0x66>
     f22:	84 17       	cp	r24, r20
     f24:	95 07       	cpc	r25, r21
     f26:	69 f4       	brne	.+26     	; 0xf42 <malloc+0x54>
     f28:	10 97       	sbiw	r26, 0x00	; 0
     f2a:	31 f0       	breq	.+12     	; 0xf38 <malloc+0x4a>
     f2c:	12 96       	adiw	r26, 0x02	; 2
     f2e:	0c 93       	st	X, r16
     f30:	12 97       	sbiw	r26, 0x02	; 2
     f32:	13 96       	adiw	r26, 0x03	; 3
     f34:	1c 93       	st	X, r17
     f36:	27 c0       	rjmp	.+78     	; 0xf86 <malloc+0x98>
     f38:	00 93 81 02 	sts	0x0281, r16	; 0x800281 <__flp>
     f3c:	10 93 82 02 	sts	0x0282, r17	; 0x800282 <__flp+0x1>
     f40:	22 c0       	rjmp	.+68     	; 0xf86 <malloc+0x98>
     f42:	21 15       	cp	r18, r1
     f44:	31 05       	cpc	r19, r1
     f46:	19 f0       	breq	.+6      	; 0xf4e <malloc+0x60>
     f48:	42 17       	cp	r20, r18
     f4a:	53 07       	cpc	r21, r19
     f4c:	18 f4       	brcc	.+6      	; 0xf54 <malloc+0x66>
     f4e:	9a 01       	movw	r18, r20
     f50:	bd 01       	movw	r22, r26
     f52:	ef 01       	movw	r28, r30
     f54:	df 01       	movw	r26, r30
     f56:	f8 01       	movw	r30, r16
     f58:	db cf       	rjmp	.-74     	; 0xf10 <malloc+0x22>
     f5a:	21 15       	cp	r18, r1
     f5c:	31 05       	cpc	r19, r1
     f5e:	f9 f0       	breq	.+62     	; 0xf9e <malloc+0xb0>
     f60:	28 1b       	sub	r18, r24
     f62:	39 0b       	sbc	r19, r25
     f64:	24 30       	cpi	r18, 0x04	; 4
     f66:	31 05       	cpc	r19, r1
     f68:	80 f4       	brcc	.+32     	; 0xf8a <malloc+0x9c>
     f6a:	8a 81       	ldd	r24, Y+2	; 0x02
     f6c:	9b 81       	ldd	r25, Y+3	; 0x03
     f6e:	61 15       	cp	r22, r1
     f70:	71 05       	cpc	r23, r1
     f72:	21 f0       	breq	.+8      	; 0xf7c <malloc+0x8e>
     f74:	fb 01       	movw	r30, r22
     f76:	93 83       	std	Z+3, r25	; 0x03
     f78:	82 83       	std	Z+2, r24	; 0x02
     f7a:	04 c0       	rjmp	.+8      	; 0xf84 <malloc+0x96>
     f7c:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <__flp+0x1>
     f80:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <__flp>
     f84:	fe 01       	movw	r30, r28
     f86:	32 96       	adiw	r30, 0x02	; 2
     f88:	44 c0       	rjmp	.+136    	; 0x1012 <malloc+0x124>
     f8a:	fe 01       	movw	r30, r28
     f8c:	e2 0f       	add	r30, r18
     f8e:	f3 1f       	adc	r31, r19
     f90:	81 93       	st	Z+, r24
     f92:	91 93       	st	Z+, r25
     f94:	22 50       	subi	r18, 0x02	; 2
     f96:	31 09       	sbc	r19, r1
     f98:	39 83       	std	Y+1, r19	; 0x01
     f9a:	28 83       	st	Y, r18
     f9c:	3a c0       	rjmp	.+116    	; 0x1012 <malloc+0x124>
     f9e:	20 91 7f 02 	lds	r18, 0x027F	; 0x80027f <__brkval>
     fa2:	30 91 80 02 	lds	r19, 0x0280	; 0x800280 <__brkval+0x1>
     fa6:	23 2b       	or	r18, r19
     fa8:	41 f4       	brne	.+16     	; 0xfba <malloc+0xcc>
     faa:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     fae:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     fb2:	30 93 80 02 	sts	0x0280, r19	; 0x800280 <__brkval+0x1>
     fb6:	20 93 7f 02 	sts	0x027F, r18	; 0x80027f <__brkval>
     fba:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     fbe:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     fc2:	21 15       	cp	r18, r1
     fc4:	31 05       	cpc	r19, r1
     fc6:	41 f4       	brne	.+16     	; 0xfd8 <malloc+0xea>
     fc8:	2d b7       	in	r18, 0x3d	; 61
     fca:	3e b7       	in	r19, 0x3e	; 62
     fcc:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     fd0:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     fd4:	24 1b       	sub	r18, r20
     fd6:	35 0b       	sbc	r19, r21
     fd8:	e0 91 7f 02 	lds	r30, 0x027F	; 0x80027f <__brkval>
     fdc:	f0 91 80 02 	lds	r31, 0x0280	; 0x800280 <__brkval+0x1>
     fe0:	e2 17       	cp	r30, r18
     fe2:	f3 07       	cpc	r31, r19
     fe4:	a0 f4       	brcc	.+40     	; 0x100e <malloc+0x120>
     fe6:	2e 1b       	sub	r18, r30
     fe8:	3f 0b       	sbc	r19, r31
     fea:	28 17       	cp	r18, r24
     fec:	39 07       	cpc	r19, r25
     fee:	78 f0       	brcs	.+30     	; 0x100e <malloc+0x120>
     ff0:	ac 01       	movw	r20, r24
     ff2:	4e 5f       	subi	r20, 0xFE	; 254
     ff4:	5f 4f       	sbci	r21, 0xFF	; 255
     ff6:	24 17       	cp	r18, r20
     ff8:	35 07       	cpc	r19, r21
     ffa:	48 f0       	brcs	.+18     	; 0x100e <malloc+0x120>
     ffc:	4e 0f       	add	r20, r30
     ffe:	5f 1f       	adc	r21, r31
    1000:	50 93 80 02 	sts	0x0280, r21	; 0x800280 <__brkval+0x1>
    1004:	40 93 7f 02 	sts	0x027F, r20	; 0x80027f <__brkval>
    1008:	81 93       	st	Z+, r24
    100a:	91 93       	st	Z+, r25
    100c:	02 c0       	rjmp	.+4      	; 0x1012 <malloc+0x124>
    100e:	e0 e0       	ldi	r30, 0x00	; 0
    1010:	f0 e0       	ldi	r31, 0x00	; 0
    1012:	cf 01       	movw	r24, r30
    1014:	df 91       	pop	r29
    1016:	cf 91       	pop	r28
    1018:	1f 91       	pop	r17
    101a:	0f 91       	pop	r16
    101c:	08 95       	ret

0000101e <free>:
    101e:	cf 93       	push	r28
    1020:	df 93       	push	r29
    1022:	00 97       	sbiw	r24, 0x00	; 0
    1024:	09 f4       	brne	.+2      	; 0x1028 <free+0xa>
    1026:	81 c0       	rjmp	.+258    	; 0x112a <free+0x10c>
    1028:	fc 01       	movw	r30, r24
    102a:	32 97       	sbiw	r30, 0x02	; 2
    102c:	13 82       	std	Z+3, r1	; 0x03
    102e:	12 82       	std	Z+2, r1	; 0x02
    1030:	a0 91 81 02 	lds	r26, 0x0281	; 0x800281 <__flp>
    1034:	b0 91 82 02 	lds	r27, 0x0282	; 0x800282 <__flp+0x1>
    1038:	10 97       	sbiw	r26, 0x00	; 0
    103a:	81 f4       	brne	.+32     	; 0x105c <free+0x3e>
    103c:	20 81       	ld	r18, Z
    103e:	31 81       	ldd	r19, Z+1	; 0x01
    1040:	82 0f       	add	r24, r18
    1042:	93 1f       	adc	r25, r19
    1044:	20 91 7f 02 	lds	r18, 0x027F	; 0x80027f <__brkval>
    1048:	30 91 80 02 	lds	r19, 0x0280	; 0x800280 <__brkval+0x1>
    104c:	28 17       	cp	r18, r24
    104e:	39 07       	cpc	r19, r25
    1050:	51 f5       	brne	.+84     	; 0x10a6 <free+0x88>
    1052:	f0 93 80 02 	sts	0x0280, r31	; 0x800280 <__brkval+0x1>
    1056:	e0 93 7f 02 	sts	0x027F, r30	; 0x80027f <__brkval>
    105a:	67 c0       	rjmp	.+206    	; 0x112a <free+0x10c>
    105c:	ed 01       	movw	r28, r26
    105e:	20 e0       	ldi	r18, 0x00	; 0
    1060:	30 e0       	ldi	r19, 0x00	; 0
    1062:	ce 17       	cp	r28, r30
    1064:	df 07       	cpc	r29, r31
    1066:	40 f4       	brcc	.+16     	; 0x1078 <free+0x5a>
    1068:	4a 81       	ldd	r20, Y+2	; 0x02
    106a:	5b 81       	ldd	r21, Y+3	; 0x03
    106c:	9e 01       	movw	r18, r28
    106e:	41 15       	cp	r20, r1
    1070:	51 05       	cpc	r21, r1
    1072:	f1 f0       	breq	.+60     	; 0x10b0 <free+0x92>
    1074:	ea 01       	movw	r28, r20
    1076:	f5 cf       	rjmp	.-22     	; 0x1062 <free+0x44>
    1078:	d3 83       	std	Z+3, r29	; 0x03
    107a:	c2 83       	std	Z+2, r28	; 0x02
    107c:	40 81       	ld	r20, Z
    107e:	51 81       	ldd	r21, Z+1	; 0x01
    1080:	84 0f       	add	r24, r20
    1082:	95 1f       	adc	r25, r21
    1084:	c8 17       	cp	r28, r24
    1086:	d9 07       	cpc	r29, r25
    1088:	59 f4       	brne	.+22     	; 0x10a0 <free+0x82>
    108a:	88 81       	ld	r24, Y
    108c:	99 81       	ldd	r25, Y+1	; 0x01
    108e:	84 0f       	add	r24, r20
    1090:	95 1f       	adc	r25, r21
    1092:	02 96       	adiw	r24, 0x02	; 2
    1094:	91 83       	std	Z+1, r25	; 0x01
    1096:	80 83       	st	Z, r24
    1098:	8a 81       	ldd	r24, Y+2	; 0x02
    109a:	9b 81       	ldd	r25, Y+3	; 0x03
    109c:	93 83       	std	Z+3, r25	; 0x03
    109e:	82 83       	std	Z+2, r24	; 0x02
    10a0:	21 15       	cp	r18, r1
    10a2:	31 05       	cpc	r19, r1
    10a4:	29 f4       	brne	.+10     	; 0x10b0 <free+0x92>
    10a6:	f0 93 82 02 	sts	0x0282, r31	; 0x800282 <__flp+0x1>
    10aa:	e0 93 81 02 	sts	0x0281, r30	; 0x800281 <__flp>
    10ae:	3d c0       	rjmp	.+122    	; 0x112a <free+0x10c>
    10b0:	e9 01       	movw	r28, r18
    10b2:	fb 83       	std	Y+3, r31	; 0x03
    10b4:	ea 83       	std	Y+2, r30	; 0x02
    10b6:	49 91       	ld	r20, Y+
    10b8:	59 91       	ld	r21, Y+
    10ba:	c4 0f       	add	r28, r20
    10bc:	d5 1f       	adc	r29, r21
    10be:	ec 17       	cp	r30, r28
    10c0:	fd 07       	cpc	r31, r29
    10c2:	61 f4       	brne	.+24     	; 0x10dc <free+0xbe>
    10c4:	80 81       	ld	r24, Z
    10c6:	91 81       	ldd	r25, Z+1	; 0x01
    10c8:	84 0f       	add	r24, r20
    10ca:	95 1f       	adc	r25, r21
    10cc:	02 96       	adiw	r24, 0x02	; 2
    10ce:	e9 01       	movw	r28, r18
    10d0:	99 83       	std	Y+1, r25	; 0x01
    10d2:	88 83       	st	Y, r24
    10d4:	82 81       	ldd	r24, Z+2	; 0x02
    10d6:	93 81       	ldd	r25, Z+3	; 0x03
    10d8:	9b 83       	std	Y+3, r25	; 0x03
    10da:	8a 83       	std	Y+2, r24	; 0x02
    10dc:	e0 e0       	ldi	r30, 0x00	; 0
    10de:	f0 e0       	ldi	r31, 0x00	; 0
    10e0:	12 96       	adiw	r26, 0x02	; 2
    10e2:	8d 91       	ld	r24, X+
    10e4:	9c 91       	ld	r25, X
    10e6:	13 97       	sbiw	r26, 0x03	; 3
    10e8:	00 97       	sbiw	r24, 0x00	; 0
    10ea:	19 f0       	breq	.+6      	; 0x10f2 <free+0xd4>
    10ec:	fd 01       	movw	r30, r26
    10ee:	dc 01       	movw	r26, r24
    10f0:	f7 cf       	rjmp	.-18     	; 0x10e0 <free+0xc2>
    10f2:	8d 91       	ld	r24, X+
    10f4:	9c 91       	ld	r25, X
    10f6:	11 97       	sbiw	r26, 0x01	; 1
    10f8:	9d 01       	movw	r18, r26
    10fa:	2e 5f       	subi	r18, 0xFE	; 254
    10fc:	3f 4f       	sbci	r19, 0xFF	; 255
    10fe:	82 0f       	add	r24, r18
    1100:	93 1f       	adc	r25, r19
    1102:	20 91 7f 02 	lds	r18, 0x027F	; 0x80027f <__brkval>
    1106:	30 91 80 02 	lds	r19, 0x0280	; 0x800280 <__brkval+0x1>
    110a:	28 17       	cp	r18, r24
    110c:	39 07       	cpc	r19, r25
    110e:	69 f4       	brne	.+26     	; 0x112a <free+0x10c>
    1110:	30 97       	sbiw	r30, 0x00	; 0
    1112:	29 f4       	brne	.+10     	; 0x111e <free+0x100>
    1114:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <__flp+0x1>
    1118:	10 92 81 02 	sts	0x0281, r1	; 0x800281 <__flp>
    111c:	02 c0       	rjmp	.+4      	; 0x1122 <free+0x104>
    111e:	13 82       	std	Z+3, r1	; 0x03
    1120:	12 82       	std	Z+2, r1	; 0x02
    1122:	b0 93 80 02 	sts	0x0280, r27	; 0x800280 <__brkval+0x1>
    1126:	a0 93 7f 02 	sts	0x027F, r26	; 0x80027f <__brkval>
    112a:	df 91       	pop	r29
    112c:	cf 91       	pop	r28
    112e:	08 95       	ret

00001130 <strnlen_P>:
    1130:	fc 01       	movw	r30, r24
    1132:	05 90       	lpm	r0, Z+
    1134:	61 50       	subi	r22, 0x01	; 1
    1136:	70 40       	sbci	r23, 0x00	; 0
    1138:	01 10       	cpse	r0, r1
    113a:	d8 f7       	brcc	.-10     	; 0x1132 <strnlen_P+0x2>
    113c:	80 95       	com	r24
    113e:	90 95       	com	r25
    1140:	8e 0f       	add	r24, r30
    1142:	9f 1f       	adc	r25, r31
    1144:	08 95       	ret

00001146 <memset>:
    1146:	dc 01       	movw	r26, r24
    1148:	01 c0       	rjmp	.+2      	; 0x114c <memset+0x6>
    114a:	6d 93       	st	X+, r22
    114c:	41 50       	subi	r20, 0x01	; 1
    114e:	50 40       	sbci	r21, 0x00	; 0
    1150:	e0 f7       	brcc	.-8      	; 0x114a <memset+0x4>
    1152:	08 95       	ret

00001154 <strnlen>:
    1154:	fc 01       	movw	r30, r24
    1156:	61 50       	subi	r22, 0x01	; 1
    1158:	70 40       	sbci	r23, 0x00	; 0
    115a:	01 90       	ld	r0, Z+
    115c:	01 10       	cpse	r0, r1
    115e:	d8 f7       	brcc	.-10     	; 0x1156 <strnlen+0x2>
    1160:	80 95       	com	r24
    1162:	90 95       	com	r25
    1164:	8e 0f       	add	r24, r30
    1166:	9f 1f       	adc	r25, r31
    1168:	08 95       	ret

0000116a <fputc>:
    116a:	0f 93       	push	r16
    116c:	1f 93       	push	r17
    116e:	cf 93       	push	r28
    1170:	df 93       	push	r29
    1172:	fb 01       	movw	r30, r22
    1174:	23 81       	ldd	r18, Z+3	; 0x03
    1176:	21 fd       	sbrc	r18, 1
    1178:	03 c0       	rjmp	.+6      	; 0x1180 <fputc+0x16>
    117a:	8f ef       	ldi	r24, 0xFF	; 255
    117c:	9f ef       	ldi	r25, 0xFF	; 255
    117e:	2c c0       	rjmp	.+88     	; 0x11d8 <fputc+0x6e>
    1180:	22 ff       	sbrs	r18, 2
    1182:	16 c0       	rjmp	.+44     	; 0x11b0 <fputc+0x46>
    1184:	46 81       	ldd	r20, Z+6	; 0x06
    1186:	57 81       	ldd	r21, Z+7	; 0x07
    1188:	24 81       	ldd	r18, Z+4	; 0x04
    118a:	35 81       	ldd	r19, Z+5	; 0x05
    118c:	42 17       	cp	r20, r18
    118e:	53 07       	cpc	r21, r19
    1190:	44 f4       	brge	.+16     	; 0x11a2 <fputc+0x38>
    1192:	a0 81       	ld	r26, Z
    1194:	b1 81       	ldd	r27, Z+1	; 0x01
    1196:	9d 01       	movw	r18, r26
    1198:	2f 5f       	subi	r18, 0xFF	; 255
    119a:	3f 4f       	sbci	r19, 0xFF	; 255
    119c:	31 83       	std	Z+1, r19	; 0x01
    119e:	20 83       	st	Z, r18
    11a0:	8c 93       	st	X, r24
    11a2:	26 81       	ldd	r18, Z+6	; 0x06
    11a4:	37 81       	ldd	r19, Z+7	; 0x07
    11a6:	2f 5f       	subi	r18, 0xFF	; 255
    11a8:	3f 4f       	sbci	r19, 0xFF	; 255
    11aa:	37 83       	std	Z+7, r19	; 0x07
    11ac:	26 83       	std	Z+6, r18	; 0x06
    11ae:	14 c0       	rjmp	.+40     	; 0x11d8 <fputc+0x6e>
    11b0:	8b 01       	movw	r16, r22
    11b2:	ec 01       	movw	r28, r24
    11b4:	fb 01       	movw	r30, r22
    11b6:	00 84       	ldd	r0, Z+8	; 0x08
    11b8:	f1 85       	ldd	r31, Z+9	; 0x09
    11ba:	e0 2d       	mov	r30, r0
    11bc:	09 95       	icall
    11be:	89 2b       	or	r24, r25
    11c0:	e1 f6       	brne	.-72     	; 0x117a <fputc+0x10>
    11c2:	d8 01       	movw	r26, r16
    11c4:	16 96       	adiw	r26, 0x06	; 6
    11c6:	8d 91       	ld	r24, X+
    11c8:	9c 91       	ld	r25, X
    11ca:	17 97       	sbiw	r26, 0x07	; 7
    11cc:	01 96       	adiw	r24, 0x01	; 1
    11ce:	17 96       	adiw	r26, 0x07	; 7
    11d0:	9c 93       	st	X, r25
    11d2:	8e 93       	st	-X, r24
    11d4:	16 97       	sbiw	r26, 0x06	; 6
    11d6:	ce 01       	movw	r24, r28
    11d8:	df 91       	pop	r29
    11da:	cf 91       	pop	r28
    11dc:	1f 91       	pop	r17
    11de:	0f 91       	pop	r16
    11e0:	08 95       	ret

000011e2 <__ultoa_invert>:
    11e2:	fa 01       	movw	r30, r20
    11e4:	aa 27       	eor	r26, r26
    11e6:	28 30       	cpi	r18, 0x08	; 8
    11e8:	51 f1       	breq	.+84     	; 0x123e <__ultoa_invert+0x5c>
    11ea:	20 31       	cpi	r18, 0x10	; 16
    11ec:	81 f1       	breq	.+96     	; 0x124e <__ultoa_invert+0x6c>
    11ee:	e8 94       	clt
    11f0:	6f 93       	push	r22
    11f2:	6e 7f       	andi	r22, 0xFE	; 254
    11f4:	6e 5f       	subi	r22, 0xFE	; 254
    11f6:	7f 4f       	sbci	r23, 0xFF	; 255
    11f8:	8f 4f       	sbci	r24, 0xFF	; 255
    11fa:	9f 4f       	sbci	r25, 0xFF	; 255
    11fc:	af 4f       	sbci	r26, 0xFF	; 255
    11fe:	b1 e0       	ldi	r27, 0x01	; 1
    1200:	3e d0       	rcall	.+124    	; 0x127e <__ultoa_invert+0x9c>
    1202:	b4 e0       	ldi	r27, 0x04	; 4
    1204:	3c d0       	rcall	.+120    	; 0x127e <__ultoa_invert+0x9c>
    1206:	67 0f       	add	r22, r23
    1208:	78 1f       	adc	r23, r24
    120a:	89 1f       	adc	r24, r25
    120c:	9a 1f       	adc	r25, r26
    120e:	a1 1d       	adc	r26, r1
    1210:	68 0f       	add	r22, r24
    1212:	79 1f       	adc	r23, r25
    1214:	8a 1f       	adc	r24, r26
    1216:	91 1d       	adc	r25, r1
    1218:	a1 1d       	adc	r26, r1
    121a:	6a 0f       	add	r22, r26
    121c:	71 1d       	adc	r23, r1
    121e:	81 1d       	adc	r24, r1
    1220:	91 1d       	adc	r25, r1
    1222:	a1 1d       	adc	r26, r1
    1224:	20 d0       	rcall	.+64     	; 0x1266 <__ultoa_invert+0x84>
    1226:	09 f4       	brne	.+2      	; 0x122a <__ultoa_invert+0x48>
    1228:	68 94       	set
    122a:	3f 91       	pop	r19
    122c:	2a e0       	ldi	r18, 0x0A	; 10
    122e:	26 9f       	mul	r18, r22
    1230:	11 24       	eor	r1, r1
    1232:	30 19       	sub	r19, r0
    1234:	30 5d       	subi	r19, 0xD0	; 208
    1236:	31 93       	st	Z+, r19
    1238:	de f6       	brtc	.-74     	; 0x11f0 <__ultoa_invert+0xe>
    123a:	cf 01       	movw	r24, r30
    123c:	08 95       	ret
    123e:	46 2f       	mov	r20, r22
    1240:	47 70       	andi	r20, 0x07	; 7
    1242:	40 5d       	subi	r20, 0xD0	; 208
    1244:	41 93       	st	Z+, r20
    1246:	b3 e0       	ldi	r27, 0x03	; 3
    1248:	0f d0       	rcall	.+30     	; 0x1268 <__ultoa_invert+0x86>
    124a:	c9 f7       	brne	.-14     	; 0x123e <__ultoa_invert+0x5c>
    124c:	f6 cf       	rjmp	.-20     	; 0x123a <__ultoa_invert+0x58>
    124e:	46 2f       	mov	r20, r22
    1250:	4f 70       	andi	r20, 0x0F	; 15
    1252:	40 5d       	subi	r20, 0xD0	; 208
    1254:	4a 33       	cpi	r20, 0x3A	; 58
    1256:	18 f0       	brcs	.+6      	; 0x125e <__ultoa_invert+0x7c>
    1258:	49 5d       	subi	r20, 0xD9	; 217
    125a:	31 fd       	sbrc	r19, 1
    125c:	40 52       	subi	r20, 0x20	; 32
    125e:	41 93       	st	Z+, r20
    1260:	02 d0       	rcall	.+4      	; 0x1266 <__ultoa_invert+0x84>
    1262:	a9 f7       	brne	.-22     	; 0x124e <__ultoa_invert+0x6c>
    1264:	ea cf       	rjmp	.-44     	; 0x123a <__ultoa_invert+0x58>
    1266:	b4 e0       	ldi	r27, 0x04	; 4
    1268:	a6 95       	lsr	r26
    126a:	97 95       	ror	r25
    126c:	87 95       	ror	r24
    126e:	77 95       	ror	r23
    1270:	67 95       	ror	r22
    1272:	ba 95       	dec	r27
    1274:	c9 f7       	brne	.-14     	; 0x1268 <__ultoa_invert+0x86>
    1276:	00 97       	sbiw	r24, 0x00	; 0
    1278:	61 05       	cpc	r22, r1
    127a:	71 05       	cpc	r23, r1
    127c:	08 95       	ret
    127e:	9b 01       	movw	r18, r22
    1280:	ac 01       	movw	r20, r24
    1282:	0a 2e       	mov	r0, r26
    1284:	06 94       	lsr	r0
    1286:	57 95       	ror	r21
    1288:	47 95       	ror	r20
    128a:	37 95       	ror	r19
    128c:	27 95       	ror	r18
    128e:	ba 95       	dec	r27
    1290:	c9 f7       	brne	.-14     	; 0x1284 <__ultoa_invert+0xa2>
    1292:	62 0f       	add	r22, r18
    1294:	73 1f       	adc	r23, r19
    1296:	84 1f       	adc	r24, r20
    1298:	95 1f       	adc	r25, r21
    129a:	a0 1d       	adc	r26, r0
    129c:	08 95       	ret

0000129e <__prologue_saves__>:
    129e:	2f 92       	push	r2
    12a0:	3f 92       	push	r3
    12a2:	4f 92       	push	r4
    12a4:	5f 92       	push	r5
    12a6:	6f 92       	push	r6
    12a8:	7f 92       	push	r7
    12aa:	8f 92       	push	r8
    12ac:	9f 92       	push	r9
    12ae:	af 92       	push	r10
    12b0:	bf 92       	push	r11
    12b2:	cf 92       	push	r12
    12b4:	df 92       	push	r13
    12b6:	ef 92       	push	r14
    12b8:	ff 92       	push	r15
    12ba:	0f 93       	push	r16
    12bc:	1f 93       	push	r17
    12be:	cf 93       	push	r28
    12c0:	df 93       	push	r29
    12c2:	cd b7       	in	r28, 0x3d	; 61
    12c4:	de b7       	in	r29, 0x3e	; 62
    12c6:	ca 1b       	sub	r28, r26
    12c8:	db 0b       	sbc	r29, r27
    12ca:	0f b6       	in	r0, 0x3f	; 63
    12cc:	f8 94       	cli
    12ce:	de bf       	out	0x3e, r29	; 62
    12d0:	0f be       	out	0x3f, r0	; 63
    12d2:	cd bf       	out	0x3d, r28	; 61
    12d4:	09 94       	ijmp

000012d6 <__epilogue_restores__>:
    12d6:	2a 88       	ldd	r2, Y+18	; 0x12
    12d8:	39 88       	ldd	r3, Y+17	; 0x11
    12da:	48 88       	ldd	r4, Y+16	; 0x10
    12dc:	5f 84       	ldd	r5, Y+15	; 0x0f
    12de:	6e 84       	ldd	r6, Y+14	; 0x0e
    12e0:	7d 84       	ldd	r7, Y+13	; 0x0d
    12e2:	8c 84       	ldd	r8, Y+12	; 0x0c
    12e4:	9b 84       	ldd	r9, Y+11	; 0x0b
    12e6:	aa 84       	ldd	r10, Y+10	; 0x0a
    12e8:	b9 84       	ldd	r11, Y+9	; 0x09
    12ea:	c8 84       	ldd	r12, Y+8	; 0x08
    12ec:	df 80       	ldd	r13, Y+7	; 0x07
    12ee:	ee 80       	ldd	r14, Y+6	; 0x06
    12f0:	fd 80       	ldd	r15, Y+5	; 0x05
    12f2:	0c 81       	ldd	r16, Y+4	; 0x04
    12f4:	1b 81       	ldd	r17, Y+3	; 0x03
    12f6:	aa 81       	ldd	r26, Y+2	; 0x02
    12f8:	b9 81       	ldd	r27, Y+1	; 0x01
    12fa:	ce 0f       	add	r28, r30
    12fc:	d1 1d       	adc	r29, r1
    12fe:	0f b6       	in	r0, 0x3f	; 63
    1300:	f8 94       	cli
    1302:	de bf       	out	0x3e, r29	; 62
    1304:	0f be       	out	0x3f, r0	; 63
    1306:	cd bf       	out	0x3d, r28	; 61
    1308:	ed 01       	movw	r28, r26
    130a:	08 95       	ret

0000130c <_exit>:
    130c:	f8 94       	cli

0000130e <__stop_program>:
    130e:	ff cf       	rjmp	.-2      	; 0x130e <__stop_program>
