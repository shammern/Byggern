
ByggernGr26.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000244  00800100  00001582  00001616  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001582  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001f  00800344  00800344  0000185a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000185a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000018b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  000018f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003084  00000000  00000000  00001b84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001202  00000000  00000000  00004c08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000157b  00000000  00000000  00005e0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000620  00000000  00000000  00007388  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000093d  00000000  00000000  000079a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001597  00000000  00000000  000082e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  0000987c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 9a 05 	jmp	0xb34	; 0xb34 <__vector_3>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__vector_3+0xe>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	13 e0       	ldi	r17, 0x03	; 3
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e2 e8       	ldi	r30, 0x82	; 130
     37c:	f5 e1       	ldi	r31, 0x15	; 21
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a4 34       	cpi	r26, 0x44	; 68
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	23 e0       	ldi	r18, 0x03	; 3
     38c:	a4 e4       	ldi	r26, 0x44	; 68
     38e:	b3 e0       	ldi	r27, 0x03	; 3
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a3 36       	cpi	r26, 0x63	; 99
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 c5 05 	call	0xb8a	; 0xb8a <main>
     39e:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_init>:
	printf("The Left slider value is : %d\n",Slide->l_slider);
	printf("Y NEUTRAL IS : %d\n", Stick->y_neutralPoint);
	printf("X NEUTRAL IS : %d\n", Stick->x_neutralPoint);
	
	
}
     3a6:	81 b3       	in	r24, 0x11	; 17
     3a8:	80 62       	ori	r24, 0x20	; 32
     3aa:	81 bb       	out	0x11, r24	; 17
     3ac:	8f b5       	in	r24, 0x2f	; 47
     3ae:	83 64       	ori	r24, 0x43	; 67
     3b0:	8f bd       	out	0x2f, r24	; 47
     3b2:	8e b5       	in	r24, 0x2e	; 46
     3b4:	89 61       	ori	r24, 0x19	; 25
     3b6:	8e bd       	out	0x2e, r24	; 46
     3b8:	81 b3       	in	r24, 0x11	; 17
     3ba:	8f 7e       	andi	r24, 0xEF	; 239
     3bc:	81 bb       	out	0x11, r24	; 17
     3be:	88 b3       	in	r24, 0x18	; 24
     3c0:	80 61       	ori	r24, 0x10	; 16
     3c2:	88 bb       	out	0x18, r24	; 24
     3c4:	08 95       	ret

000003c6 <adc_read>:
     3c6:	0f 93       	push	r16
     3c8:	1f 93       	push	r17
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
     3ce:	8c 01       	movw	r16, r24
     3d0:	eb 01       	movw	r28, r22
     3d2:	60 e0       	ldi	r22, 0x00	; 0
     3d4:	74 e1       	ldi	r23, 0x14	; 20
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <xmem_write>
     3dc:	85 e0       	ldi	r24, 0x05	; 5
     3de:	8a 95       	dec	r24
     3e0:	f1 f7       	brne	.-4      	; 0x3de <adc_read+0x18>
     3e2:	80 e0       	ldi	r24, 0x00	; 0
     3e4:	94 e1       	ldi	r25, 0x14	; 20
     3e6:	0e 94 7e 05 	call	0xafc	; 0xafc <xmem_read>
     3ea:	f8 01       	movw	r30, r16
     3ec:	81 83       	std	Z+1, r24	; 0x01
     3ee:	80 e0       	ldi	r24, 0x00	; 0
     3f0:	94 e1       	ldi	r25, 0x14	; 20
     3f2:	0e 94 7e 05 	call	0xafc	; 0xafc <xmem_read>
     3f6:	f8 01       	movw	r30, r16
     3f8:	80 83       	st	Z, r24
     3fa:	80 e0       	ldi	r24, 0x00	; 0
     3fc:	94 e1       	ldi	r25, 0x14	; 20
     3fe:	0e 94 7e 05 	call	0xafc	; 0xafc <xmem_read>
     402:	88 83       	st	Y, r24
     404:	80 e0       	ldi	r24, 0x00	; 0
     406:	94 e1       	ldi	r25, 0x14	; 20
     408:	0e 94 7e 05 	call	0xafc	; 0xafc <xmem_read>
     40c:	89 83       	std	Y+1, r24	; 0x01
     40e:	83 ed       	ldi	r24, 0xD3	; 211
     410:	90 e3       	ldi	r25, 0x30	; 48
     412:	01 97       	sbiw	r24, 0x01	; 1
     414:	f1 f7       	brne	.-4      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
     416:	00 c0       	rjmp	.+0      	; 0x418 <__DATA_REGION_LENGTH__+0x18>
     418:	00 00       	nop
     41a:	df 91       	pop	r29
     41c:	cf 91       	pop	r28
     41e:	1f 91       	pop	r17
     420:	0f 91       	pop	r16
     422:	08 95       	ret

00000424 <joyStickPos>:
     424:	fc 01       	movw	r30, r24
     426:	64 81       	ldd	r22, Z+4	; 0x04
     428:	45 81       	ldd	r20, Z+5	; 0x05
     42a:	80 81       	ld	r24, Z
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	70 e0       	ldi	r23, 0x00	; 0
     430:	9b 01       	movw	r18, r22
     432:	26 5f       	subi	r18, 0xF6	; 246
     434:	3f 4f       	sbci	r19, 0xFF	; 255
     436:	28 17       	cp	r18, r24
     438:	39 07       	cpc	r19, r25
     43a:	9c f4       	brge	.+38     	; 0x462 <joyStickPos+0x3e>
     43c:	9c 01       	movw	r18, r24
     43e:	26 1b       	sub	r18, r22
     440:	37 0b       	sbc	r19, r23
     442:	54 e6       	ldi	r21, 0x64	; 100
     444:	52 9f       	mul	r21, r18
     446:	c0 01       	movw	r24, r0
     448:	53 9f       	mul	r21, r19
     44a:	90 0d       	add	r25, r0
     44c:	11 24       	eor	r1, r1
     44e:	2f ef       	ldi	r18, 0xFF	; 255
     450:	30 e0       	ldi	r19, 0x00	; 0
     452:	d9 01       	movw	r26, r18
     454:	a6 1b       	sub	r26, r22
     456:	b7 0b       	sbc	r27, r23
     458:	bd 01       	movw	r22, r26
     45a:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__divmodhi4>
     45e:	62 83       	std	Z+2, r22	; 0x02
     460:	14 c0       	rjmp	.+40     	; 0x48a <joyStickPos+0x66>
     462:	9b 01       	movw	r18, r22
     464:	2a 50       	subi	r18, 0x0A	; 10
     466:	31 09       	sbc	r19, r1
     468:	82 17       	cp	r24, r18
     46a:	93 07       	cpc	r25, r19
     46c:	6c f4       	brge	.+26     	; 0x488 <joyStickPos+0x64>
     46e:	9c 01       	movw	r18, r24
     470:	26 1b       	sub	r18, r22
     472:	37 0b       	sbc	r19, r23
     474:	54 e6       	ldi	r21, 0x64	; 100
     476:	52 9f       	mul	r21, r18
     478:	c0 01       	movw	r24, r0
     47a:	53 9f       	mul	r21, r19
     47c:	90 0d       	add	r25, r0
     47e:	11 24       	eor	r1, r1
     480:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__divmodhi4>
     484:	62 83       	std	Z+2, r22	; 0x02
     486:	01 c0       	rjmp	.+2      	; 0x48a <joyStickPos+0x66>
     488:	12 82       	std	Z+2, r1	; 0x02
     48a:	81 81       	ldd	r24, Z+1	; 0x01
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	64 2f       	mov	r22, r20
     490:	70 e0       	ldi	r23, 0x00	; 0
     492:	9b 01       	movw	r18, r22
     494:	26 5f       	subi	r18, 0xF6	; 246
     496:	3f 4f       	sbci	r19, 0xFF	; 255
     498:	28 17       	cp	r18, r24
     49a:	39 07       	cpc	r19, r25
     49c:	9c f4       	brge	.+38     	; 0x4c4 <joyStickPos+0xa0>
     49e:	9c 01       	movw	r18, r24
     4a0:	26 1b       	sub	r18, r22
     4a2:	37 0b       	sbc	r19, r23
     4a4:	44 e6       	ldi	r20, 0x64	; 100
     4a6:	42 9f       	mul	r20, r18
     4a8:	c0 01       	movw	r24, r0
     4aa:	43 9f       	mul	r20, r19
     4ac:	90 0d       	add	r25, r0
     4ae:	11 24       	eor	r1, r1
     4b0:	2f ef       	ldi	r18, 0xFF	; 255
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	a9 01       	movw	r20, r18
     4b6:	46 1b       	sub	r20, r22
     4b8:	57 0b       	sbc	r21, r23
     4ba:	ba 01       	movw	r22, r20
     4bc:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__divmodhi4>
     4c0:	63 83       	std	Z+3, r22	; 0x03
     4c2:	08 95       	ret
     4c4:	9b 01       	movw	r18, r22
     4c6:	2a 50       	subi	r18, 0x0A	; 10
     4c8:	31 09       	sbc	r19, r1
     4ca:	82 17       	cp	r24, r18
     4cc:	93 07       	cpc	r25, r19
     4ce:	6c f4       	brge	.+26     	; 0x4ea <joyStickPos+0xc6>
     4d0:	9c 01       	movw	r18, r24
     4d2:	26 1b       	sub	r18, r22
     4d4:	37 0b       	sbc	r19, r23
     4d6:	44 e6       	ldi	r20, 0x64	; 100
     4d8:	42 9f       	mul	r20, r18
     4da:	c0 01       	movw	r24, r0
     4dc:	43 9f       	mul	r20, r19
     4de:	90 0d       	add	r25, r0
     4e0:	11 24       	eor	r1, r1
     4e2:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__divmodhi4>
     4e6:	63 83       	std	Z+3, r22	; 0x03
     4e8:	08 95       	ret
     4ea:	13 82       	std	Z+3, r1	; 0x03
     4ec:	08 95       	ret

000004ee <joyStickDir>:
     4ee:	fc 01       	movw	r30, r24
     4f0:	42 81       	ldd	r20, Z+2	; 0x02
     4f2:	24 2f       	mov	r18, r20
     4f4:	04 2e       	mov	r0, r20
     4f6:	00 0c       	add	r0, r0
     4f8:	33 0b       	sbc	r19, r19
     4fa:	33 23       	and	r19, r19
     4fc:	1c f4       	brge	.+6      	; 0x504 <__stack+0x5>
     4fe:	31 95       	neg	r19
     500:	21 95       	neg	r18
     502:	31 09       	sbc	r19, r1
     504:	fc 01       	movw	r30, r24
     506:	33 81       	ldd	r19, Z+3	; 0x03
     508:	83 2f       	mov	r24, r19
     50a:	03 2e       	mov	r0, r19
     50c:	00 0c       	add	r0, r0
     50e:	99 0b       	sbc	r25, r25
     510:	99 23       	and	r25, r25
     512:	1c f4       	brge	.+6      	; 0x51a <__stack+0x1b>
     514:	91 95       	neg	r25
     516:	81 95       	neg	r24
     518:	91 09       	sbc	r25, r1
     51a:	82 17       	cp	r24, r18
     51c:	b0 f4       	brcc	.+44     	; 0x54a <__stack+0x4b>
     51e:	43 33       	cpi	r20, 0x33	; 51
     520:	34 f0       	brlt	.+12     	; 0x52e <__stack+0x2f>
     522:	86 e0       	ldi	r24, 0x06	; 6
     524:	91 e0       	ldi	r25, 0x01	; 1
     526:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     52a:	83 e0       	ldi	r24, 0x03	; 3
     52c:	08 95       	ret
     52e:	4e 3c       	cpi	r20, 0xCE	; 206
     530:	34 f4       	brge	.+12     	; 0x53e <__stack+0x3f>
     532:	8c e0       	ldi	r24, 0x0C	; 12
     534:	91 e0       	ldi	r25, 0x01	; 1
     536:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     53a:	84 e0       	ldi	r24, 0x04	; 4
     53c:	08 95       	ret
     53e:	81 e1       	ldi	r24, 0x11	; 17
     540:	91 e0       	ldi	r25, 0x01	; 1
     542:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     546:	85 e0       	ldi	r24, 0x05	; 5
     548:	08 95       	ret
     54a:	28 17       	cp	r18, r24
     54c:	b0 f4       	brcc	.+44     	; 0x57a <__stack+0x7b>
     54e:	33 33       	cpi	r19, 0x33	; 51
     550:	34 f0       	brlt	.+12     	; 0x55e <__stack+0x5f>
     552:	89 e1       	ldi	r24, 0x19	; 25
     554:	91 e0       	ldi	r25, 0x01	; 1
     556:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     55a:	81 e0       	ldi	r24, 0x01	; 1
     55c:	08 95       	ret
     55e:	3e 3c       	cpi	r19, 0xCE	; 206
     560:	34 f4       	brge	.+12     	; 0x56e <__stack+0x6f>
     562:	8c e1       	ldi	r24, 0x1C	; 28
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     56a:	82 e0       	ldi	r24, 0x02	; 2
     56c:	08 95       	ret
     56e:	81 e1       	ldi	r24, 0x11	; 17
     570:	91 e0       	ldi	r25, 0x01	; 1
     572:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     576:	85 e0       	ldi	r24, 0x05	; 5
     578:	08 95       	ret
     57a:	81 e1       	ldi	r24, 0x11	; 17
     57c:	91 e0       	ldi	r25, 0x01	; 1
     57e:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     582:	85 e0       	ldi	r24, 0x05	; 5
     584:	08 95       	ret

00000586 <pos_calibrate>:
		return NEUTRAL;
		
	}
}

void pos_calibrate(JoyStick *Stick){
     586:	cf 93       	push	r28
     588:	df 93       	push	r29
     58a:	ec 01       	movw	r28, r24
	xmem_write(1, XMEM_ADC);
     58c:	60 e0       	ldi	r22, 0x00	; 0
     58e:	74 e1       	ldi	r23, 0x14	; 20
     590:	81 e0       	ldi	r24, 0x01	; 1
     592:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <xmem_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     596:	85 e0       	ldi	r24, 0x05	; 5
     598:	8a 95       	dec	r24
     59a:	f1 f7       	brne	.-4      	; 0x598 <pos_calibrate+0x12>
	_delay_us(15);
	Stick->x_neutralPoint = xmem_read(XMEM_ADC);
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	94 e1       	ldi	r25, 0x14	; 20
     5a0:	0e 94 7e 05 	call	0xafc	; 0xafc <xmem_read>
     5a4:	8c 83       	std	Y+4, r24	; 0x04
	Stick->y_neutralPoint = xmem_read(XMEM_ADC);
     5a6:	80 e0       	ldi	r24, 0x00	; 0
     5a8:	94 e1       	ldi	r25, 0x14	; 20
     5aa:	0e 94 7e 05 	call	0xafc	; 0xafc <xmem_read>
     5ae:	8d 83       	std	Y+5, r24	; 0x05
}
     5b0:	df 91       	pop	r29
     5b2:	cf 91       	pop	r28
     5b4:	08 95       	ret

000005b6 <joyStickClick>:

uint8_t joyStickClick(){
	if ((PIND & (1 << PD4)) == 0) {
     5b6:	84 99       	sbic	0x10, 4	; 16
     5b8:	02 c0       	rjmp	.+4      	; 0x5be <joyStickClick+0x8>
		//printf("THE BUTTON IS PRESSED");
		return 1;
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	08 95       	ret
	}
	return 0;
     5be:	80 e0       	ldi	r24, 0x00	; 0
     5c0:	08 95       	ret

000005c2 <interrupt_init>:
#include <avr/io.h>
#include <avr/interrupt.h>

void interrupt_init(){
	//disable interrupts
	cli();
     5c2:	f8 94       	cli
	
	DDRE &= ~(1<<PE0);
     5c4:	86 b1       	in	r24, 0x06	; 6
     5c6:	8e 7f       	andi	r24, 0xFE	; 254
     5c8:	86 b9       	out	0x06, r24	; 6
	
	//Enable change of INT2 vector
	GICR = (1<<INT2);
     5ca:	80 e2       	ldi	r24, 0x20	; 32
     5cc:	8b bf       	out	0x3b, r24	; 59
	
	//interrupt on falling edge
	EMCUCR = ~(1<<ISC2);
     5ce:	8e ef       	ldi	r24, 0xFE	; 254
     5d0:	86 bf       	out	0x36, r24	; 54
	
	//Enable global interrupts, mulig denne er feil
	sei();
     5d2:	78 94       	sei
     5d4:	08 95       	ret

000005d6 <CAN_init>:
}


void CAN_init(uint8_t mode){
     5d6:	cf 93       	push	r28
     5d8:	c8 2f       	mov	r28, r24
	//Init CAN in specified mode
	mcp2515_init();	
     5da:	0e 94 e5 03 	call	0x7ca	; 0x7ca <mcp2515_init>
	mcp2515_set_mode(mode);
     5de:	8c 2f       	mov	r24, r28
     5e0:	0e 94 22 04 	call	0x844	; 0x844 <mcp2515_set_mode>
	
	//Recieve all msg/clear buffers
	mcp2515_write(MCP_RXB0CTRL, MCP_RXM1 | MCP_RXM0);
     5e4:	60 e6       	ldi	r22, 0x60	; 96
     5e6:	80 e6       	ldi	r24, 0x60	; 96
     5e8:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <mcp2515_write>
	
	//Enable interrupt flag for successful reception in buffer 0 and 1
	mcp2515_bit_modify(MCP_CANINTE, MCP_RX1IF | MCP_RX0IF, 0xFF);
     5ec:	4f ef       	ldi	r20, 0xFF	; 255
     5ee:	63 e0       	ldi	r22, 0x03	; 3
     5f0:	8b e2       	ldi	r24, 0x2B	; 43
     5f2:	0e 94 08 04 	call	0x810	; 0x810 <mcp2515_bit_modify>
	
	interrupt_init();
     5f6:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <interrupt_init>
}
     5fa:	cf 91       	pop	r28
     5fc:	08 95       	ret

000005fe <CAN_transmit>:


void CAN_transmit(CAN_MESSAGE *msg){
     5fe:	0f 93       	push	r16
     600:	1f 93       	push	r17
     602:	cf 93       	push	r28
     604:	df 93       	push	r29
     606:	8c 01       	movw	r16, r24
	//printf("In transmit");
	mcp2515_write(MCP_TXB0SIDH, msg->msg_ID / 8);			//Sets 8 MSB in msgID
     608:	fc 01       	movw	r30, r24
     60a:	60 81       	ld	r22, Z
     60c:	71 81       	ldd	r23, Z+1	; 0x01
     60e:	76 95       	lsr	r23
     610:	67 95       	ror	r22
     612:	76 95       	lsr	r23
     614:	67 95       	ror	r22
     616:	76 95       	lsr	r23
     618:	67 95       	ror	r22
     61a:	81 e3       	ldi	r24, 0x31	; 49
     61c:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <mcp2515_write>
	mcp2515_write(MCP_TXB0SIDL, (msg->msg_ID % 8) << 5);	//Sets 3LSB in msgID
     620:	f8 01       	movw	r30, r16
     622:	60 81       	ld	r22, Z
     624:	62 95       	swap	r22
     626:	66 0f       	add	r22, r22
     628:	60 7e       	andi	r22, 0xE0	; 224
     62a:	82 e3       	ldi	r24, 0x32	; 50
     62c:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <mcp2515_write>
	mcp2515_write(MCP_TXB0DLC, msg->msg_length);		//Sets datalength code bits
     630:	f8 01       	movw	r30, r16
     632:	62 81       	ldd	r22, Z+2	; 0x02
     634:	85 e3       	ldi	r24, 0x35	; 53
     636:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <mcp2515_write>
	for(int m = 0; m < msg->msg_length; m++){
     63a:	c0 e0       	ldi	r28, 0x00	; 0
     63c:	d0 e0       	ldi	r29, 0x00	; 0
     63e:	09 c0       	rjmp	.+18     	; 0x652 <CAN_transmit+0x54>
		mcp2515_write(MCP_TXB0D0 + m, msg->data[m]);		//Puts data (one byte at a time) in send buffer
     640:	f8 01       	movw	r30, r16
     642:	ec 0f       	add	r30, r28
     644:	fd 1f       	adc	r31, r29
     646:	63 81       	ldd	r22, Z+3	; 0x03
     648:	8c 2f       	mov	r24, r28
     64a:	8a 5c       	subi	r24, 0xCA	; 202
     64c:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <mcp2515_write>
void CAN_transmit(CAN_MESSAGE *msg){
	//printf("In transmit");
	mcp2515_write(MCP_TXB0SIDH, msg->msg_ID / 8);			//Sets 8 MSB in msgID
	mcp2515_write(MCP_TXB0SIDL, (msg->msg_ID % 8) << 5);	//Sets 3LSB in msgID
	mcp2515_write(MCP_TXB0DLC, msg->msg_length);		//Sets datalength code bits
	for(int m = 0; m < msg->msg_length; m++){
     650:	21 96       	adiw	r28, 0x01	; 1
     652:	f8 01       	movw	r30, r16
     654:	82 81       	ldd	r24, Z+2	; 0x02
     656:	90 e0       	ldi	r25, 0x00	; 0
     658:	c8 17       	cp	r28, r24
     65a:	d9 07       	cpc	r29, r25
     65c:	8c f3       	brlt	.-30     	; 0x640 <CAN_transmit+0x42>
		mcp2515_write(MCP_TXB0D0 + m, msg->data[m]);		//Puts data (one byte at a time) in send buffer
	}
	mcp2515_request_to_send();							//Sends data on send buffer
     65e:	0e 94 00 04 	call	0x800	; 0x800 <mcp2515_request_to_send>
}
     662:	df 91       	pop	r29
     664:	cf 91       	pop	r28
     666:	1f 91       	pop	r17
     668:	0f 91       	pop	r16
     66a:	08 95       	ret

0000066c <CAN_recieve>:

uint8_t CAN_recieve(CAN_MESSAGE *msg){
     66c:	ff 92       	push	r15
     66e:	0f 93       	push	r16
     670:	1f 93       	push	r17
     672:	cf 93       	push	r28
     674:	df 93       	push	r29
     676:	8c 01       	movw	r16, r24
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
     678:	8c e2       	ldi	r24, 0x2C	; 44
     67a:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     67e:	98 2f       	mov	r25, r24
     680:	91 70       	andi	r25, 0x01	; 1
     682:	f9 2e       	mov	r15, r25
     684:	80 ff       	sbrs	r24, 0
     686:	30 c0       	rjmp	.+96     	; 0x6e8 <CAN_recieve+0x7c>
		//Read from the buffers and set the id combined with the low and high bits
		uint8_t id_highbit = mcp2515_read(MCP_RXB0SIDH);
     688:	81 e6       	ldi	r24, 0x61	; 97
     68a:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     68e:	c8 2f       	mov	r28, r24
		uint8_t id_lowbit = mcp2515_read(MCP_RXB0SIDL);
     690:	82 e6       	ldi	r24, 0x62	; 98
     692:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     696:	d8 2f       	mov	r29, r24
		
		msg->msg_length = mcp2515_read(MCP_RXB0DLC);
     698:	85 e6       	ldi	r24, 0x65	; 101
     69a:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     69e:	f8 01       	movw	r30, r16
     6a0:	82 83       	std	Z+2, r24	; 0x02
		msg->msg_ID = (id_lowbit>>5) + (id_highbit<<3);
     6a2:	d2 95       	swap	r29
     6a4:	d6 95       	lsr	r29
     6a6:	d7 70       	andi	r29, 0x07	; 7
     6a8:	8c 2f       	mov	r24, r28
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	88 0f       	add	r24, r24
     6ae:	99 1f       	adc	r25, r25
     6b0:	88 0f       	add	r24, r24
     6b2:	99 1f       	adc	r25, r25
     6b4:	88 0f       	add	r24, r24
     6b6:	99 1f       	adc	r25, r25
     6b8:	8d 0f       	add	r24, r29
     6ba:	91 1d       	adc	r25, r1
     6bc:	91 83       	std	Z+1, r25	; 0x01
     6be:	80 83       	st	Z, r24
		for(int m = 0; m < msg->msg_length; m++){
     6c0:	c0 e0       	ldi	r28, 0x00	; 0
     6c2:	d0 e0       	ldi	r29, 0x00	; 0
     6c4:	09 c0       	rjmp	.+18     	; 0x6d8 <CAN_recieve+0x6c>
			msg->data[m] = mcp2515_read(MCP_RXB0D0 + m);	
     6c6:	8c 2f       	mov	r24, r28
     6c8:	8a 59       	subi	r24, 0x9A	; 154
     6ca:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     6ce:	f8 01       	movw	r30, r16
     6d0:	ec 0f       	add	r30, r28
     6d2:	fd 1f       	adc	r31, r29
     6d4:	83 83       	std	Z+3, r24	; 0x03
		uint8_t id_highbit = mcp2515_read(MCP_RXB0SIDH);
		uint8_t id_lowbit = mcp2515_read(MCP_RXB0SIDL);
		
		msg->msg_length = mcp2515_read(MCP_RXB0DLC);
		msg->msg_ID = (id_lowbit>>5) + (id_highbit<<3);
		for(int m = 0; m < msg->msg_length; m++){
     6d6:	21 96       	adiw	r28, 0x01	; 1
     6d8:	f8 01       	movw	r30, r16
     6da:	82 81       	ldd	r24, Z+2	; 0x02
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	c8 17       	cp	r28, r24
     6e0:	d9 07       	cpc	r29, r25
     6e2:	8c f3       	brlt	.-30     	; 0x6c6 <CAN_recieve+0x5a>
		}
	}
	else{
		return 1;	
	}
	return 0;
     6e4:	f1 2c       	mov	r15, r1
     6e6:	36 c0       	rjmp	.+108    	; 0x754 <CAN_recieve+0xe8>
		msg->msg_ID = (id_lowbit>>5) + (id_highbit<<3);
		for(int m = 0; m < msg->msg_length; m++){
			msg->data[m] = mcp2515_read(MCP_RXB0D0 + m);	
		}
	}
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
     6e8:	8c e2       	ldi	r24, 0x2C	; 44
     6ea:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     6ee:	81 ff       	sbrs	r24, 1
     6f0:	2f c0       	rjmp	.+94     	; 0x750 <CAN_recieve+0xe4>
		//Read from the buffers and set the id combined with the low and high bits
		uint8_t id_highbit = mcp2515_read(MCP_RXB1SIDH);
     6f2:	81 e7       	ldi	r24, 0x71	; 113
     6f4:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     6f8:	c8 2f       	mov	r28, r24
		uint8_t id_lowbit = mcp2515_read(MCP_RXB1SIDL);
     6fa:	82 e7       	ldi	r24, 0x72	; 114
     6fc:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     700:	d8 2f       	mov	r29, r24
		
		msg->msg_length = mcp2515_read(MCP_RXB1DLC);
     702:	85 e7       	ldi	r24, 0x75	; 117
     704:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     708:	f8 01       	movw	r30, r16
     70a:	82 83       	std	Z+2, r24	; 0x02
		msg->msg_ID = (id_lowbit>>5) + (id_highbit<<3);
     70c:	d2 95       	swap	r29
     70e:	d6 95       	lsr	r29
     710:	d7 70       	andi	r29, 0x07	; 7
     712:	8c 2f       	mov	r24, r28
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	88 0f       	add	r24, r24
     718:	99 1f       	adc	r25, r25
     71a:	88 0f       	add	r24, r24
     71c:	99 1f       	adc	r25, r25
     71e:	88 0f       	add	r24, r24
     720:	99 1f       	adc	r25, r25
     722:	8d 0f       	add	r24, r29
     724:	91 1d       	adc	r25, r1
     726:	91 83       	std	Z+1, r25	; 0x01
     728:	80 83       	st	Z, r24
		for(int m = 0; m < msg->msg_length; m++){
     72a:	c0 e0       	ldi	r28, 0x00	; 0
     72c:	d0 e0       	ldi	r29, 0x00	; 0
     72e:	09 c0       	rjmp	.+18     	; 0x742 <CAN_recieve+0xd6>
			msg->data[m] = mcp2515_read(MCP_RXB1D0 + m);	
     730:	8c 2f       	mov	r24, r28
     732:	8a 58       	subi	r24, 0x8A	; 138
     734:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     738:	f8 01       	movw	r30, r16
     73a:	ec 0f       	add	r30, r28
     73c:	fd 1f       	adc	r31, r29
     73e:	83 83       	std	Z+3, r24	; 0x03
		uint8_t id_highbit = mcp2515_read(MCP_RXB1SIDH);
		uint8_t id_lowbit = mcp2515_read(MCP_RXB1SIDL);
		
		msg->msg_length = mcp2515_read(MCP_RXB1DLC);
		msg->msg_ID = (id_lowbit>>5) + (id_highbit<<3);
		for(int m = 0; m < msg->msg_length; m++){
     740:	21 96       	adiw	r28, 0x01	; 1
     742:	f8 01       	movw	r30, r16
     744:	82 81       	ldd	r24, Z+2	; 0x02
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	c8 17       	cp	r28, r24
     74a:	d9 07       	cpc	r29, r25
     74c:	8c f3       	brlt	.-30     	; 0x730 <CAN_recieve+0xc4>
     74e:	02 c0       	rjmp	.+4      	; 0x754 <CAN_recieve+0xe8>
			msg->data[m] = mcp2515_read(MCP_RXB1D0 + m);	
		}
	}
	else{
		return 1;	
     750:	ff 24       	eor	r15, r15
     752:	f3 94       	inc	r15
	}
	return 0;
}
     754:	8f 2d       	mov	r24, r15
     756:	df 91       	pop	r29
     758:	cf 91       	pop	r28
     75a:	1f 91       	pop	r17
     75c:	0f 91       	pop	r16
     75e:	ff 90       	pop	r15
     760:	08 95       	ret

00000762 <mcp2515_reset>:
     762:	0e 94 2a 05 	call	0xa54	; 0xa54 <SPI_slaveSelect>
     766:	80 ec       	ldi	r24, 0xC0	; 192
     768:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     76c:	0e 94 2e 05 	call	0xa5c	; 0xa5c <SPI_slaveDeselect>
     770:	8f ef       	ldi	r24, 0xFF	; 255
     772:	97 e1       	ldi	r25, 0x17	; 23
     774:	01 97       	sbiw	r24, 0x01	; 1
     776:	f1 f7       	brne	.-4      	; 0x774 <mcp2515_reset+0x12>
     778:	00 c0       	rjmp	.+0      	; 0x77a <mcp2515_reset+0x18>
     77a:	00 00       	nop
     77c:	08 95       	ret

0000077e <mcp2515_read>:
     77e:	cf 93       	push	r28
     780:	c8 2f       	mov	r28, r24
     782:	0e 94 2a 05 	call	0xa54	; 0xa54 <SPI_slaveSelect>
     786:	83 e0       	ldi	r24, 0x03	; 3
     788:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     78c:	8c 2f       	mov	r24, r28
     78e:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     792:	0e 94 25 05 	call	0xa4a	; 0xa4a <SPI_receive>
     796:	c8 2f       	mov	r28, r24
     798:	0e 94 2e 05 	call	0xa5c	; 0xa5c <SPI_slaveDeselect>
     79c:	8c 2f       	mov	r24, r28
     79e:	cf 91       	pop	r28
     7a0:	08 95       	ret

000007a2 <mcp2515_write>:
     7a2:	cf 93       	push	r28
     7a4:	df 93       	push	r29
     7a6:	d8 2f       	mov	r29, r24
     7a8:	c6 2f       	mov	r28, r22
     7aa:	0e 94 2a 05 	call	0xa54	; 0xa54 <SPI_slaveSelect>
     7ae:	82 e0       	ldi	r24, 0x02	; 2
     7b0:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     7b4:	8d 2f       	mov	r24, r29
     7b6:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     7ba:	8c 2f       	mov	r24, r28
     7bc:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     7c0:	0e 94 2e 05 	call	0xa5c	; 0xa5c <SPI_slaveDeselect>
     7c4:	df 91       	pop	r29
     7c6:	cf 91       	pop	r28
     7c8:	08 95       	ret

000007ca <mcp2515_init>:
     7ca:	0e 94 15 05 	call	0xa2a	; 0xa2a <SPI_init>
     7ce:	0e 94 b1 03 	call	0x762	; 0x762 <mcp2515_reset>
     7d2:	8e e0       	ldi	r24, 0x0E	; 14
     7d4:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     7d8:	80 7e       	andi	r24, 0xE0	; 224
     7da:	80 38       	cpi	r24, 0x80	; 128
     7dc:	21 f0       	breq	.+8      	; 0x7e6 <mcp2515_init+0x1c>
     7de:	8b ef       	ldi	r24, 0xFB	; 251
     7e0:	91 e0       	ldi	r25, 0x01	; 1
     7e2:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     7e6:	61 ec       	ldi	r22, 0xC1	; 193
     7e8:	8a e2       	ldi	r24, 0x2A	; 42
     7ea:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <mcp2515_write>
     7ee:	61 ef       	ldi	r22, 0xF1	; 241
     7f0:	89 e2       	ldi	r24, 0x29	; 41
     7f2:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <mcp2515_write>
     7f6:	65 e0       	ldi	r22, 0x05	; 5
     7f8:	88 e2       	ldi	r24, 0x28	; 40
     7fa:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <mcp2515_write>
     7fe:	08 95       	ret

00000800 <mcp2515_request_to_send>:
     800:	0e 94 2a 05 	call	0xa54	; 0xa54 <SPI_slaveSelect>
     804:	81 e8       	ldi	r24, 0x81	; 129
     806:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     80a:	0e 94 2e 05 	call	0xa5c	; 0xa5c <SPI_slaveDeselect>
     80e:	08 95       	ret

00000810 <mcp2515_bit_modify>:
     810:	1f 93       	push	r17
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	18 2f       	mov	r17, r24
     818:	d6 2f       	mov	r29, r22
     81a:	c4 2f       	mov	r28, r20
     81c:	0e 94 2a 05 	call	0xa54	; 0xa54 <SPI_slaveSelect>
     820:	85 e0       	ldi	r24, 0x05	; 5
     822:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     826:	81 2f       	mov	r24, r17
     828:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     82c:	8d 2f       	mov	r24, r29
     82e:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     832:	8c 2f       	mov	r24, r28
     834:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     838:	0e 94 2e 05 	call	0xa5c	; 0xa5c <SPI_slaveDeselect>
     83c:	df 91       	pop	r29
     83e:	cf 91       	pop	r28
     840:	1f 91       	pop	r17
     842:	08 95       	ret

00000844 <mcp2515_set_mode>:
     844:	cf 93       	push	r28
     846:	c8 2f       	mov	r28, r24
     848:	48 2f       	mov	r20, r24
     84a:	60 ee       	ldi	r22, 0xE0	; 224
     84c:	8f e0       	ldi	r24, 0x0F	; 15
     84e:	0e 94 08 04 	call	0x810	; 0x810 <mcp2515_bit_modify>
     852:	8e e0       	ldi	r24, 0x0E	; 14
     854:	0e 94 bf 03 	call	0x77e	; 0x77e <mcp2515_read>
     858:	80 7e       	andi	r24, 0xE0	; 224
     85a:	c8 17       	cp	r28, r24
     85c:	51 f0       	breq	.+20     	; 0x872 <mcp2515_set_mode+0x2e>
     85e:	8f e2       	ldi	r24, 0x2F	; 47
     860:	92 e0       	ldi	r25, 0x02	; 2
     862:	9f 93       	push	r25
     864:	8f 93       	push	r24
     866:	0e 94 6d 06 	call	0xcda	; 0xcda <printf>
     86a:	0f 90       	pop	r0
     86c:	0f 90       	pop	r0
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	01 c0       	rjmp	.+2      	; 0x874 <mcp2515_set_mode+0x30>
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	cf 91       	pop	r28
     876:	08 95       	ret

00000878 <OLED_write_cmd>:
     878:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xc9d>
     87c:	08 95       	ret

0000087e <OLED_write_data>:
     87e:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xe9d>
     882:	08 95       	ret

00000884 <OLED_goto_page>:
     884:	88 30       	cpi	r24, 0x08	; 8
     886:	18 f4       	brcc	.+6      	; 0x88e <OLED_goto_page+0xa>
     888:	80 55       	subi	r24, 0x50	; 80
     88a:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     88e:	08 95       	ret

00000890 <OLED_goto_col>:
     890:	cf 93       	push	r28
     892:	88 23       	and	r24, r24
     894:	54 f0       	brlt	.+20     	; 0x8aa <OLED_goto_col+0x1a>
     896:	c8 2f       	mov	r28, r24
     898:	8f 70       	andi	r24, 0x0F	; 15
     89a:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     89e:	8c 2f       	mov	r24, r28
     8a0:	82 95       	swap	r24
     8a2:	8f 70       	andi	r24, 0x0F	; 15
     8a4:	80 5f       	subi	r24, 0xF0	; 240
     8a6:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     8aa:	cf 91       	pop	r28
     8ac:	08 95       	ret

000008ae <OLED_pos>:
     8ae:	cf 93       	push	r28
     8b0:	c6 2f       	mov	r28, r22
     8b2:	0e 94 42 04 	call	0x884	; 0x884 <OLED_goto_page>
     8b6:	8c 2f       	mov	r24, r28
     8b8:	0e 94 48 04 	call	0x890	; 0x890 <OLED_goto_col>
     8bc:	cf 91       	pop	r28
     8be:	08 95       	ret

000008c0 <OLED_print>:
     8c0:	0f 93       	push	r16
     8c2:	1f 93       	push	r17
     8c4:	cf 93       	push	r28
     8c6:	df 93       	push	r29
     8c8:	fc 01       	movw	r30, r24
     8ca:	90 81       	ld	r25, Z
     8cc:	90 52       	subi	r25, 0x20	; 32
     8ce:	9f 35       	cpi	r25, 0x5F	; 95
     8d0:	a0 f0       	brcs	.+40     	; 0x8fa <OLED_print+0x3a>
     8d2:	19 c0       	rjmp	.+50     	; 0x906 <OLED_print+0x46>
     8d4:	d8 01       	movw	r26, r16
     8d6:	ec 91       	ld	r30, X
     8d8:	f0 e0       	ldi	r31, 0x00	; 0
     8da:	b0 97       	sbiw	r30, 0x20	; 32
     8dc:	ee 0f       	add	r30, r30
     8de:	ff 1f       	adc	r31, r31
     8e0:	ee 0f       	add	r30, r30
     8e2:	ff 1f       	adc	r31, r31
     8e4:	ee 0f       	add	r30, r30
     8e6:	ff 1f       	adc	r31, r31
     8e8:	ec 0f       	add	r30, r28
     8ea:	fd 1f       	adc	r31, r29
     8ec:	e0 59       	subi	r30, 0x90	; 144
     8ee:	ff 4f       	sbci	r31, 0xFF	; 255
     8f0:	84 91       	lpm	r24, Z
     8f2:	0e 94 3f 04 	call	0x87e	; 0x87e <OLED_write_data>
     8f6:	21 96       	adiw	r28, 0x01	; 1
     8f8:	03 c0       	rjmp	.+6      	; 0x900 <OLED_print+0x40>
     8fa:	8f 01       	movw	r16, r30
     8fc:	c0 e0       	ldi	r28, 0x00	; 0
     8fe:	d0 e0       	ldi	r29, 0x00	; 0
     900:	c8 30       	cpi	r28, 0x08	; 8
     902:	d1 05       	cpc	r29, r1
     904:	3c f3       	brlt	.-50     	; 0x8d4 <OLED_print+0x14>
     906:	df 91       	pop	r29
     908:	cf 91       	pop	r28
     90a:	1f 91       	pop	r17
     90c:	0f 91       	pop	r16
     90e:	08 95       	ret

00000910 <OLED_print_string>:
     910:	0f 93       	push	r16
     912:	1f 93       	push	r17
     914:	cf 93       	push	r28
     916:	df 93       	push	r29
     918:	8c 01       	movw	r16, r24
     91a:	c0 e0       	ldi	r28, 0x00	; 0
     91c:	d0 e0       	ldi	r29, 0x00	; 0
     91e:	06 c0       	rjmp	.+12     	; 0x92c <OLED_print_string+0x1c>
     920:	c8 01       	movw	r24, r16
     922:	8c 0f       	add	r24, r28
     924:	9d 1f       	adc	r25, r29
     926:	0e 94 60 04 	call	0x8c0	; 0x8c0 <OLED_print>
     92a:	21 96       	adiw	r28, 0x01	; 1
     92c:	f8 01       	movw	r30, r16
     92e:	01 90       	ld	r0, Z+
     930:	00 20       	and	r0, r0
     932:	e9 f7       	brne	.-6      	; 0x92e <OLED_print_string+0x1e>
     934:	31 97       	sbiw	r30, 0x01	; 1
     936:	e0 1b       	sub	r30, r16
     938:	f1 0b       	sbc	r31, r17
     93a:	ce 17       	cp	r28, r30
     93c:	df 07       	cpc	r29, r31
     93e:	80 f3       	brcs	.-32     	; 0x920 <OLED_print_string+0x10>
     940:	df 91       	pop	r29
     942:	cf 91       	pop	r28
     944:	1f 91       	pop	r17
     946:	0f 91       	pop	r16
     948:	08 95       	ret

0000094a <OLED_clear_page>:
     94a:	cf 93       	push	r28
     94c:	0e 94 42 04 	call	0x884	; 0x884 <OLED_goto_page>
     950:	c0 e0       	ldi	r28, 0x00	; 0
     952:	04 c0       	rjmp	.+8      	; 0x95c <OLED_clear_page+0x12>
     954:	80 e0       	ldi	r24, 0x00	; 0
     956:	0e 94 3f 04 	call	0x87e	; 0x87e <OLED_write_data>
     95a:	cf 5f       	subi	r28, 0xFF	; 255
     95c:	cc 23       	and	r28, r28
     95e:	d4 f7       	brge	.-12     	; 0x954 <OLED_clear_page+0xa>
     960:	cf 91       	pop	r28
     962:	08 95       	ret

00000964 <OLED_reset>:
     964:	cf 93       	push	r28
     966:	c0 e0       	ldi	r28, 0x00	; 0
     968:	04 c0       	rjmp	.+8      	; 0x972 <OLED_reset+0xe>
     96a:	8c 2f       	mov	r24, r28
     96c:	0e 94 a5 04 	call	0x94a	; 0x94a <OLED_clear_page>
     970:	cf 5f       	subi	r28, 0xFF	; 255
     972:	c8 30       	cpi	r28, 0x08	; 8
     974:	d0 f3       	brcs	.-12     	; 0x96a <OLED_reset+0x6>
     976:	cf 91       	pop	r28
     978:	08 95       	ret

0000097a <OLED_init>:
     97a:	8e ea       	ldi	r24, 0xAE	; 174
     97c:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     980:	81 ea       	ldi	r24, 0xA1	; 161
     982:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     986:	8a ed       	ldi	r24, 0xDA	; 218
     988:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     98c:	82 e1       	ldi	r24, 0x12	; 18
     98e:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     992:	88 ec       	ldi	r24, 0xC8	; 200
     994:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     998:	88 ea       	ldi	r24, 0xA8	; 168
     99a:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     99e:	8f e3       	ldi	r24, 0x3F	; 63
     9a0:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9a4:	85 ed       	ldi	r24, 0xD5	; 213
     9a6:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9aa:	80 e8       	ldi	r24, 0x80	; 128
     9ac:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9b0:	81 e8       	ldi	r24, 0x81	; 129
     9b2:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9b6:	80 e5       	ldi	r24, 0x50	; 80
     9b8:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9bc:	89 ed       	ldi	r24, 0xD9	; 217
     9be:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9c2:	81 e2       	ldi	r24, 0x21	; 33
     9c4:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9c8:	80 e2       	ldi	r24, 0x20	; 32
     9ca:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9ce:	82 e0       	ldi	r24, 0x02	; 2
     9d0:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9d4:	8b ed       	ldi	r24, 0xDB	; 219
     9d6:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9da:	80 e3       	ldi	r24, 0x30	; 48
     9dc:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9e0:	8d ea       	ldi	r24, 0xAD	; 173
     9e2:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9e6:	80 e0       	ldi	r24, 0x00	; 0
     9e8:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9ec:	84 ea       	ldi	r24, 0xA4	; 164
     9ee:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9f2:	86 ea       	ldi	r24, 0xA6	; 166
     9f4:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9f8:	8f ea       	ldi	r24, 0xAF	; 175
     9fa:	0e 94 3c 04 	call	0x878	; 0x878 <OLED_write_cmd>
     9fe:	0e 94 b2 04 	call	0x964	; 0x964 <OLED_reset>
     a02:	63 e2       	ldi	r22, 0x23	; 35
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	0e 94 57 04 	call	0x8ae	; 0x8ae <OLED_pos>
     a0a:	85 e5       	ldi	r24, 0x55	; 85
     a0c:	92 e0       	ldi	r25, 0x02	; 2
     a0e:	0e 94 88 04 	call	0x910	; 0x910 <OLED_print_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a12:	2f ef       	ldi	r18, 0xFF	; 255
     a14:	8f ef       	ldi	r24, 0xFF	; 255
     a16:	9d e1       	ldi	r25, 0x1D	; 29
     a18:	21 50       	subi	r18, 0x01	; 1
     a1a:	80 40       	sbci	r24, 0x00	; 0
     a1c:	90 40       	sbci	r25, 0x00	; 0
     a1e:	e1 f7       	brne	.-8      	; 0xa18 <OLED_init+0x9e>
     a20:	00 c0       	rjmp	.+0      	; 0xa22 <OLED_init+0xa8>
     a22:	00 00       	nop
     a24:	0e 94 b2 04 	call	0x964	; 0x964 <OLED_reset>
     a28:	08 95       	ret

00000a2a <SPI_init>:
     a2a:	87 b3       	in	r24, 0x17	; 23
     a2c:	80 6b       	ori	r24, 0xB0	; 176
     a2e:	87 bb       	out	0x17, r24	; 23
     a30:	87 b3       	in	r24, 0x17	; 23
     a32:	81 7b       	andi	r24, 0xB1	; 177
     a34:	87 bb       	out	0x17, r24	; 23
     a36:	81 e5       	ldi	r24, 0x51	; 81
     a38:	8d b9       	out	0x0d, r24	; 13
     a3a:	88 b3       	in	r24, 0x18	; 24
     a3c:	80 61       	ori	r24, 0x10	; 16
     a3e:	88 bb       	out	0x18, r24	; 24
     a40:	08 95       	ret

00000a42 <SPI_write>:
     a42:	8f b9       	out	0x0f, r24	; 15
     a44:	77 9b       	sbis	0x0e, 7	; 14
     a46:	fe cf       	rjmp	.-4      	; 0xa44 <SPI_write+0x2>
     a48:	08 95       	ret

00000a4a <SPI_receive>:
     a4a:	80 e0       	ldi	r24, 0x00	; 0
     a4c:	0e 94 21 05 	call	0xa42	; 0xa42 <SPI_write>
     a50:	8f b1       	in	r24, 0x0f	; 15
     a52:	08 95       	ret

00000a54 <SPI_slaveSelect>:
     a54:	88 b3       	in	r24, 0x18	; 24
     a56:	8f 7e       	andi	r24, 0xEF	; 239
     a58:	88 bb       	out	0x18, r24	; 24
     a5a:	08 95       	ret

00000a5c <SPI_slaveDeselect>:
     a5c:	88 b3       	in	r24, 0x18	; 24
     a5e:	80 61       	ori	r24, 0x10	; 16
     a60:	88 bb       	out	0x18, r24	; 24
     a62:	08 95       	ret

00000a64 <send_user_input>:
 *  Author: torstepu
 */ 

#include "user_input.h"

void send_user_input(JoyStick *stick, Slider *slide){
     a64:	0f 93       	push	r16
     a66:	1f 93       	push	r17
     a68:	cf 93       	push	r28
     a6a:	df 93       	push	r29
     a6c:	cd b7       	in	r28, 0x3d	; 61
     a6e:	de b7       	in	r29, 0x3e	; 62
     a70:	2b 97       	sbiw	r28, 0x0b	; 11
     a72:	0f b6       	in	r0, 0x3f	; 63
     a74:	f8 94       	cli
     a76:	de bf       	out	0x3e, r29	; 62
     a78:	0f be       	out	0x3f, r0	; 63
     a7a:	cd bf       	out	0x3d, r28	; 61
     a7c:	8b 01       	movw	r16, r22
//data[5] = right button (not implementet)
//data[6] = left slider value (can be changed to percent)
//data[7] = right slider value (can be changed to percent)

CAN_MESSAGE message;
message.msg_ID = USER_INPUT;
     a7e:	21 e0       	ldi	r18, 0x01	; 1
     a80:	30 e0       	ldi	r19, 0x00	; 0
     a82:	3a 83       	std	Y+2, r19	; 0x02
     a84:	29 83       	std	Y+1, r18	; 0x01
message.msg_length = 8; //byte, men tar denne byte eller bit?
     a86:	28 e0       	ldi	r18, 0x08	; 8
     a88:	2b 83       	std	Y+3, r18	; 0x03
message.data[0] = (uint8_t)stick->x_percent+100;
     a8a:	fc 01       	movw	r30, r24
     a8c:	22 81       	ldd	r18, Z+2	; 0x02
     a8e:	2c 59       	subi	r18, 0x9C	; 156
     a90:	2c 83       	std	Y+4, r18	; 0x04
message.data[1] = (uint8_t)stick->y_percent+100;
     a92:	23 81       	ldd	r18, Z+3	; 0x03
     a94:	2c 59       	subi	r18, 0x9C	; 156
     a96:	2d 83       	std	Y+5, r18	; 0x05
message.data[2] = (uint8_t)joyStickDir(stick);
     a98:	0e 94 77 02 	call	0x4ee	; 0x4ee <joyStickDir>
     a9c:	8e 83       	std	Y+6, r24	; 0x06
message.data[3] = joyStickClick();
     a9e:	0e 94 db 02 	call	0x5b6	; 0x5b6 <joyStickClick>
     aa2:	8f 83       	std	Y+7, r24	; 0x07
message.data[4] = 0; //To be implemented
     aa4:	18 86       	std	Y+8, r1	; 0x08
message.data[5] = 0; //To be implemented
     aa6:	19 86       	std	Y+9, r1	; 0x09
message.data[6] = slide->l_slider;
     aa8:	f8 01       	movw	r30, r16
     aaa:	80 81       	ld	r24, Z
     aac:	8a 87       	std	Y+10, r24	; 0x0a
message.data[7] = slide->r_slider;
     aae:	81 81       	ldd	r24, Z+1	; 0x01
     ab0:	8b 87       	std	Y+11, r24	; 0x0b

//send pos over CAN to correct cannode
CAN_transmit(&message);
     ab2:	ce 01       	movw	r24, r28
     ab4:	01 96       	adiw	r24, 0x01	; 1
     ab6:	0e 94 ff 02 	call	0x5fe	; 0x5fe <CAN_transmit>
}
     aba:	2b 96       	adiw	r28, 0x0b	; 11
     abc:	0f b6       	in	r0, 0x3f	; 63
     abe:	f8 94       	cli
     ac0:	de bf       	out	0x3e, r29	; 62
     ac2:	0f be       	out	0x3f, r0	; 63
     ac4:	cd bf       	out	0x3d, r28	; 61
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	1f 91       	pop	r17
     acc:	0f 91       	pop	r16
     ace:	08 95       	ret

00000ad0 <get_user_input>:

void get_user_input(JoyStick *stick, Slider *slide){
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
     ad4:	ec 01       	movw	r28, r24
	adc_read(stick, slide);
     ad6:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <adc_read>
	joyStickPos(stick);
     ada:	ce 01       	movw	r24, r28
     adc:	0e 94 12 02 	call	0x424	; 0x424 <joyStickPos>
	//joyStickDir(&stick)
     ae0:	df 91       	pop	r29
     ae2:	cf 91       	pop	r28
     ae4:	08 95       	ret

00000ae6 <xmem_init>:
     ae6:	85 b7       	in	r24, 0x35	; 53
     ae8:	80 68       	ori	r24, 0x80	; 128
     aea:	85 bf       	out	0x35, r24	; 53
     aec:	80 b7       	in	r24, 0x30	; 48
     aee:	80 62       	ori	r24, 0x20	; 32
     af0:	80 bf       	out	0x30, r24	; 48
     af2:	08 95       	ret

00000af4 <xmem_write>:
     af4:	fb 01       	movw	r30, r22
     af6:	f0 5f       	subi	r31, 0xF0	; 240
     af8:	80 83       	st	Z, r24
     afa:	08 95       	ret

00000afc <xmem_read>:
     afc:	90 5f       	subi	r25, 0xF0	; 240
     afe:	fc 01       	movw	r30, r24
     b00:	80 81       	ld	r24, Z
     b02:	08 95       	ret

00000b04 <hardware_init>:
CAN_MESSAGE receivedmsg;
JoyStick stick;
Slider slide;

void hardware_init(){
	xmem_init();
     b04:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_init>
	
	USART_Init(MYUBRR);
     b08:	8f e1       	ldi	r24, 0x1F	; 31
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	0e 94 e6 05 	call	0xbcc	; 0xbcc <USART_Init>

	uart_setup_stdio();
     b10:	0e 94 ed 05 	call	0xbda	; 0xbda <uart_setup_stdio>

	adc_init();
     b14:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_init>
	
	OLED_init();
     b18:	0e 94 bd 04 	call	0x97a	; 0x97a <OLED_init>
	
	CAN_init(MODE_NORMAL);
     b1c:	80 e0       	ldi	r24, 0x00	; 0
     b1e:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <CAN_init>
	
	pos_calibrate(&stick);
     b22:	84 e4       	ldi	r24, 0x44	; 68
     b24:	93 e0       	ldi	r25, 0x03	; 3
     b26:	0e 94 c3 02 	call	0x586	; 0x586 <pos_calibrate>
	
	printf("-------------------PROGRAM STARTV3-------------------\n");
     b2a:	8e ef       	ldi	r24, 0xFE	; 254
     b2c:	92 e0       	ldi	r25, 0x02	; 2
     b2e:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
     b32:	08 95       	ret

00000b34 <__vector_3>:
}


ISR(INT2_vect){
     b34:	1f 92       	push	r1
     b36:	0f 92       	push	r0
     b38:	0f b6       	in	r0, 0x3f	; 63
     b3a:	0f 92       	push	r0
     b3c:	11 24       	eor	r1, r1
     b3e:	2f 93       	push	r18
     b40:	3f 93       	push	r19
     b42:	4f 93       	push	r20
     b44:	5f 93       	push	r21
     b46:	6f 93       	push	r22
     b48:	7f 93       	push	r23
     b4a:	8f 93       	push	r24
     b4c:	9f 93       	push	r25
     b4e:	af 93       	push	r26
     b50:	bf 93       	push	r27
     b52:	ef 93       	push	r30
     b54:	ff 93       	push	r31
	CAN_recieve(&receivedmsg);
     b56:	8e e4       	ldi	r24, 0x4E	; 78
     b58:	93 e0       	ldi	r25, 0x03	; 3
     b5a:	0e 94 36 03 	call	0x66c	; 0x66c <CAN_recieve>
	mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF | MCP_RX1IF, 0x00);	//Clears interupt flag
     b5e:	40 e0       	ldi	r20, 0x00	; 0
     b60:	63 e0       	ldi	r22, 0x03	; 3
     b62:	8c e2       	ldi	r24, 0x2C	; 44
     b64:	0e 94 08 04 	call	0x810	; 0x810 <mcp2515_bit_modify>
}
     b68:	ff 91       	pop	r31
     b6a:	ef 91       	pop	r30
     b6c:	bf 91       	pop	r27
     b6e:	af 91       	pop	r26
     b70:	9f 91       	pop	r25
     b72:	8f 91       	pop	r24
     b74:	7f 91       	pop	r23
     b76:	6f 91       	pop	r22
     b78:	5f 91       	pop	r21
     b7a:	4f 91       	pop	r20
     b7c:	3f 91       	pop	r19
     b7e:	2f 91       	pop	r18
     b80:	0f 90       	pop	r0
     b82:	0f be       	out	0x3f, r0	; 63
     b84:	0f 90       	pop	r0
     b86:	1f 90       	pop	r1
     b88:	18 95       	reti

00000b8a <main>:


int main(void){	
	hardware_init();
     b8a:	0e 94 82 05 	call	0xb04	; 0xb04 <hardware_init>

	while(1){
		//send_user_input(&stick, &slide);
		printf("Sending message\n");
     b8e:	84 e3       	ldi	r24, 0x34	; 52
     b90:	93 e0       	ldi	r25, 0x03	; 3
     b92:	0e 94 83 06 	call	0xd06	; 0xd06 <puts>
		get_user_input(&stick, &slide);
     b96:	6a e4       	ldi	r22, 0x4A	; 74
     b98:	73 e0       	ldi	r23, 0x03	; 3
     b9a:	84 e4       	ldi	r24, 0x44	; 68
     b9c:	93 e0       	ldi	r25, 0x03	; 3
     b9e:	0e 94 68 05 	call	0xad0	; 0xad0 <get_user_input>
		send_user_input(&stick, &slide);
     ba2:	6a e4       	ldi	r22, 0x4A	; 74
     ba4:	73 e0       	ldi	r23, 0x03	; 3
     ba6:	84 e4       	ldi	r24, 0x44	; 68
     ba8:	93 e0       	ldi	r25, 0x03	; 3
     baa:	0e 94 32 05 	call	0xa64	; 0xa64 <send_user_input>
     bae:	ef cf       	rjmp	.-34     	; 0xb8e <main+0x4>

00000bb0 <uart_putchar>:
     bb0:	cf 93       	push	r28
     bb2:	c8 2f       	mov	r28, r24
     bb4:	8a 30       	cpi	r24, 0x0A	; 10
     bb6:	19 f4       	brne	.+6      	; 0xbbe <uart_putchar+0xe>
     bb8:	8d e0       	ldi	r24, 0x0D	; 13
     bba:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <uart_putchar>
     bbe:	5d 9b       	sbis	0x0b, 5	; 11
     bc0:	fe cf       	rjmp	.-4      	; 0xbbe <uart_putchar+0xe>
     bc2:	cc b9       	out	0x0c, r28	; 12
     bc4:	80 e0       	ldi	r24, 0x00	; 0
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	cf 91       	pop	r28
     bca:	08 95       	ret

00000bcc <USART_Init>:
     bcc:	90 bd       	out	0x20, r25	; 32
     bce:	89 b9       	out	0x09, r24	; 9
     bd0:	88 e1       	ldi	r24, 0x18	; 24
     bd2:	8a b9       	out	0x0a, r24	; 10
     bd4:	8e e8       	ldi	r24, 0x8E	; 142
     bd6:	80 bd       	out	0x20, r24	; 32
     bd8:	08 95       	ret

00000bda <uart_setup_stdio>:
     bda:	60 e0       	ldi	r22, 0x00	; 0
     bdc:	70 e0       	ldi	r23, 0x00	; 0
     bde:	88 ed       	ldi	r24, 0xD8	; 216
     be0:	95 e0       	ldi	r25, 0x05	; 5
     be2:	0e 94 22 06 	call	0xc44	; 0xc44 <fdevopen>
     be6:	00 97       	sbiw	r24, 0x00	; 0
     be8:	21 f0       	breq	.+8      	; 0xbf2 <uart_setup_stdio+0x18>
     bea:	90 93 5c 03 	sts	0x035C, r25	; 0x80035c <__iob+0x3>
     bee:	80 93 5b 03 	sts	0x035B, r24	; 0x80035b <__iob+0x2>
     bf2:	08 95       	ret

00000bf4 <__divmodhi4>:
     bf4:	97 fb       	bst	r25, 7
     bf6:	07 2e       	mov	r0, r23
     bf8:	16 f4       	brtc	.+4      	; 0xbfe <__divmodhi4+0xa>
     bfa:	00 94       	com	r0
     bfc:	07 d0       	rcall	.+14     	; 0xc0c <__divmodhi4_neg1>
     bfe:	77 fd       	sbrc	r23, 7
     c00:	09 d0       	rcall	.+18     	; 0xc14 <__divmodhi4_neg2>
     c02:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__udivmodhi4>
     c06:	07 fc       	sbrc	r0, 7
     c08:	05 d0       	rcall	.+10     	; 0xc14 <__divmodhi4_neg2>
     c0a:	3e f4       	brtc	.+14     	; 0xc1a <__divmodhi4_exit>

00000c0c <__divmodhi4_neg1>:
     c0c:	90 95       	com	r25
     c0e:	81 95       	neg	r24
     c10:	9f 4f       	sbci	r25, 0xFF	; 255
     c12:	08 95       	ret

00000c14 <__divmodhi4_neg2>:
     c14:	70 95       	com	r23
     c16:	61 95       	neg	r22
     c18:	7f 4f       	sbci	r23, 0xFF	; 255

00000c1a <__divmodhi4_exit>:
     c1a:	08 95       	ret

00000c1c <__udivmodhi4>:
     c1c:	aa 1b       	sub	r26, r26
     c1e:	bb 1b       	sub	r27, r27
     c20:	51 e1       	ldi	r21, 0x11	; 17
     c22:	07 c0       	rjmp	.+14     	; 0xc32 <__udivmodhi4_ep>

00000c24 <__udivmodhi4_loop>:
     c24:	aa 1f       	adc	r26, r26
     c26:	bb 1f       	adc	r27, r27
     c28:	a6 17       	cp	r26, r22
     c2a:	b7 07       	cpc	r27, r23
     c2c:	10 f0       	brcs	.+4      	; 0xc32 <__udivmodhi4_ep>
     c2e:	a6 1b       	sub	r26, r22
     c30:	b7 0b       	sbc	r27, r23

00000c32 <__udivmodhi4_ep>:
     c32:	88 1f       	adc	r24, r24
     c34:	99 1f       	adc	r25, r25
     c36:	5a 95       	dec	r21
     c38:	a9 f7       	brne	.-22     	; 0xc24 <__udivmodhi4_loop>
     c3a:	80 95       	com	r24
     c3c:	90 95       	com	r25
     c3e:	bc 01       	movw	r22, r24
     c40:	cd 01       	movw	r24, r26
     c42:	08 95       	ret

00000c44 <fdevopen>:
     c44:	0f 93       	push	r16
     c46:	1f 93       	push	r17
     c48:	cf 93       	push	r28
     c4a:	df 93       	push	r29
     c4c:	00 97       	sbiw	r24, 0x00	; 0
     c4e:	31 f4       	brne	.+12     	; 0xc5c <fdevopen+0x18>
     c50:	61 15       	cp	r22, r1
     c52:	71 05       	cpc	r23, r1
     c54:	19 f4       	brne	.+6      	; 0xc5c <fdevopen+0x18>
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	3a c0       	rjmp	.+116    	; 0xcd0 <fdevopen+0x8c>
     c5c:	8b 01       	movw	r16, r22
     c5e:	ec 01       	movw	r28, r24
     c60:	6e e0       	ldi	r22, 0x0E	; 14
     c62:	70 e0       	ldi	r23, 0x00	; 0
     c64:	81 e0       	ldi	r24, 0x01	; 1
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	0e 94 94 08 	call	0x1128	; 0x1128 <calloc>
     c6c:	fc 01       	movw	r30, r24
     c6e:	89 2b       	or	r24, r25
     c70:	91 f3       	breq	.-28     	; 0xc56 <fdevopen+0x12>
     c72:	80 e8       	ldi	r24, 0x80	; 128
     c74:	83 83       	std	Z+3, r24	; 0x03
     c76:	01 15       	cp	r16, r1
     c78:	11 05       	cpc	r17, r1
     c7a:	71 f0       	breq	.+28     	; 0xc98 <fdevopen+0x54>
     c7c:	13 87       	std	Z+11, r17	; 0x0b
     c7e:	02 87       	std	Z+10, r16	; 0x0a
     c80:	81 e8       	ldi	r24, 0x81	; 129
     c82:	83 83       	std	Z+3, r24	; 0x03
     c84:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <__iob>
     c88:	90 91 5a 03 	lds	r25, 0x035A	; 0x80035a <__iob+0x1>
     c8c:	89 2b       	or	r24, r25
     c8e:	21 f4       	brne	.+8      	; 0xc98 <fdevopen+0x54>
     c90:	f0 93 5a 03 	sts	0x035A, r31	; 0x80035a <__iob+0x1>
     c94:	e0 93 59 03 	sts	0x0359, r30	; 0x800359 <__iob>
     c98:	20 97       	sbiw	r28, 0x00	; 0
     c9a:	c9 f0       	breq	.+50     	; 0xcce <fdevopen+0x8a>
     c9c:	d1 87       	std	Z+9, r29	; 0x09
     c9e:	c0 87       	std	Z+8, r28	; 0x08
     ca0:	83 81       	ldd	r24, Z+3	; 0x03
     ca2:	82 60       	ori	r24, 0x02	; 2
     ca4:	83 83       	std	Z+3, r24	; 0x03
     ca6:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <__iob+0x2>
     caa:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <__iob+0x3>
     cae:	89 2b       	or	r24, r25
     cb0:	71 f4       	brne	.+28     	; 0xcce <fdevopen+0x8a>
     cb2:	f0 93 5c 03 	sts	0x035C, r31	; 0x80035c <__iob+0x3>
     cb6:	e0 93 5b 03 	sts	0x035B, r30	; 0x80035b <__iob+0x2>
     cba:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <__iob+0x4>
     cbe:	90 91 5e 03 	lds	r25, 0x035E	; 0x80035e <__iob+0x5>
     cc2:	89 2b       	or	r24, r25
     cc4:	21 f4       	brne	.+8      	; 0xcce <fdevopen+0x8a>
     cc6:	f0 93 5e 03 	sts	0x035E, r31	; 0x80035e <__iob+0x5>
     cca:	e0 93 5d 03 	sts	0x035D, r30	; 0x80035d <__iob+0x4>
     cce:	cf 01       	movw	r24, r30
     cd0:	df 91       	pop	r29
     cd2:	cf 91       	pop	r28
     cd4:	1f 91       	pop	r17
     cd6:	0f 91       	pop	r16
     cd8:	08 95       	ret

00000cda <printf>:
     cda:	a0 e0       	ldi	r26, 0x00	; 0
     cdc:	b0 e0       	ldi	r27, 0x00	; 0
     cde:	e3 e7       	ldi	r30, 0x73	; 115
     ce0:	f6 e0       	ldi	r31, 0x06	; 6
     ce2:	0c 94 98 0a 	jmp	0x1530	; 0x1530 <__prologue_saves__+0x20>
     ce6:	ae 01       	movw	r20, r28
     ce8:	4b 5f       	subi	r20, 0xFB	; 251
     cea:	5f 4f       	sbci	r21, 0xFF	; 255
     cec:	fa 01       	movw	r30, r20
     cee:	61 91       	ld	r22, Z+
     cf0:	71 91       	ld	r23, Z+
     cf2:	af 01       	movw	r20, r30
     cf4:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <__iob+0x2>
     cf8:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <__iob+0x3>
     cfc:	0e 94 b3 06 	call	0xd66	; 0xd66 <vfprintf>
     d00:	e2 e0       	ldi	r30, 0x02	; 2
     d02:	0c 94 b4 0a 	jmp	0x1568	; 0x1568 <__epilogue_restores__+0x20>

00000d06 <puts>:
     d06:	0f 93       	push	r16
     d08:	1f 93       	push	r17
     d0a:	cf 93       	push	r28
     d0c:	df 93       	push	r29
     d0e:	e0 91 5b 03 	lds	r30, 0x035B	; 0x80035b <__iob+0x2>
     d12:	f0 91 5c 03 	lds	r31, 0x035C	; 0x80035c <__iob+0x3>
     d16:	23 81       	ldd	r18, Z+3	; 0x03
     d18:	21 ff       	sbrs	r18, 1
     d1a:	1b c0       	rjmp	.+54     	; 0xd52 <puts+0x4c>
     d1c:	8c 01       	movw	r16, r24
     d1e:	d0 e0       	ldi	r29, 0x00	; 0
     d20:	c0 e0       	ldi	r28, 0x00	; 0
     d22:	f8 01       	movw	r30, r16
     d24:	81 91       	ld	r24, Z+
     d26:	8f 01       	movw	r16, r30
     d28:	60 91 5b 03 	lds	r22, 0x035B	; 0x80035b <__iob+0x2>
     d2c:	70 91 5c 03 	lds	r23, 0x035C	; 0x80035c <__iob+0x3>
     d30:	db 01       	movw	r26, r22
     d32:	18 96       	adiw	r26, 0x08	; 8
     d34:	ed 91       	ld	r30, X+
     d36:	fc 91       	ld	r31, X
     d38:	19 97       	sbiw	r26, 0x09	; 9
     d3a:	88 23       	and	r24, r24
     d3c:	31 f0       	breq	.+12     	; 0xd4a <puts+0x44>
     d3e:	09 95       	icall
     d40:	89 2b       	or	r24, r25
     d42:	79 f3       	breq	.-34     	; 0xd22 <puts+0x1c>
     d44:	df ef       	ldi	r29, 0xFF	; 255
     d46:	cf ef       	ldi	r28, 0xFF	; 255
     d48:	ec cf       	rjmp	.-40     	; 0xd22 <puts+0x1c>
     d4a:	8a e0       	ldi	r24, 0x0A	; 10
     d4c:	09 95       	icall
     d4e:	89 2b       	or	r24, r25
     d50:	19 f0       	breq	.+6      	; 0xd58 <puts+0x52>
     d52:	8f ef       	ldi	r24, 0xFF	; 255
     d54:	9f ef       	ldi	r25, 0xFF	; 255
     d56:	02 c0       	rjmp	.+4      	; 0xd5c <puts+0x56>
     d58:	8d 2f       	mov	r24, r29
     d5a:	9c 2f       	mov	r25, r28
     d5c:	df 91       	pop	r29
     d5e:	cf 91       	pop	r28
     d60:	1f 91       	pop	r17
     d62:	0f 91       	pop	r16
     d64:	08 95       	ret

00000d66 <vfprintf>:
     d66:	ab e0       	ldi	r26, 0x0B	; 11
     d68:	b0 e0       	ldi	r27, 0x00	; 0
     d6a:	e9 eb       	ldi	r30, 0xB9	; 185
     d6c:	f6 e0       	ldi	r31, 0x06	; 6
     d6e:	0c 94 88 0a 	jmp	0x1510	; 0x1510 <__prologue_saves__>
     d72:	6c 01       	movw	r12, r24
     d74:	7b 01       	movw	r14, r22
     d76:	8a 01       	movw	r16, r20
     d78:	fc 01       	movw	r30, r24
     d7a:	17 82       	std	Z+7, r1	; 0x07
     d7c:	16 82       	std	Z+6, r1	; 0x06
     d7e:	83 81       	ldd	r24, Z+3	; 0x03
     d80:	81 ff       	sbrs	r24, 1
     d82:	cc c1       	rjmp	.+920    	; 0x111c <vfprintf+0x3b6>
     d84:	ce 01       	movw	r24, r28
     d86:	01 96       	adiw	r24, 0x01	; 1
     d88:	3c 01       	movw	r6, r24
     d8a:	f6 01       	movw	r30, r12
     d8c:	93 81       	ldd	r25, Z+3	; 0x03
     d8e:	f7 01       	movw	r30, r14
     d90:	93 fd       	sbrc	r25, 3
     d92:	85 91       	lpm	r24, Z+
     d94:	93 ff       	sbrs	r25, 3
     d96:	81 91       	ld	r24, Z+
     d98:	7f 01       	movw	r14, r30
     d9a:	88 23       	and	r24, r24
     d9c:	09 f4       	brne	.+2      	; 0xda0 <vfprintf+0x3a>
     d9e:	ba c1       	rjmp	.+884    	; 0x1114 <vfprintf+0x3ae>
     da0:	85 32       	cpi	r24, 0x25	; 37
     da2:	39 f4       	brne	.+14     	; 0xdb2 <vfprintf+0x4c>
     da4:	93 fd       	sbrc	r25, 3
     da6:	85 91       	lpm	r24, Z+
     da8:	93 ff       	sbrs	r25, 3
     daa:	81 91       	ld	r24, Z+
     dac:	7f 01       	movw	r14, r30
     dae:	85 32       	cpi	r24, 0x25	; 37
     db0:	29 f4       	brne	.+10     	; 0xdbc <vfprintf+0x56>
     db2:	b6 01       	movw	r22, r12
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	0e 94 ee 09 	call	0x13dc	; 0x13dc <fputc>
     dba:	e7 cf       	rjmp	.-50     	; 0xd8a <vfprintf+0x24>
     dbc:	91 2c       	mov	r9, r1
     dbe:	21 2c       	mov	r2, r1
     dc0:	31 2c       	mov	r3, r1
     dc2:	ff e1       	ldi	r31, 0x1F	; 31
     dc4:	f3 15       	cp	r31, r3
     dc6:	d8 f0       	brcs	.+54     	; 0xdfe <vfprintf+0x98>
     dc8:	8b 32       	cpi	r24, 0x2B	; 43
     dca:	79 f0       	breq	.+30     	; 0xdea <vfprintf+0x84>
     dcc:	38 f4       	brcc	.+14     	; 0xddc <vfprintf+0x76>
     dce:	80 32       	cpi	r24, 0x20	; 32
     dd0:	79 f0       	breq	.+30     	; 0xdf0 <vfprintf+0x8a>
     dd2:	83 32       	cpi	r24, 0x23	; 35
     dd4:	a1 f4       	brne	.+40     	; 0xdfe <vfprintf+0x98>
     dd6:	23 2d       	mov	r18, r3
     dd8:	20 61       	ori	r18, 0x10	; 16
     dda:	1d c0       	rjmp	.+58     	; 0xe16 <vfprintf+0xb0>
     ddc:	8d 32       	cpi	r24, 0x2D	; 45
     dde:	61 f0       	breq	.+24     	; 0xdf8 <vfprintf+0x92>
     de0:	80 33       	cpi	r24, 0x30	; 48
     de2:	69 f4       	brne	.+26     	; 0xdfe <vfprintf+0x98>
     de4:	23 2d       	mov	r18, r3
     de6:	21 60       	ori	r18, 0x01	; 1
     de8:	16 c0       	rjmp	.+44     	; 0xe16 <vfprintf+0xb0>
     dea:	83 2d       	mov	r24, r3
     dec:	82 60       	ori	r24, 0x02	; 2
     dee:	38 2e       	mov	r3, r24
     df0:	e3 2d       	mov	r30, r3
     df2:	e4 60       	ori	r30, 0x04	; 4
     df4:	3e 2e       	mov	r3, r30
     df6:	2a c0       	rjmp	.+84     	; 0xe4c <vfprintf+0xe6>
     df8:	f3 2d       	mov	r31, r3
     dfa:	f8 60       	ori	r31, 0x08	; 8
     dfc:	1d c0       	rjmp	.+58     	; 0xe38 <vfprintf+0xd2>
     dfe:	37 fc       	sbrc	r3, 7
     e00:	2d c0       	rjmp	.+90     	; 0xe5c <vfprintf+0xf6>
     e02:	20 ed       	ldi	r18, 0xD0	; 208
     e04:	28 0f       	add	r18, r24
     e06:	2a 30       	cpi	r18, 0x0A	; 10
     e08:	40 f0       	brcs	.+16     	; 0xe1a <vfprintf+0xb4>
     e0a:	8e 32       	cpi	r24, 0x2E	; 46
     e0c:	b9 f4       	brne	.+46     	; 0xe3c <vfprintf+0xd6>
     e0e:	36 fc       	sbrc	r3, 6
     e10:	81 c1       	rjmp	.+770    	; 0x1114 <vfprintf+0x3ae>
     e12:	23 2d       	mov	r18, r3
     e14:	20 64       	ori	r18, 0x40	; 64
     e16:	32 2e       	mov	r3, r18
     e18:	19 c0       	rjmp	.+50     	; 0xe4c <vfprintf+0xe6>
     e1a:	36 fe       	sbrs	r3, 6
     e1c:	06 c0       	rjmp	.+12     	; 0xe2a <vfprintf+0xc4>
     e1e:	8a e0       	ldi	r24, 0x0A	; 10
     e20:	98 9e       	mul	r9, r24
     e22:	20 0d       	add	r18, r0
     e24:	11 24       	eor	r1, r1
     e26:	92 2e       	mov	r9, r18
     e28:	11 c0       	rjmp	.+34     	; 0xe4c <vfprintf+0xe6>
     e2a:	ea e0       	ldi	r30, 0x0A	; 10
     e2c:	2e 9e       	mul	r2, r30
     e2e:	20 0d       	add	r18, r0
     e30:	11 24       	eor	r1, r1
     e32:	22 2e       	mov	r2, r18
     e34:	f3 2d       	mov	r31, r3
     e36:	f0 62       	ori	r31, 0x20	; 32
     e38:	3f 2e       	mov	r3, r31
     e3a:	08 c0       	rjmp	.+16     	; 0xe4c <vfprintf+0xe6>
     e3c:	8c 36       	cpi	r24, 0x6C	; 108
     e3e:	21 f4       	brne	.+8      	; 0xe48 <vfprintf+0xe2>
     e40:	83 2d       	mov	r24, r3
     e42:	80 68       	ori	r24, 0x80	; 128
     e44:	38 2e       	mov	r3, r24
     e46:	02 c0       	rjmp	.+4      	; 0xe4c <vfprintf+0xe6>
     e48:	88 36       	cpi	r24, 0x68	; 104
     e4a:	41 f4       	brne	.+16     	; 0xe5c <vfprintf+0xf6>
     e4c:	f7 01       	movw	r30, r14
     e4e:	93 fd       	sbrc	r25, 3
     e50:	85 91       	lpm	r24, Z+
     e52:	93 ff       	sbrs	r25, 3
     e54:	81 91       	ld	r24, Z+
     e56:	7f 01       	movw	r14, r30
     e58:	81 11       	cpse	r24, r1
     e5a:	b3 cf       	rjmp	.-154    	; 0xdc2 <vfprintf+0x5c>
     e5c:	98 2f       	mov	r25, r24
     e5e:	9f 7d       	andi	r25, 0xDF	; 223
     e60:	95 54       	subi	r25, 0x45	; 69
     e62:	93 30       	cpi	r25, 0x03	; 3
     e64:	28 f4       	brcc	.+10     	; 0xe70 <vfprintf+0x10a>
     e66:	0c 5f       	subi	r16, 0xFC	; 252
     e68:	1f 4f       	sbci	r17, 0xFF	; 255
     e6a:	9f e3       	ldi	r25, 0x3F	; 63
     e6c:	99 83       	std	Y+1, r25	; 0x01
     e6e:	0d c0       	rjmp	.+26     	; 0xe8a <vfprintf+0x124>
     e70:	83 36       	cpi	r24, 0x63	; 99
     e72:	31 f0       	breq	.+12     	; 0xe80 <vfprintf+0x11a>
     e74:	83 37       	cpi	r24, 0x73	; 115
     e76:	71 f0       	breq	.+28     	; 0xe94 <vfprintf+0x12e>
     e78:	83 35       	cpi	r24, 0x53	; 83
     e7a:	09 f0       	breq	.+2      	; 0xe7e <vfprintf+0x118>
     e7c:	59 c0       	rjmp	.+178    	; 0xf30 <vfprintf+0x1ca>
     e7e:	21 c0       	rjmp	.+66     	; 0xec2 <vfprintf+0x15c>
     e80:	f8 01       	movw	r30, r16
     e82:	80 81       	ld	r24, Z
     e84:	89 83       	std	Y+1, r24	; 0x01
     e86:	0e 5f       	subi	r16, 0xFE	; 254
     e88:	1f 4f       	sbci	r17, 0xFF	; 255
     e8a:	88 24       	eor	r8, r8
     e8c:	83 94       	inc	r8
     e8e:	91 2c       	mov	r9, r1
     e90:	53 01       	movw	r10, r6
     e92:	13 c0       	rjmp	.+38     	; 0xeba <vfprintf+0x154>
     e94:	28 01       	movw	r4, r16
     e96:	f2 e0       	ldi	r31, 0x02	; 2
     e98:	4f 0e       	add	r4, r31
     e9a:	51 1c       	adc	r5, r1
     e9c:	f8 01       	movw	r30, r16
     e9e:	a0 80       	ld	r10, Z
     ea0:	b1 80       	ldd	r11, Z+1	; 0x01
     ea2:	36 fe       	sbrs	r3, 6
     ea4:	03 c0       	rjmp	.+6      	; 0xeac <vfprintf+0x146>
     ea6:	69 2d       	mov	r22, r9
     ea8:	70 e0       	ldi	r23, 0x00	; 0
     eaa:	02 c0       	rjmp	.+4      	; 0xeb0 <vfprintf+0x14a>
     eac:	6f ef       	ldi	r22, 0xFF	; 255
     eae:	7f ef       	ldi	r23, 0xFF	; 255
     eb0:	c5 01       	movw	r24, r10
     eb2:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <strnlen>
     eb6:	4c 01       	movw	r8, r24
     eb8:	82 01       	movw	r16, r4
     eba:	f3 2d       	mov	r31, r3
     ebc:	ff 77       	andi	r31, 0x7F	; 127
     ebe:	3f 2e       	mov	r3, r31
     ec0:	16 c0       	rjmp	.+44     	; 0xeee <vfprintf+0x188>
     ec2:	28 01       	movw	r4, r16
     ec4:	22 e0       	ldi	r18, 0x02	; 2
     ec6:	42 0e       	add	r4, r18
     ec8:	51 1c       	adc	r5, r1
     eca:	f8 01       	movw	r30, r16
     ecc:	a0 80       	ld	r10, Z
     ece:	b1 80       	ldd	r11, Z+1	; 0x01
     ed0:	36 fe       	sbrs	r3, 6
     ed2:	03 c0       	rjmp	.+6      	; 0xeda <vfprintf+0x174>
     ed4:	69 2d       	mov	r22, r9
     ed6:	70 e0       	ldi	r23, 0x00	; 0
     ed8:	02 c0       	rjmp	.+4      	; 0xede <vfprintf+0x178>
     eda:	6f ef       	ldi	r22, 0xFF	; 255
     edc:	7f ef       	ldi	r23, 0xFF	; 255
     ede:	c5 01       	movw	r24, r10
     ee0:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <strnlen_P>
     ee4:	4c 01       	movw	r8, r24
     ee6:	f3 2d       	mov	r31, r3
     ee8:	f0 68       	ori	r31, 0x80	; 128
     eea:	3f 2e       	mov	r3, r31
     eec:	82 01       	movw	r16, r4
     eee:	33 fc       	sbrc	r3, 3
     ef0:	1b c0       	rjmp	.+54     	; 0xf28 <vfprintf+0x1c2>
     ef2:	82 2d       	mov	r24, r2
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	88 16       	cp	r8, r24
     ef8:	99 06       	cpc	r9, r25
     efa:	b0 f4       	brcc	.+44     	; 0xf28 <vfprintf+0x1c2>
     efc:	b6 01       	movw	r22, r12
     efe:	80 e2       	ldi	r24, 0x20	; 32
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	0e 94 ee 09 	call	0x13dc	; 0x13dc <fputc>
     f06:	2a 94       	dec	r2
     f08:	f4 cf       	rjmp	.-24     	; 0xef2 <vfprintf+0x18c>
     f0a:	f5 01       	movw	r30, r10
     f0c:	37 fc       	sbrc	r3, 7
     f0e:	85 91       	lpm	r24, Z+
     f10:	37 fe       	sbrs	r3, 7
     f12:	81 91       	ld	r24, Z+
     f14:	5f 01       	movw	r10, r30
     f16:	b6 01       	movw	r22, r12
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	0e 94 ee 09 	call	0x13dc	; 0x13dc <fputc>
     f1e:	21 10       	cpse	r2, r1
     f20:	2a 94       	dec	r2
     f22:	21 e0       	ldi	r18, 0x01	; 1
     f24:	82 1a       	sub	r8, r18
     f26:	91 08       	sbc	r9, r1
     f28:	81 14       	cp	r8, r1
     f2a:	91 04       	cpc	r9, r1
     f2c:	71 f7       	brne	.-36     	; 0xf0a <vfprintf+0x1a4>
     f2e:	e8 c0       	rjmp	.+464    	; 0x1100 <vfprintf+0x39a>
     f30:	84 36       	cpi	r24, 0x64	; 100
     f32:	11 f0       	breq	.+4      	; 0xf38 <vfprintf+0x1d2>
     f34:	89 36       	cpi	r24, 0x69	; 105
     f36:	41 f5       	brne	.+80     	; 0xf88 <vfprintf+0x222>
     f38:	f8 01       	movw	r30, r16
     f3a:	37 fe       	sbrs	r3, 7
     f3c:	07 c0       	rjmp	.+14     	; 0xf4c <vfprintf+0x1e6>
     f3e:	60 81       	ld	r22, Z
     f40:	71 81       	ldd	r23, Z+1	; 0x01
     f42:	82 81       	ldd	r24, Z+2	; 0x02
     f44:	93 81       	ldd	r25, Z+3	; 0x03
     f46:	0c 5f       	subi	r16, 0xFC	; 252
     f48:	1f 4f       	sbci	r17, 0xFF	; 255
     f4a:	08 c0       	rjmp	.+16     	; 0xf5c <vfprintf+0x1f6>
     f4c:	60 81       	ld	r22, Z
     f4e:	71 81       	ldd	r23, Z+1	; 0x01
     f50:	07 2e       	mov	r0, r23
     f52:	00 0c       	add	r0, r0
     f54:	88 0b       	sbc	r24, r24
     f56:	99 0b       	sbc	r25, r25
     f58:	0e 5f       	subi	r16, 0xFE	; 254
     f5a:	1f 4f       	sbci	r17, 0xFF	; 255
     f5c:	f3 2d       	mov	r31, r3
     f5e:	ff 76       	andi	r31, 0x6F	; 111
     f60:	3f 2e       	mov	r3, r31
     f62:	97 ff       	sbrs	r25, 7
     f64:	09 c0       	rjmp	.+18     	; 0xf78 <vfprintf+0x212>
     f66:	90 95       	com	r25
     f68:	80 95       	com	r24
     f6a:	70 95       	com	r23
     f6c:	61 95       	neg	r22
     f6e:	7f 4f       	sbci	r23, 0xFF	; 255
     f70:	8f 4f       	sbci	r24, 0xFF	; 255
     f72:	9f 4f       	sbci	r25, 0xFF	; 255
     f74:	f0 68       	ori	r31, 0x80	; 128
     f76:	3f 2e       	mov	r3, r31
     f78:	2a e0       	ldi	r18, 0x0A	; 10
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	a3 01       	movw	r20, r6
     f7e:	0e 94 2a 0a 	call	0x1454	; 0x1454 <__ultoa_invert>
     f82:	88 2e       	mov	r8, r24
     f84:	86 18       	sub	r8, r6
     f86:	45 c0       	rjmp	.+138    	; 0x1012 <vfprintf+0x2ac>
     f88:	85 37       	cpi	r24, 0x75	; 117
     f8a:	31 f4       	brne	.+12     	; 0xf98 <vfprintf+0x232>
     f8c:	23 2d       	mov	r18, r3
     f8e:	2f 7e       	andi	r18, 0xEF	; 239
     f90:	b2 2e       	mov	r11, r18
     f92:	2a e0       	ldi	r18, 0x0A	; 10
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	25 c0       	rjmp	.+74     	; 0xfe2 <vfprintf+0x27c>
     f98:	93 2d       	mov	r25, r3
     f9a:	99 7f       	andi	r25, 0xF9	; 249
     f9c:	b9 2e       	mov	r11, r25
     f9e:	8f 36       	cpi	r24, 0x6F	; 111
     fa0:	c1 f0       	breq	.+48     	; 0xfd2 <vfprintf+0x26c>
     fa2:	18 f4       	brcc	.+6      	; 0xfaa <vfprintf+0x244>
     fa4:	88 35       	cpi	r24, 0x58	; 88
     fa6:	79 f0       	breq	.+30     	; 0xfc6 <vfprintf+0x260>
     fa8:	b5 c0       	rjmp	.+362    	; 0x1114 <vfprintf+0x3ae>
     faa:	80 37       	cpi	r24, 0x70	; 112
     fac:	19 f0       	breq	.+6      	; 0xfb4 <vfprintf+0x24e>
     fae:	88 37       	cpi	r24, 0x78	; 120
     fb0:	21 f0       	breq	.+8      	; 0xfba <vfprintf+0x254>
     fb2:	b0 c0       	rjmp	.+352    	; 0x1114 <vfprintf+0x3ae>
     fb4:	e9 2f       	mov	r30, r25
     fb6:	e0 61       	ori	r30, 0x10	; 16
     fb8:	be 2e       	mov	r11, r30
     fba:	b4 fe       	sbrs	r11, 4
     fbc:	0d c0       	rjmp	.+26     	; 0xfd8 <vfprintf+0x272>
     fbe:	fb 2d       	mov	r31, r11
     fc0:	f4 60       	ori	r31, 0x04	; 4
     fc2:	bf 2e       	mov	r11, r31
     fc4:	09 c0       	rjmp	.+18     	; 0xfd8 <vfprintf+0x272>
     fc6:	34 fe       	sbrs	r3, 4
     fc8:	0a c0       	rjmp	.+20     	; 0xfde <vfprintf+0x278>
     fca:	29 2f       	mov	r18, r25
     fcc:	26 60       	ori	r18, 0x06	; 6
     fce:	b2 2e       	mov	r11, r18
     fd0:	06 c0       	rjmp	.+12     	; 0xfde <vfprintf+0x278>
     fd2:	28 e0       	ldi	r18, 0x08	; 8
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	05 c0       	rjmp	.+10     	; 0xfe2 <vfprintf+0x27c>
     fd8:	20 e1       	ldi	r18, 0x10	; 16
     fda:	30 e0       	ldi	r19, 0x00	; 0
     fdc:	02 c0       	rjmp	.+4      	; 0xfe2 <vfprintf+0x27c>
     fde:	20 e1       	ldi	r18, 0x10	; 16
     fe0:	32 e0       	ldi	r19, 0x02	; 2
     fe2:	f8 01       	movw	r30, r16
     fe4:	b7 fe       	sbrs	r11, 7
     fe6:	07 c0       	rjmp	.+14     	; 0xff6 <vfprintf+0x290>
     fe8:	60 81       	ld	r22, Z
     fea:	71 81       	ldd	r23, Z+1	; 0x01
     fec:	82 81       	ldd	r24, Z+2	; 0x02
     fee:	93 81       	ldd	r25, Z+3	; 0x03
     ff0:	0c 5f       	subi	r16, 0xFC	; 252
     ff2:	1f 4f       	sbci	r17, 0xFF	; 255
     ff4:	06 c0       	rjmp	.+12     	; 0x1002 <vfprintf+0x29c>
     ff6:	60 81       	ld	r22, Z
     ff8:	71 81       	ldd	r23, Z+1	; 0x01
     ffa:	80 e0       	ldi	r24, 0x00	; 0
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	0e 5f       	subi	r16, 0xFE	; 254
    1000:	1f 4f       	sbci	r17, 0xFF	; 255
    1002:	a3 01       	movw	r20, r6
    1004:	0e 94 2a 0a 	call	0x1454	; 0x1454 <__ultoa_invert>
    1008:	88 2e       	mov	r8, r24
    100a:	86 18       	sub	r8, r6
    100c:	fb 2d       	mov	r31, r11
    100e:	ff 77       	andi	r31, 0x7F	; 127
    1010:	3f 2e       	mov	r3, r31
    1012:	36 fe       	sbrs	r3, 6
    1014:	0d c0       	rjmp	.+26     	; 0x1030 <vfprintf+0x2ca>
    1016:	23 2d       	mov	r18, r3
    1018:	2e 7f       	andi	r18, 0xFE	; 254
    101a:	a2 2e       	mov	r10, r18
    101c:	89 14       	cp	r8, r9
    101e:	58 f4       	brcc	.+22     	; 0x1036 <vfprintf+0x2d0>
    1020:	34 fe       	sbrs	r3, 4
    1022:	0b c0       	rjmp	.+22     	; 0x103a <vfprintf+0x2d4>
    1024:	32 fc       	sbrc	r3, 2
    1026:	09 c0       	rjmp	.+18     	; 0x103a <vfprintf+0x2d4>
    1028:	83 2d       	mov	r24, r3
    102a:	8e 7e       	andi	r24, 0xEE	; 238
    102c:	a8 2e       	mov	r10, r24
    102e:	05 c0       	rjmp	.+10     	; 0x103a <vfprintf+0x2d4>
    1030:	b8 2c       	mov	r11, r8
    1032:	a3 2c       	mov	r10, r3
    1034:	03 c0       	rjmp	.+6      	; 0x103c <vfprintf+0x2d6>
    1036:	b8 2c       	mov	r11, r8
    1038:	01 c0       	rjmp	.+2      	; 0x103c <vfprintf+0x2d6>
    103a:	b9 2c       	mov	r11, r9
    103c:	a4 fe       	sbrs	r10, 4
    103e:	0f c0       	rjmp	.+30     	; 0x105e <vfprintf+0x2f8>
    1040:	fe 01       	movw	r30, r28
    1042:	e8 0d       	add	r30, r8
    1044:	f1 1d       	adc	r31, r1
    1046:	80 81       	ld	r24, Z
    1048:	80 33       	cpi	r24, 0x30	; 48
    104a:	21 f4       	brne	.+8      	; 0x1054 <vfprintf+0x2ee>
    104c:	9a 2d       	mov	r25, r10
    104e:	99 7e       	andi	r25, 0xE9	; 233
    1050:	a9 2e       	mov	r10, r25
    1052:	09 c0       	rjmp	.+18     	; 0x1066 <vfprintf+0x300>
    1054:	a2 fe       	sbrs	r10, 2
    1056:	06 c0       	rjmp	.+12     	; 0x1064 <vfprintf+0x2fe>
    1058:	b3 94       	inc	r11
    105a:	b3 94       	inc	r11
    105c:	04 c0       	rjmp	.+8      	; 0x1066 <vfprintf+0x300>
    105e:	8a 2d       	mov	r24, r10
    1060:	86 78       	andi	r24, 0x86	; 134
    1062:	09 f0       	breq	.+2      	; 0x1066 <vfprintf+0x300>
    1064:	b3 94       	inc	r11
    1066:	a3 fc       	sbrc	r10, 3
    1068:	11 c0       	rjmp	.+34     	; 0x108c <vfprintf+0x326>
    106a:	a0 fe       	sbrs	r10, 0
    106c:	06 c0       	rjmp	.+12     	; 0x107a <vfprintf+0x314>
    106e:	b2 14       	cp	r11, r2
    1070:	88 f4       	brcc	.+34     	; 0x1094 <vfprintf+0x32e>
    1072:	28 0c       	add	r2, r8
    1074:	92 2c       	mov	r9, r2
    1076:	9b 18       	sub	r9, r11
    1078:	0e c0       	rjmp	.+28     	; 0x1096 <vfprintf+0x330>
    107a:	b2 14       	cp	r11, r2
    107c:	60 f4       	brcc	.+24     	; 0x1096 <vfprintf+0x330>
    107e:	b6 01       	movw	r22, r12
    1080:	80 e2       	ldi	r24, 0x20	; 32
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	0e 94 ee 09 	call	0x13dc	; 0x13dc <fputc>
    1088:	b3 94       	inc	r11
    108a:	f7 cf       	rjmp	.-18     	; 0x107a <vfprintf+0x314>
    108c:	b2 14       	cp	r11, r2
    108e:	18 f4       	brcc	.+6      	; 0x1096 <vfprintf+0x330>
    1090:	2b 18       	sub	r2, r11
    1092:	02 c0       	rjmp	.+4      	; 0x1098 <vfprintf+0x332>
    1094:	98 2c       	mov	r9, r8
    1096:	21 2c       	mov	r2, r1
    1098:	a4 fe       	sbrs	r10, 4
    109a:	10 c0       	rjmp	.+32     	; 0x10bc <vfprintf+0x356>
    109c:	b6 01       	movw	r22, r12
    109e:	80 e3       	ldi	r24, 0x30	; 48
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	0e 94 ee 09 	call	0x13dc	; 0x13dc <fputc>
    10a6:	a2 fe       	sbrs	r10, 2
    10a8:	17 c0       	rjmp	.+46     	; 0x10d8 <vfprintf+0x372>
    10aa:	a1 fc       	sbrc	r10, 1
    10ac:	03 c0       	rjmp	.+6      	; 0x10b4 <vfprintf+0x34e>
    10ae:	88 e7       	ldi	r24, 0x78	; 120
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <vfprintf+0x352>
    10b4:	88 e5       	ldi	r24, 0x58	; 88
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	b6 01       	movw	r22, r12
    10ba:	0c c0       	rjmp	.+24     	; 0x10d4 <vfprintf+0x36e>
    10bc:	8a 2d       	mov	r24, r10
    10be:	86 78       	andi	r24, 0x86	; 134
    10c0:	59 f0       	breq	.+22     	; 0x10d8 <vfprintf+0x372>
    10c2:	a1 fe       	sbrs	r10, 1
    10c4:	02 c0       	rjmp	.+4      	; 0x10ca <vfprintf+0x364>
    10c6:	8b e2       	ldi	r24, 0x2B	; 43
    10c8:	01 c0       	rjmp	.+2      	; 0x10cc <vfprintf+0x366>
    10ca:	80 e2       	ldi	r24, 0x20	; 32
    10cc:	a7 fc       	sbrc	r10, 7
    10ce:	8d e2       	ldi	r24, 0x2D	; 45
    10d0:	b6 01       	movw	r22, r12
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	0e 94 ee 09 	call	0x13dc	; 0x13dc <fputc>
    10d8:	89 14       	cp	r8, r9
    10da:	38 f4       	brcc	.+14     	; 0x10ea <vfprintf+0x384>
    10dc:	b6 01       	movw	r22, r12
    10de:	80 e3       	ldi	r24, 0x30	; 48
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	0e 94 ee 09 	call	0x13dc	; 0x13dc <fputc>
    10e6:	9a 94       	dec	r9
    10e8:	f7 cf       	rjmp	.-18     	; 0x10d8 <vfprintf+0x372>
    10ea:	8a 94       	dec	r8
    10ec:	f3 01       	movw	r30, r6
    10ee:	e8 0d       	add	r30, r8
    10f0:	f1 1d       	adc	r31, r1
    10f2:	80 81       	ld	r24, Z
    10f4:	b6 01       	movw	r22, r12
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	0e 94 ee 09 	call	0x13dc	; 0x13dc <fputc>
    10fc:	81 10       	cpse	r8, r1
    10fe:	f5 cf       	rjmp	.-22     	; 0x10ea <vfprintf+0x384>
    1100:	22 20       	and	r2, r2
    1102:	09 f4       	brne	.+2      	; 0x1106 <vfprintf+0x3a0>
    1104:	42 ce       	rjmp	.-892    	; 0xd8a <vfprintf+0x24>
    1106:	b6 01       	movw	r22, r12
    1108:	80 e2       	ldi	r24, 0x20	; 32
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	0e 94 ee 09 	call	0x13dc	; 0x13dc <fputc>
    1110:	2a 94       	dec	r2
    1112:	f6 cf       	rjmp	.-20     	; 0x1100 <vfprintf+0x39a>
    1114:	f6 01       	movw	r30, r12
    1116:	86 81       	ldd	r24, Z+6	; 0x06
    1118:	97 81       	ldd	r25, Z+7	; 0x07
    111a:	02 c0       	rjmp	.+4      	; 0x1120 <vfprintf+0x3ba>
    111c:	8f ef       	ldi	r24, 0xFF	; 255
    111e:	9f ef       	ldi	r25, 0xFF	; 255
    1120:	2b 96       	adiw	r28, 0x0b	; 11
    1122:	e2 e1       	ldi	r30, 0x12	; 18
    1124:	0c 94 a4 0a 	jmp	0x1548	; 0x1548 <__epilogue_restores__>

00001128 <calloc>:
    1128:	0f 93       	push	r16
    112a:	1f 93       	push	r17
    112c:	cf 93       	push	r28
    112e:	df 93       	push	r29
    1130:	86 9f       	mul	r24, r22
    1132:	80 01       	movw	r16, r0
    1134:	87 9f       	mul	r24, r23
    1136:	10 0d       	add	r17, r0
    1138:	96 9f       	mul	r25, r22
    113a:	10 0d       	add	r17, r0
    113c:	11 24       	eor	r1, r1
    113e:	c8 01       	movw	r24, r16
    1140:	0e 94 b0 08 	call	0x1160	; 0x1160 <malloc>
    1144:	ec 01       	movw	r28, r24
    1146:	00 97       	sbiw	r24, 0x00	; 0
    1148:	29 f0       	breq	.+10     	; 0x1154 <calloc+0x2c>
    114a:	a8 01       	movw	r20, r16
    114c:	60 e0       	ldi	r22, 0x00	; 0
    114e:	70 e0       	ldi	r23, 0x00	; 0
    1150:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <memset>
    1154:	ce 01       	movw	r24, r28
    1156:	df 91       	pop	r29
    1158:	cf 91       	pop	r28
    115a:	1f 91       	pop	r17
    115c:	0f 91       	pop	r16
    115e:	08 95       	ret

00001160 <malloc>:
    1160:	0f 93       	push	r16
    1162:	1f 93       	push	r17
    1164:	cf 93       	push	r28
    1166:	df 93       	push	r29
    1168:	82 30       	cpi	r24, 0x02	; 2
    116a:	91 05       	cpc	r25, r1
    116c:	10 f4       	brcc	.+4      	; 0x1172 <malloc+0x12>
    116e:	82 e0       	ldi	r24, 0x02	; 2
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	e0 91 61 03 	lds	r30, 0x0361	; 0x800361 <__flp>
    1176:	f0 91 62 03 	lds	r31, 0x0362	; 0x800362 <__flp+0x1>
    117a:	20 e0       	ldi	r18, 0x00	; 0
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	a0 e0       	ldi	r26, 0x00	; 0
    1180:	b0 e0       	ldi	r27, 0x00	; 0
    1182:	30 97       	sbiw	r30, 0x00	; 0
    1184:	19 f1       	breq	.+70     	; 0x11cc <malloc+0x6c>
    1186:	40 81       	ld	r20, Z
    1188:	51 81       	ldd	r21, Z+1	; 0x01
    118a:	02 81       	ldd	r16, Z+2	; 0x02
    118c:	13 81       	ldd	r17, Z+3	; 0x03
    118e:	48 17       	cp	r20, r24
    1190:	59 07       	cpc	r21, r25
    1192:	c8 f0       	brcs	.+50     	; 0x11c6 <malloc+0x66>
    1194:	84 17       	cp	r24, r20
    1196:	95 07       	cpc	r25, r21
    1198:	69 f4       	brne	.+26     	; 0x11b4 <malloc+0x54>
    119a:	10 97       	sbiw	r26, 0x00	; 0
    119c:	31 f0       	breq	.+12     	; 0x11aa <malloc+0x4a>
    119e:	12 96       	adiw	r26, 0x02	; 2
    11a0:	0c 93       	st	X, r16
    11a2:	12 97       	sbiw	r26, 0x02	; 2
    11a4:	13 96       	adiw	r26, 0x03	; 3
    11a6:	1c 93       	st	X, r17
    11a8:	27 c0       	rjmp	.+78     	; 0x11f8 <malloc+0x98>
    11aa:	00 93 61 03 	sts	0x0361, r16	; 0x800361 <__flp>
    11ae:	10 93 62 03 	sts	0x0362, r17	; 0x800362 <__flp+0x1>
    11b2:	22 c0       	rjmp	.+68     	; 0x11f8 <malloc+0x98>
    11b4:	21 15       	cp	r18, r1
    11b6:	31 05       	cpc	r19, r1
    11b8:	19 f0       	breq	.+6      	; 0x11c0 <malloc+0x60>
    11ba:	42 17       	cp	r20, r18
    11bc:	53 07       	cpc	r21, r19
    11be:	18 f4       	brcc	.+6      	; 0x11c6 <malloc+0x66>
    11c0:	9a 01       	movw	r18, r20
    11c2:	bd 01       	movw	r22, r26
    11c4:	ef 01       	movw	r28, r30
    11c6:	df 01       	movw	r26, r30
    11c8:	f8 01       	movw	r30, r16
    11ca:	db cf       	rjmp	.-74     	; 0x1182 <malloc+0x22>
    11cc:	21 15       	cp	r18, r1
    11ce:	31 05       	cpc	r19, r1
    11d0:	f9 f0       	breq	.+62     	; 0x1210 <malloc+0xb0>
    11d2:	28 1b       	sub	r18, r24
    11d4:	39 0b       	sbc	r19, r25
    11d6:	24 30       	cpi	r18, 0x04	; 4
    11d8:	31 05       	cpc	r19, r1
    11da:	80 f4       	brcc	.+32     	; 0x11fc <malloc+0x9c>
    11dc:	8a 81       	ldd	r24, Y+2	; 0x02
    11de:	9b 81       	ldd	r25, Y+3	; 0x03
    11e0:	61 15       	cp	r22, r1
    11e2:	71 05       	cpc	r23, r1
    11e4:	21 f0       	breq	.+8      	; 0x11ee <malloc+0x8e>
    11e6:	fb 01       	movw	r30, r22
    11e8:	93 83       	std	Z+3, r25	; 0x03
    11ea:	82 83       	std	Z+2, r24	; 0x02
    11ec:	04 c0       	rjmp	.+8      	; 0x11f6 <malloc+0x96>
    11ee:	90 93 62 03 	sts	0x0362, r25	; 0x800362 <__flp+0x1>
    11f2:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <__flp>
    11f6:	fe 01       	movw	r30, r28
    11f8:	32 96       	adiw	r30, 0x02	; 2
    11fa:	44 c0       	rjmp	.+136    	; 0x1284 <malloc+0x124>
    11fc:	fe 01       	movw	r30, r28
    11fe:	e2 0f       	add	r30, r18
    1200:	f3 1f       	adc	r31, r19
    1202:	81 93       	st	Z+, r24
    1204:	91 93       	st	Z+, r25
    1206:	22 50       	subi	r18, 0x02	; 2
    1208:	31 09       	sbc	r19, r1
    120a:	39 83       	std	Y+1, r19	; 0x01
    120c:	28 83       	st	Y, r18
    120e:	3a c0       	rjmp	.+116    	; 0x1284 <malloc+0x124>
    1210:	20 91 5f 03 	lds	r18, 0x035F	; 0x80035f <__brkval>
    1214:	30 91 60 03 	lds	r19, 0x0360	; 0x800360 <__brkval+0x1>
    1218:	23 2b       	or	r18, r19
    121a:	41 f4       	brne	.+16     	; 0x122c <malloc+0xcc>
    121c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1220:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1224:	30 93 60 03 	sts	0x0360, r19	; 0x800360 <__brkval+0x1>
    1228:	20 93 5f 03 	sts	0x035F, r18	; 0x80035f <__brkval>
    122c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1230:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1234:	21 15       	cp	r18, r1
    1236:	31 05       	cpc	r19, r1
    1238:	41 f4       	brne	.+16     	; 0x124a <malloc+0xea>
    123a:	2d b7       	in	r18, 0x3d	; 61
    123c:	3e b7       	in	r19, 0x3e	; 62
    123e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1242:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1246:	24 1b       	sub	r18, r20
    1248:	35 0b       	sbc	r19, r21
    124a:	e0 91 5f 03 	lds	r30, 0x035F	; 0x80035f <__brkval>
    124e:	f0 91 60 03 	lds	r31, 0x0360	; 0x800360 <__brkval+0x1>
    1252:	e2 17       	cp	r30, r18
    1254:	f3 07       	cpc	r31, r19
    1256:	a0 f4       	brcc	.+40     	; 0x1280 <malloc+0x120>
    1258:	2e 1b       	sub	r18, r30
    125a:	3f 0b       	sbc	r19, r31
    125c:	28 17       	cp	r18, r24
    125e:	39 07       	cpc	r19, r25
    1260:	78 f0       	brcs	.+30     	; 0x1280 <malloc+0x120>
    1262:	ac 01       	movw	r20, r24
    1264:	4e 5f       	subi	r20, 0xFE	; 254
    1266:	5f 4f       	sbci	r21, 0xFF	; 255
    1268:	24 17       	cp	r18, r20
    126a:	35 07       	cpc	r19, r21
    126c:	48 f0       	brcs	.+18     	; 0x1280 <malloc+0x120>
    126e:	4e 0f       	add	r20, r30
    1270:	5f 1f       	adc	r21, r31
    1272:	50 93 60 03 	sts	0x0360, r21	; 0x800360 <__brkval+0x1>
    1276:	40 93 5f 03 	sts	0x035F, r20	; 0x80035f <__brkval>
    127a:	81 93       	st	Z+, r24
    127c:	91 93       	st	Z+, r25
    127e:	02 c0       	rjmp	.+4      	; 0x1284 <malloc+0x124>
    1280:	e0 e0       	ldi	r30, 0x00	; 0
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	cf 01       	movw	r24, r30
    1286:	df 91       	pop	r29
    1288:	cf 91       	pop	r28
    128a:	1f 91       	pop	r17
    128c:	0f 91       	pop	r16
    128e:	08 95       	ret

00001290 <free>:
    1290:	cf 93       	push	r28
    1292:	df 93       	push	r29
    1294:	00 97       	sbiw	r24, 0x00	; 0
    1296:	09 f4       	brne	.+2      	; 0x129a <free+0xa>
    1298:	81 c0       	rjmp	.+258    	; 0x139c <free+0x10c>
    129a:	fc 01       	movw	r30, r24
    129c:	32 97       	sbiw	r30, 0x02	; 2
    129e:	13 82       	std	Z+3, r1	; 0x03
    12a0:	12 82       	std	Z+2, r1	; 0x02
    12a2:	a0 91 61 03 	lds	r26, 0x0361	; 0x800361 <__flp>
    12a6:	b0 91 62 03 	lds	r27, 0x0362	; 0x800362 <__flp+0x1>
    12aa:	10 97       	sbiw	r26, 0x00	; 0
    12ac:	81 f4       	brne	.+32     	; 0x12ce <free+0x3e>
    12ae:	20 81       	ld	r18, Z
    12b0:	31 81       	ldd	r19, Z+1	; 0x01
    12b2:	82 0f       	add	r24, r18
    12b4:	93 1f       	adc	r25, r19
    12b6:	20 91 5f 03 	lds	r18, 0x035F	; 0x80035f <__brkval>
    12ba:	30 91 60 03 	lds	r19, 0x0360	; 0x800360 <__brkval+0x1>
    12be:	28 17       	cp	r18, r24
    12c0:	39 07       	cpc	r19, r25
    12c2:	51 f5       	brne	.+84     	; 0x1318 <free+0x88>
    12c4:	f0 93 60 03 	sts	0x0360, r31	; 0x800360 <__brkval+0x1>
    12c8:	e0 93 5f 03 	sts	0x035F, r30	; 0x80035f <__brkval>
    12cc:	67 c0       	rjmp	.+206    	; 0x139c <free+0x10c>
    12ce:	ed 01       	movw	r28, r26
    12d0:	20 e0       	ldi	r18, 0x00	; 0
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	ce 17       	cp	r28, r30
    12d6:	df 07       	cpc	r29, r31
    12d8:	40 f4       	brcc	.+16     	; 0x12ea <free+0x5a>
    12da:	4a 81       	ldd	r20, Y+2	; 0x02
    12dc:	5b 81       	ldd	r21, Y+3	; 0x03
    12de:	9e 01       	movw	r18, r28
    12e0:	41 15       	cp	r20, r1
    12e2:	51 05       	cpc	r21, r1
    12e4:	f1 f0       	breq	.+60     	; 0x1322 <free+0x92>
    12e6:	ea 01       	movw	r28, r20
    12e8:	f5 cf       	rjmp	.-22     	; 0x12d4 <free+0x44>
    12ea:	d3 83       	std	Z+3, r29	; 0x03
    12ec:	c2 83       	std	Z+2, r28	; 0x02
    12ee:	40 81       	ld	r20, Z
    12f0:	51 81       	ldd	r21, Z+1	; 0x01
    12f2:	84 0f       	add	r24, r20
    12f4:	95 1f       	adc	r25, r21
    12f6:	c8 17       	cp	r28, r24
    12f8:	d9 07       	cpc	r29, r25
    12fa:	59 f4       	brne	.+22     	; 0x1312 <free+0x82>
    12fc:	88 81       	ld	r24, Y
    12fe:	99 81       	ldd	r25, Y+1	; 0x01
    1300:	84 0f       	add	r24, r20
    1302:	95 1f       	adc	r25, r21
    1304:	02 96       	adiw	r24, 0x02	; 2
    1306:	91 83       	std	Z+1, r25	; 0x01
    1308:	80 83       	st	Z, r24
    130a:	8a 81       	ldd	r24, Y+2	; 0x02
    130c:	9b 81       	ldd	r25, Y+3	; 0x03
    130e:	93 83       	std	Z+3, r25	; 0x03
    1310:	82 83       	std	Z+2, r24	; 0x02
    1312:	21 15       	cp	r18, r1
    1314:	31 05       	cpc	r19, r1
    1316:	29 f4       	brne	.+10     	; 0x1322 <free+0x92>
    1318:	f0 93 62 03 	sts	0x0362, r31	; 0x800362 <__flp+0x1>
    131c:	e0 93 61 03 	sts	0x0361, r30	; 0x800361 <__flp>
    1320:	3d c0       	rjmp	.+122    	; 0x139c <free+0x10c>
    1322:	e9 01       	movw	r28, r18
    1324:	fb 83       	std	Y+3, r31	; 0x03
    1326:	ea 83       	std	Y+2, r30	; 0x02
    1328:	49 91       	ld	r20, Y+
    132a:	59 91       	ld	r21, Y+
    132c:	c4 0f       	add	r28, r20
    132e:	d5 1f       	adc	r29, r21
    1330:	ec 17       	cp	r30, r28
    1332:	fd 07       	cpc	r31, r29
    1334:	61 f4       	brne	.+24     	; 0x134e <free+0xbe>
    1336:	80 81       	ld	r24, Z
    1338:	91 81       	ldd	r25, Z+1	; 0x01
    133a:	84 0f       	add	r24, r20
    133c:	95 1f       	adc	r25, r21
    133e:	02 96       	adiw	r24, 0x02	; 2
    1340:	e9 01       	movw	r28, r18
    1342:	99 83       	std	Y+1, r25	; 0x01
    1344:	88 83       	st	Y, r24
    1346:	82 81       	ldd	r24, Z+2	; 0x02
    1348:	93 81       	ldd	r25, Z+3	; 0x03
    134a:	9b 83       	std	Y+3, r25	; 0x03
    134c:	8a 83       	std	Y+2, r24	; 0x02
    134e:	e0 e0       	ldi	r30, 0x00	; 0
    1350:	f0 e0       	ldi	r31, 0x00	; 0
    1352:	12 96       	adiw	r26, 0x02	; 2
    1354:	8d 91       	ld	r24, X+
    1356:	9c 91       	ld	r25, X
    1358:	13 97       	sbiw	r26, 0x03	; 3
    135a:	00 97       	sbiw	r24, 0x00	; 0
    135c:	19 f0       	breq	.+6      	; 0x1364 <free+0xd4>
    135e:	fd 01       	movw	r30, r26
    1360:	dc 01       	movw	r26, r24
    1362:	f7 cf       	rjmp	.-18     	; 0x1352 <free+0xc2>
    1364:	8d 91       	ld	r24, X+
    1366:	9c 91       	ld	r25, X
    1368:	11 97       	sbiw	r26, 0x01	; 1
    136a:	9d 01       	movw	r18, r26
    136c:	2e 5f       	subi	r18, 0xFE	; 254
    136e:	3f 4f       	sbci	r19, 0xFF	; 255
    1370:	82 0f       	add	r24, r18
    1372:	93 1f       	adc	r25, r19
    1374:	20 91 5f 03 	lds	r18, 0x035F	; 0x80035f <__brkval>
    1378:	30 91 60 03 	lds	r19, 0x0360	; 0x800360 <__brkval+0x1>
    137c:	28 17       	cp	r18, r24
    137e:	39 07       	cpc	r19, r25
    1380:	69 f4       	brne	.+26     	; 0x139c <free+0x10c>
    1382:	30 97       	sbiw	r30, 0x00	; 0
    1384:	29 f4       	brne	.+10     	; 0x1390 <free+0x100>
    1386:	10 92 62 03 	sts	0x0362, r1	; 0x800362 <__flp+0x1>
    138a:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <__flp>
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <free+0x104>
    1390:	13 82       	std	Z+3, r1	; 0x03
    1392:	12 82       	std	Z+2, r1	; 0x02
    1394:	b0 93 60 03 	sts	0x0360, r27	; 0x800360 <__brkval+0x1>
    1398:	a0 93 5f 03 	sts	0x035F, r26	; 0x80035f <__brkval>
    139c:	df 91       	pop	r29
    139e:	cf 91       	pop	r28
    13a0:	08 95       	ret

000013a2 <strnlen_P>:
    13a2:	fc 01       	movw	r30, r24
    13a4:	05 90       	lpm	r0, Z+
    13a6:	61 50       	subi	r22, 0x01	; 1
    13a8:	70 40       	sbci	r23, 0x00	; 0
    13aa:	01 10       	cpse	r0, r1
    13ac:	d8 f7       	brcc	.-10     	; 0x13a4 <strnlen_P+0x2>
    13ae:	80 95       	com	r24
    13b0:	90 95       	com	r25
    13b2:	8e 0f       	add	r24, r30
    13b4:	9f 1f       	adc	r25, r31
    13b6:	08 95       	ret

000013b8 <memset>:
    13b8:	dc 01       	movw	r26, r24
    13ba:	01 c0       	rjmp	.+2      	; 0x13be <memset+0x6>
    13bc:	6d 93       	st	X+, r22
    13be:	41 50       	subi	r20, 0x01	; 1
    13c0:	50 40       	sbci	r21, 0x00	; 0
    13c2:	e0 f7       	brcc	.-8      	; 0x13bc <memset+0x4>
    13c4:	08 95       	ret

000013c6 <strnlen>:
    13c6:	fc 01       	movw	r30, r24
    13c8:	61 50       	subi	r22, 0x01	; 1
    13ca:	70 40       	sbci	r23, 0x00	; 0
    13cc:	01 90       	ld	r0, Z+
    13ce:	01 10       	cpse	r0, r1
    13d0:	d8 f7       	brcc	.-10     	; 0x13c8 <strnlen+0x2>
    13d2:	80 95       	com	r24
    13d4:	90 95       	com	r25
    13d6:	8e 0f       	add	r24, r30
    13d8:	9f 1f       	adc	r25, r31
    13da:	08 95       	ret

000013dc <fputc>:
    13dc:	0f 93       	push	r16
    13de:	1f 93       	push	r17
    13e0:	cf 93       	push	r28
    13e2:	df 93       	push	r29
    13e4:	fb 01       	movw	r30, r22
    13e6:	23 81       	ldd	r18, Z+3	; 0x03
    13e8:	21 fd       	sbrc	r18, 1
    13ea:	03 c0       	rjmp	.+6      	; 0x13f2 <fputc+0x16>
    13ec:	8f ef       	ldi	r24, 0xFF	; 255
    13ee:	9f ef       	ldi	r25, 0xFF	; 255
    13f0:	2c c0       	rjmp	.+88     	; 0x144a <fputc+0x6e>
    13f2:	22 ff       	sbrs	r18, 2
    13f4:	16 c0       	rjmp	.+44     	; 0x1422 <fputc+0x46>
    13f6:	46 81       	ldd	r20, Z+6	; 0x06
    13f8:	57 81       	ldd	r21, Z+7	; 0x07
    13fa:	24 81       	ldd	r18, Z+4	; 0x04
    13fc:	35 81       	ldd	r19, Z+5	; 0x05
    13fe:	42 17       	cp	r20, r18
    1400:	53 07       	cpc	r21, r19
    1402:	44 f4       	brge	.+16     	; 0x1414 <fputc+0x38>
    1404:	a0 81       	ld	r26, Z
    1406:	b1 81       	ldd	r27, Z+1	; 0x01
    1408:	9d 01       	movw	r18, r26
    140a:	2f 5f       	subi	r18, 0xFF	; 255
    140c:	3f 4f       	sbci	r19, 0xFF	; 255
    140e:	31 83       	std	Z+1, r19	; 0x01
    1410:	20 83       	st	Z, r18
    1412:	8c 93       	st	X, r24
    1414:	26 81       	ldd	r18, Z+6	; 0x06
    1416:	37 81       	ldd	r19, Z+7	; 0x07
    1418:	2f 5f       	subi	r18, 0xFF	; 255
    141a:	3f 4f       	sbci	r19, 0xFF	; 255
    141c:	37 83       	std	Z+7, r19	; 0x07
    141e:	26 83       	std	Z+6, r18	; 0x06
    1420:	14 c0       	rjmp	.+40     	; 0x144a <fputc+0x6e>
    1422:	8b 01       	movw	r16, r22
    1424:	ec 01       	movw	r28, r24
    1426:	fb 01       	movw	r30, r22
    1428:	00 84       	ldd	r0, Z+8	; 0x08
    142a:	f1 85       	ldd	r31, Z+9	; 0x09
    142c:	e0 2d       	mov	r30, r0
    142e:	09 95       	icall
    1430:	89 2b       	or	r24, r25
    1432:	e1 f6       	brne	.-72     	; 0x13ec <fputc+0x10>
    1434:	d8 01       	movw	r26, r16
    1436:	16 96       	adiw	r26, 0x06	; 6
    1438:	8d 91       	ld	r24, X+
    143a:	9c 91       	ld	r25, X
    143c:	17 97       	sbiw	r26, 0x07	; 7
    143e:	01 96       	adiw	r24, 0x01	; 1
    1440:	17 96       	adiw	r26, 0x07	; 7
    1442:	9c 93       	st	X, r25
    1444:	8e 93       	st	-X, r24
    1446:	16 97       	sbiw	r26, 0x06	; 6
    1448:	ce 01       	movw	r24, r28
    144a:	df 91       	pop	r29
    144c:	cf 91       	pop	r28
    144e:	1f 91       	pop	r17
    1450:	0f 91       	pop	r16
    1452:	08 95       	ret

00001454 <__ultoa_invert>:
    1454:	fa 01       	movw	r30, r20
    1456:	aa 27       	eor	r26, r26
    1458:	28 30       	cpi	r18, 0x08	; 8
    145a:	51 f1       	breq	.+84     	; 0x14b0 <__ultoa_invert+0x5c>
    145c:	20 31       	cpi	r18, 0x10	; 16
    145e:	81 f1       	breq	.+96     	; 0x14c0 <__ultoa_invert+0x6c>
    1460:	e8 94       	clt
    1462:	6f 93       	push	r22
    1464:	6e 7f       	andi	r22, 0xFE	; 254
    1466:	6e 5f       	subi	r22, 0xFE	; 254
    1468:	7f 4f       	sbci	r23, 0xFF	; 255
    146a:	8f 4f       	sbci	r24, 0xFF	; 255
    146c:	9f 4f       	sbci	r25, 0xFF	; 255
    146e:	af 4f       	sbci	r26, 0xFF	; 255
    1470:	b1 e0       	ldi	r27, 0x01	; 1
    1472:	3e d0       	rcall	.+124    	; 0x14f0 <__ultoa_invert+0x9c>
    1474:	b4 e0       	ldi	r27, 0x04	; 4
    1476:	3c d0       	rcall	.+120    	; 0x14f0 <__ultoa_invert+0x9c>
    1478:	67 0f       	add	r22, r23
    147a:	78 1f       	adc	r23, r24
    147c:	89 1f       	adc	r24, r25
    147e:	9a 1f       	adc	r25, r26
    1480:	a1 1d       	adc	r26, r1
    1482:	68 0f       	add	r22, r24
    1484:	79 1f       	adc	r23, r25
    1486:	8a 1f       	adc	r24, r26
    1488:	91 1d       	adc	r25, r1
    148a:	a1 1d       	adc	r26, r1
    148c:	6a 0f       	add	r22, r26
    148e:	71 1d       	adc	r23, r1
    1490:	81 1d       	adc	r24, r1
    1492:	91 1d       	adc	r25, r1
    1494:	a1 1d       	adc	r26, r1
    1496:	20 d0       	rcall	.+64     	; 0x14d8 <__ultoa_invert+0x84>
    1498:	09 f4       	brne	.+2      	; 0x149c <__ultoa_invert+0x48>
    149a:	68 94       	set
    149c:	3f 91       	pop	r19
    149e:	2a e0       	ldi	r18, 0x0A	; 10
    14a0:	26 9f       	mul	r18, r22
    14a2:	11 24       	eor	r1, r1
    14a4:	30 19       	sub	r19, r0
    14a6:	30 5d       	subi	r19, 0xD0	; 208
    14a8:	31 93       	st	Z+, r19
    14aa:	de f6       	brtc	.-74     	; 0x1462 <__ultoa_invert+0xe>
    14ac:	cf 01       	movw	r24, r30
    14ae:	08 95       	ret
    14b0:	46 2f       	mov	r20, r22
    14b2:	47 70       	andi	r20, 0x07	; 7
    14b4:	40 5d       	subi	r20, 0xD0	; 208
    14b6:	41 93       	st	Z+, r20
    14b8:	b3 e0       	ldi	r27, 0x03	; 3
    14ba:	0f d0       	rcall	.+30     	; 0x14da <__ultoa_invert+0x86>
    14bc:	c9 f7       	brne	.-14     	; 0x14b0 <__ultoa_invert+0x5c>
    14be:	f6 cf       	rjmp	.-20     	; 0x14ac <__ultoa_invert+0x58>
    14c0:	46 2f       	mov	r20, r22
    14c2:	4f 70       	andi	r20, 0x0F	; 15
    14c4:	40 5d       	subi	r20, 0xD0	; 208
    14c6:	4a 33       	cpi	r20, 0x3A	; 58
    14c8:	18 f0       	brcs	.+6      	; 0x14d0 <__ultoa_invert+0x7c>
    14ca:	49 5d       	subi	r20, 0xD9	; 217
    14cc:	31 fd       	sbrc	r19, 1
    14ce:	40 52       	subi	r20, 0x20	; 32
    14d0:	41 93       	st	Z+, r20
    14d2:	02 d0       	rcall	.+4      	; 0x14d8 <__ultoa_invert+0x84>
    14d4:	a9 f7       	brne	.-22     	; 0x14c0 <__ultoa_invert+0x6c>
    14d6:	ea cf       	rjmp	.-44     	; 0x14ac <__ultoa_invert+0x58>
    14d8:	b4 e0       	ldi	r27, 0x04	; 4
    14da:	a6 95       	lsr	r26
    14dc:	97 95       	ror	r25
    14de:	87 95       	ror	r24
    14e0:	77 95       	ror	r23
    14e2:	67 95       	ror	r22
    14e4:	ba 95       	dec	r27
    14e6:	c9 f7       	brne	.-14     	; 0x14da <__ultoa_invert+0x86>
    14e8:	00 97       	sbiw	r24, 0x00	; 0
    14ea:	61 05       	cpc	r22, r1
    14ec:	71 05       	cpc	r23, r1
    14ee:	08 95       	ret
    14f0:	9b 01       	movw	r18, r22
    14f2:	ac 01       	movw	r20, r24
    14f4:	0a 2e       	mov	r0, r26
    14f6:	06 94       	lsr	r0
    14f8:	57 95       	ror	r21
    14fa:	47 95       	ror	r20
    14fc:	37 95       	ror	r19
    14fe:	27 95       	ror	r18
    1500:	ba 95       	dec	r27
    1502:	c9 f7       	brne	.-14     	; 0x14f6 <__ultoa_invert+0xa2>
    1504:	62 0f       	add	r22, r18
    1506:	73 1f       	adc	r23, r19
    1508:	84 1f       	adc	r24, r20
    150a:	95 1f       	adc	r25, r21
    150c:	a0 1d       	adc	r26, r0
    150e:	08 95       	ret

00001510 <__prologue_saves__>:
    1510:	2f 92       	push	r2
    1512:	3f 92       	push	r3
    1514:	4f 92       	push	r4
    1516:	5f 92       	push	r5
    1518:	6f 92       	push	r6
    151a:	7f 92       	push	r7
    151c:	8f 92       	push	r8
    151e:	9f 92       	push	r9
    1520:	af 92       	push	r10
    1522:	bf 92       	push	r11
    1524:	cf 92       	push	r12
    1526:	df 92       	push	r13
    1528:	ef 92       	push	r14
    152a:	ff 92       	push	r15
    152c:	0f 93       	push	r16
    152e:	1f 93       	push	r17
    1530:	cf 93       	push	r28
    1532:	df 93       	push	r29
    1534:	cd b7       	in	r28, 0x3d	; 61
    1536:	de b7       	in	r29, 0x3e	; 62
    1538:	ca 1b       	sub	r28, r26
    153a:	db 0b       	sbc	r29, r27
    153c:	0f b6       	in	r0, 0x3f	; 63
    153e:	f8 94       	cli
    1540:	de bf       	out	0x3e, r29	; 62
    1542:	0f be       	out	0x3f, r0	; 63
    1544:	cd bf       	out	0x3d, r28	; 61
    1546:	09 94       	ijmp

00001548 <__epilogue_restores__>:
    1548:	2a 88       	ldd	r2, Y+18	; 0x12
    154a:	39 88       	ldd	r3, Y+17	; 0x11
    154c:	48 88       	ldd	r4, Y+16	; 0x10
    154e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1550:	6e 84       	ldd	r6, Y+14	; 0x0e
    1552:	7d 84       	ldd	r7, Y+13	; 0x0d
    1554:	8c 84       	ldd	r8, Y+12	; 0x0c
    1556:	9b 84       	ldd	r9, Y+11	; 0x0b
    1558:	aa 84       	ldd	r10, Y+10	; 0x0a
    155a:	b9 84       	ldd	r11, Y+9	; 0x09
    155c:	c8 84       	ldd	r12, Y+8	; 0x08
    155e:	df 80       	ldd	r13, Y+7	; 0x07
    1560:	ee 80       	ldd	r14, Y+6	; 0x06
    1562:	fd 80       	ldd	r15, Y+5	; 0x05
    1564:	0c 81       	ldd	r16, Y+4	; 0x04
    1566:	1b 81       	ldd	r17, Y+3	; 0x03
    1568:	aa 81       	ldd	r26, Y+2	; 0x02
    156a:	b9 81       	ldd	r27, Y+1	; 0x01
    156c:	ce 0f       	add	r28, r30
    156e:	d1 1d       	adc	r29, r1
    1570:	0f b6       	in	r0, 0x3f	; 63
    1572:	f8 94       	cli
    1574:	de bf       	out	0x3e, r29	; 62
    1576:	0f be       	out	0x3f, r0	; 63
    1578:	cd bf       	out	0x3d, r28	; 61
    157a:	ed 01       	movw	r28, r26
    157c:	08 95       	ret

0000157e <_exit>:
    157e:	f8 94       	cli

00001580 <__stop_program>:
    1580:	ff cf       	rjmp	.-2      	; 0x1580 <__stop_program>
